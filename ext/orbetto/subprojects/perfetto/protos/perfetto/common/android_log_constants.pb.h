// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/common/android_log_constants.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2fcommon_2fandroid_5flog_5fconstants_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2fcommon_2fandroid_5flog_5fconstants_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2fcommon_2fandroid_5flog_5fconstants_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_protos_2fperfetto_2fcommon_2fandroid_5flog_5fconstants_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_protos_2fperfetto_2fcommon_2fandroid_5flog_5fconstants_2eproto;
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

namespace perfetto {
namespace protos {
enum AndroidLogId : int {
  LID_DEFAULT = 0,
  LID_RADIO = 1,
  LID_EVENTS = 2,
  LID_SYSTEM = 3,
  LID_CRASH = 4,
  LID_STATS = 5,
  LID_SECURITY = 6,
  LID_KERNEL = 7,
};

bool AndroidLogId_IsValid(int value);
constexpr AndroidLogId AndroidLogId_MIN = static_cast<AndroidLogId>(0);
constexpr AndroidLogId AndroidLogId_MAX = static_cast<AndroidLogId>(7);
constexpr int AndroidLogId_ARRAYSIZE = 7 + 1;
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
AndroidLogId_descriptor();
template <typename T>
const std::string& AndroidLogId_Name(T value) {
  static_assert(std::is_same<T, AndroidLogId>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to AndroidLogId_Name().");
  return AndroidLogId_Name(static_cast<AndroidLogId>(value));
}
template <>
inline const std::string& AndroidLogId_Name(AndroidLogId value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfDenseEnum<AndroidLogId_descriptor,
                                                 0, 7>(
      static_cast<int>(value));
}
inline bool AndroidLogId_Parse(absl::string_view name, AndroidLogId* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<AndroidLogId>(
      AndroidLogId_descriptor(), name, value);
}
enum AndroidLogPriority : int {
  PRIO_UNSPECIFIED = 0,
  PRIO_UNUSED = 1,
  PRIO_VERBOSE = 2,
  PRIO_DEBUG = 3,
  PRIO_INFO = 4,
  PRIO_WARN = 5,
  PRIO_ERROR = 6,
  PRIO_FATAL = 7,
};

bool AndroidLogPriority_IsValid(int value);
constexpr AndroidLogPriority AndroidLogPriority_MIN = static_cast<AndroidLogPriority>(0);
constexpr AndroidLogPriority AndroidLogPriority_MAX = static_cast<AndroidLogPriority>(7);
constexpr int AndroidLogPriority_ARRAYSIZE = 7 + 1;
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
AndroidLogPriority_descriptor();
template <typename T>
const std::string& AndroidLogPriority_Name(T value) {
  static_assert(std::is_same<T, AndroidLogPriority>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to AndroidLogPriority_Name().");
  return AndroidLogPriority_Name(static_cast<AndroidLogPriority>(value));
}
template <>
inline const std::string& AndroidLogPriority_Name(AndroidLogPriority value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfDenseEnum<AndroidLogPriority_descriptor,
                                                 0, 7>(
      static_cast<int>(value));
}
inline bool AndroidLogPriority_Parse(absl::string_view name, AndroidLogPriority* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<AndroidLogPriority>(
      AndroidLogPriority_descriptor(), name, value);
}

// ===================================================================



// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto


PROTOBUF_NAMESPACE_OPEN

template <>
struct is_proto_enum<::perfetto::protos::AndroidLogId> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::perfetto::protos::AndroidLogId>() {
  return ::perfetto::protos::AndroidLogId_descriptor();
}
template <>
struct is_proto_enum<::perfetto::protos::AndroidLogPriority> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::perfetto::protos::AndroidLogPriority>() {
  return ::perfetto::protos::AndroidLogPriority_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2fcommon_2fandroid_5flog_5fconstants_2eproto_2epb_2eh
