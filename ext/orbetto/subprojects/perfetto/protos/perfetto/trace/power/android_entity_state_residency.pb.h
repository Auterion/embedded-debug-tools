// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/power/android_entity_state_residency.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto;
namespace perfetto {
namespace protos {
class EntityStateResidency;
struct EntityStateResidencyDefaultTypeInternal;
extern EntityStateResidencyDefaultTypeInternal _EntityStateResidency_default_instance_;
class EntityStateResidency_PowerEntityState;
struct EntityStateResidency_PowerEntityStateDefaultTypeInternal;
extern EntityStateResidency_PowerEntityStateDefaultTypeInternal _EntityStateResidency_PowerEntityState_default_instance_;
class EntityStateResidency_StateResidency;
struct EntityStateResidency_StateResidencyDefaultTypeInternal;
extern EntityStateResidency_StateResidencyDefaultTypeInternal _EntityStateResidency_StateResidency_default_instance_;
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template <>
::perfetto::protos::EntityStateResidency* Arena::CreateMaybeMessage<::perfetto::protos::EntityStateResidency>(Arena*);
template <>
::perfetto::protos::EntityStateResidency_PowerEntityState* Arena::CreateMaybeMessage<::perfetto::protos::EntityStateResidency_PowerEntityState>(Arena*);
template <>
::perfetto::protos::EntityStateResidency_StateResidency* Arena::CreateMaybeMessage<::perfetto::protos::EntityStateResidency_StateResidency>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace perfetto {
namespace protos {

// ===================================================================


// -------------------------------------------------------------------

class EntityStateResidency_PowerEntityState final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.EntityStateResidency.PowerEntityState) */ {
 public:
  inline EntityStateResidency_PowerEntityState() : EntityStateResidency_PowerEntityState(nullptr) {}
  ~EntityStateResidency_PowerEntityState() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EntityStateResidency_PowerEntityState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EntityStateResidency_PowerEntityState(const EntityStateResidency_PowerEntityState& from);
  EntityStateResidency_PowerEntityState(EntityStateResidency_PowerEntityState&& from) noexcept
    : EntityStateResidency_PowerEntityState() {
    *this = ::std::move(from);
  }

  inline EntityStateResidency_PowerEntityState& operator=(const EntityStateResidency_PowerEntityState& from) {
    CopyFrom(from);
    return *this;
  }
  inline EntityStateResidency_PowerEntityState& operator=(EntityStateResidency_PowerEntityState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EntityStateResidency_PowerEntityState& default_instance() {
    return *internal_default_instance();
  }
  static inline const EntityStateResidency_PowerEntityState* internal_default_instance() {
    return reinterpret_cast<const EntityStateResidency_PowerEntityState*>(
               &_EntityStateResidency_PowerEntityState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(EntityStateResidency_PowerEntityState& a, EntityStateResidency_PowerEntityState& b) {
    a.Swap(&b);
  }
  inline void Swap(EntityStateResidency_PowerEntityState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EntityStateResidency_PowerEntityState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EntityStateResidency_PowerEntityState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EntityStateResidency_PowerEntityState>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const EntityStateResidency_PowerEntityState& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const EntityStateResidency_PowerEntityState& from) {
    EntityStateResidency_PowerEntityState::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EntityStateResidency_PowerEntityState* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.EntityStateResidency.PowerEntityState";
  }
  protected:
  explicit EntityStateResidency_PowerEntityState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityNameFieldNumber = 3,
    kStateNameFieldNumber = 4,
    kEntityIndexFieldNumber = 1,
    kStateIndexFieldNumber = 2,
  };
  // optional string entity_name = 3;
  bool has_entity_name() const;
  void clear_entity_name() ;
  const std::string& entity_name() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_entity_name(Arg_&& arg, Args_... args);
  std::string* mutable_entity_name();
  PROTOBUF_NODISCARD std::string* release_entity_name();
  void set_allocated_entity_name(std::string* ptr);

  private:
  const std::string& _internal_entity_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entity_name(
      const std::string& value);
  std::string* _internal_mutable_entity_name();

  public:
  // optional string state_name = 4;
  bool has_state_name() const;
  void clear_state_name() ;
  const std::string& state_name() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_state_name(Arg_&& arg, Args_... args);
  std::string* mutable_state_name();
  PROTOBUF_NODISCARD std::string* release_state_name();
  void set_allocated_state_name(std::string* ptr);

  private:
  const std::string& _internal_state_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_state_name(
      const std::string& value);
  std::string* _internal_mutable_state_name();

  public:
  // optional int32 entity_index = 1;
  bool has_entity_index() const;
  void clear_entity_index() ;
  ::int32_t entity_index() const;
  void set_entity_index(::int32_t value);

  private:
  ::int32_t _internal_entity_index() const;
  void _internal_set_entity_index(::int32_t value);

  public:
  // optional int32 state_index = 2;
  bool has_state_index() const;
  void clear_state_index() ;
  ::int32_t state_index() const;
  void set_state_index(::int32_t value);

  private:
  ::int32_t _internal_state_index() const;
  void _internal_set_state_index(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.EntityStateResidency.PowerEntityState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr entity_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr state_name_;
    ::int32_t entity_index_;
    ::int32_t state_index_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto;
};// -------------------------------------------------------------------

class EntityStateResidency_StateResidency final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.EntityStateResidency.StateResidency) */ {
 public:
  inline EntityStateResidency_StateResidency() : EntityStateResidency_StateResidency(nullptr) {}
  ~EntityStateResidency_StateResidency() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EntityStateResidency_StateResidency(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EntityStateResidency_StateResidency(const EntityStateResidency_StateResidency& from);
  EntityStateResidency_StateResidency(EntityStateResidency_StateResidency&& from) noexcept
    : EntityStateResidency_StateResidency() {
    *this = ::std::move(from);
  }

  inline EntityStateResidency_StateResidency& operator=(const EntityStateResidency_StateResidency& from) {
    CopyFrom(from);
    return *this;
  }
  inline EntityStateResidency_StateResidency& operator=(EntityStateResidency_StateResidency&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EntityStateResidency_StateResidency& default_instance() {
    return *internal_default_instance();
  }
  static inline const EntityStateResidency_StateResidency* internal_default_instance() {
    return reinterpret_cast<const EntityStateResidency_StateResidency*>(
               &_EntityStateResidency_StateResidency_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(EntityStateResidency_StateResidency& a, EntityStateResidency_StateResidency& b) {
    a.Swap(&b);
  }
  inline void Swap(EntityStateResidency_StateResidency* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EntityStateResidency_StateResidency* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EntityStateResidency_StateResidency* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EntityStateResidency_StateResidency>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const EntityStateResidency_StateResidency& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const EntityStateResidency_StateResidency& from) {
    EntityStateResidency_StateResidency::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EntityStateResidency_StateResidency* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.EntityStateResidency.StateResidency";
  }
  protected:
  explicit EntityStateResidency_StateResidency(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityIndexFieldNumber = 1,
    kStateIndexFieldNumber = 2,
    kTotalTimeInStateMsFieldNumber = 3,
    kTotalStateEntryCountFieldNumber = 4,
    kLastEntryTimestampMsFieldNumber = 5,
  };
  // optional int32 entity_index = 1;
  bool has_entity_index() const;
  void clear_entity_index() ;
  ::int32_t entity_index() const;
  void set_entity_index(::int32_t value);

  private:
  ::int32_t _internal_entity_index() const;
  void _internal_set_entity_index(::int32_t value);

  public:
  // optional int32 state_index = 2;
  bool has_state_index() const;
  void clear_state_index() ;
  ::int32_t state_index() const;
  void set_state_index(::int32_t value);

  private:
  ::int32_t _internal_state_index() const;
  void _internal_set_state_index(::int32_t value);

  public:
  // optional uint64 total_time_in_state_ms = 3;
  bool has_total_time_in_state_ms() const;
  void clear_total_time_in_state_ms() ;
  ::uint64_t total_time_in_state_ms() const;
  void set_total_time_in_state_ms(::uint64_t value);

  private:
  ::uint64_t _internal_total_time_in_state_ms() const;
  void _internal_set_total_time_in_state_ms(::uint64_t value);

  public:
  // optional uint64 total_state_entry_count = 4;
  bool has_total_state_entry_count() const;
  void clear_total_state_entry_count() ;
  ::uint64_t total_state_entry_count() const;
  void set_total_state_entry_count(::uint64_t value);

  private:
  ::uint64_t _internal_total_state_entry_count() const;
  void _internal_set_total_state_entry_count(::uint64_t value);

  public:
  // optional uint64 last_entry_timestamp_ms = 5;
  bool has_last_entry_timestamp_ms() const;
  void clear_last_entry_timestamp_ms() ;
  ::uint64_t last_entry_timestamp_ms() const;
  void set_last_entry_timestamp_ms(::uint64_t value);

  private:
  ::uint64_t _internal_last_entry_timestamp_ms() const;
  void _internal_set_last_entry_timestamp_ms(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.EntityStateResidency.StateResidency)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::int32_t entity_index_;
    ::int32_t state_index_;
    ::uint64_t total_time_in_state_ms_;
    ::uint64_t total_state_entry_count_;
    ::uint64_t last_entry_timestamp_ms_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto;
};// -------------------------------------------------------------------

class EntityStateResidency final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.EntityStateResidency) */ {
 public:
  inline EntityStateResidency() : EntityStateResidency(nullptr) {}
  ~EntityStateResidency() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EntityStateResidency(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EntityStateResidency(const EntityStateResidency& from);
  EntityStateResidency(EntityStateResidency&& from) noexcept
    : EntityStateResidency() {
    *this = ::std::move(from);
  }

  inline EntityStateResidency& operator=(const EntityStateResidency& from) {
    CopyFrom(from);
    return *this;
  }
  inline EntityStateResidency& operator=(EntityStateResidency&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EntityStateResidency& default_instance() {
    return *internal_default_instance();
  }
  static inline const EntityStateResidency* internal_default_instance() {
    return reinterpret_cast<const EntityStateResidency*>(
               &_EntityStateResidency_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(EntityStateResidency& a, EntityStateResidency& b) {
    a.Swap(&b);
  }
  inline void Swap(EntityStateResidency* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EntityStateResidency* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EntityStateResidency* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EntityStateResidency>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const EntityStateResidency& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const EntityStateResidency& from) {
    EntityStateResidency::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EntityStateResidency* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.EntityStateResidency";
  }
  protected:
  explicit EntityStateResidency(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef EntityStateResidency_PowerEntityState PowerEntityState;
  typedef EntityStateResidency_StateResidency StateResidency;

  // accessors -------------------------------------------------------

  enum : int {
    kPowerEntityStateFieldNumber = 1,
    kResidencyFieldNumber = 2,
  };
  // repeated .perfetto.protos.EntityStateResidency.PowerEntityState power_entity_state = 1;
  int power_entity_state_size() const;
  private:
  int _internal_power_entity_state_size() const;

  public:
  void clear_power_entity_state() ;
  ::perfetto::protos::EntityStateResidency_PowerEntityState* mutable_power_entity_state(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::EntityStateResidency_PowerEntityState >*
      mutable_power_entity_state();
  private:
  const ::perfetto::protos::EntityStateResidency_PowerEntityState& _internal_power_entity_state(int index) const;
  ::perfetto::protos::EntityStateResidency_PowerEntityState* _internal_add_power_entity_state();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::EntityStateResidency_PowerEntityState>& _internal_power_entity_state() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::EntityStateResidency_PowerEntityState>* _internal_mutable_power_entity_state();
  public:
  const ::perfetto::protos::EntityStateResidency_PowerEntityState& power_entity_state(int index) const;
  ::perfetto::protos::EntityStateResidency_PowerEntityState* add_power_entity_state();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::EntityStateResidency_PowerEntityState >&
      power_entity_state() const;
  // repeated .perfetto.protos.EntityStateResidency.StateResidency residency = 2;
  int residency_size() const;
  private:
  int _internal_residency_size() const;

  public:
  void clear_residency() ;
  ::perfetto::protos::EntityStateResidency_StateResidency* mutable_residency(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::EntityStateResidency_StateResidency >*
      mutable_residency();
  private:
  const ::perfetto::protos::EntityStateResidency_StateResidency& _internal_residency(int index) const;
  ::perfetto::protos::EntityStateResidency_StateResidency* _internal_add_residency();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::EntityStateResidency_StateResidency>& _internal_residency() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::EntityStateResidency_StateResidency>* _internal_mutable_residency();
  public:
  const ::perfetto::protos::EntityStateResidency_StateResidency& residency(int index) const;
  ::perfetto::protos::EntityStateResidency_StateResidency* add_residency();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::EntityStateResidency_StateResidency >&
      residency() const;
  // @@protoc_insertion_point(class_scope:perfetto.protos.EntityStateResidency)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::EntityStateResidency_PowerEntityState > power_entity_state_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::EntityStateResidency_StateResidency > residency_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EntityStateResidency_PowerEntityState

// optional int32 entity_index = 1;
inline bool EntityStateResidency_PowerEntityState::has_entity_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void EntityStateResidency_PowerEntityState::clear_entity_index() {
  _impl_.entity_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t EntityStateResidency_PowerEntityState::entity_index() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.EntityStateResidency.PowerEntityState.entity_index)
  return _internal_entity_index();
}
inline void EntityStateResidency_PowerEntityState::set_entity_index(::int32_t value) {
  _internal_set_entity_index(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.EntityStateResidency.PowerEntityState.entity_index)
}
inline ::int32_t EntityStateResidency_PowerEntityState::_internal_entity_index() const {
  return _impl_.entity_index_;
}
inline void EntityStateResidency_PowerEntityState::_internal_set_entity_index(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.entity_index_ = value;
}

// optional int32 state_index = 2;
inline bool EntityStateResidency_PowerEntityState::has_state_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void EntityStateResidency_PowerEntityState::clear_state_index() {
  _impl_.state_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t EntityStateResidency_PowerEntityState::state_index() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.EntityStateResidency.PowerEntityState.state_index)
  return _internal_state_index();
}
inline void EntityStateResidency_PowerEntityState::set_state_index(::int32_t value) {
  _internal_set_state_index(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.EntityStateResidency.PowerEntityState.state_index)
}
inline ::int32_t EntityStateResidency_PowerEntityState::_internal_state_index() const {
  return _impl_.state_index_;
}
inline void EntityStateResidency_PowerEntityState::_internal_set_state_index(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.state_index_ = value;
}

// optional string entity_name = 3;
inline bool EntityStateResidency_PowerEntityState::has_entity_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void EntityStateResidency_PowerEntityState::clear_entity_name() {
  _impl_.entity_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& EntityStateResidency_PowerEntityState::entity_name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.EntityStateResidency.PowerEntityState.entity_name)
  return _internal_entity_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EntityStateResidency_PowerEntityState::set_entity_name(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:perfetto.protos.EntityStateResidency.PowerEntityState.entity_name)
}
inline std::string* EntityStateResidency_PowerEntityState::mutable_entity_name() {
  std::string* _s = _internal_mutable_entity_name();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.EntityStateResidency.PowerEntityState.entity_name)
  return _s;
}
inline const std::string& EntityStateResidency_PowerEntityState::_internal_entity_name() const {
  return _impl_.entity_name_.Get();
}
inline void EntityStateResidency_PowerEntityState::_internal_set_entity_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.entity_name_.Set(value, GetArenaForAllocation());
}
inline std::string* EntityStateResidency_PowerEntityState::_internal_mutable_entity_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.entity_name_.Mutable( GetArenaForAllocation());
}
inline std::string* EntityStateResidency_PowerEntityState::release_entity_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.EntityStateResidency.PowerEntityState.entity_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.entity_name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.entity_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EntityStateResidency_PowerEntityState::set_allocated_entity_name(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.entity_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.entity_name_.IsDefault()) {
          _impl_.entity_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.EntityStateResidency.PowerEntityState.entity_name)
}

// optional string state_name = 4;
inline bool EntityStateResidency_PowerEntityState::has_state_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void EntityStateResidency_PowerEntityState::clear_state_name() {
  _impl_.state_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& EntityStateResidency_PowerEntityState::state_name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.EntityStateResidency.PowerEntityState.state_name)
  return _internal_state_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EntityStateResidency_PowerEntityState::set_state_name(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.state_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:perfetto.protos.EntityStateResidency.PowerEntityState.state_name)
}
inline std::string* EntityStateResidency_PowerEntityState::mutable_state_name() {
  std::string* _s = _internal_mutable_state_name();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.EntityStateResidency.PowerEntityState.state_name)
  return _s;
}
inline const std::string& EntityStateResidency_PowerEntityState::_internal_state_name() const {
  return _impl_.state_name_.Get();
}
inline void EntityStateResidency_PowerEntityState::_internal_set_state_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;


  _impl_.state_name_.Set(value, GetArenaForAllocation());
}
inline std::string* EntityStateResidency_PowerEntityState::_internal_mutable_state_name() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.state_name_.Mutable( GetArenaForAllocation());
}
inline std::string* EntityStateResidency_PowerEntityState::release_state_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.EntityStateResidency.PowerEntityState.state_name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.state_name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.state_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EntityStateResidency_PowerEntityState::set_allocated_state_name(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.state_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.state_name_.IsDefault()) {
          _impl_.state_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.EntityStateResidency.PowerEntityState.state_name)
}

// -------------------------------------------------------------------

// EntityStateResidency_StateResidency

// optional int32 entity_index = 1;
inline bool EntityStateResidency_StateResidency::has_entity_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void EntityStateResidency_StateResidency::clear_entity_index() {
  _impl_.entity_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t EntityStateResidency_StateResidency::entity_index() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.EntityStateResidency.StateResidency.entity_index)
  return _internal_entity_index();
}
inline void EntityStateResidency_StateResidency::set_entity_index(::int32_t value) {
  _internal_set_entity_index(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.EntityStateResidency.StateResidency.entity_index)
}
inline ::int32_t EntityStateResidency_StateResidency::_internal_entity_index() const {
  return _impl_.entity_index_;
}
inline void EntityStateResidency_StateResidency::_internal_set_entity_index(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_index_ = value;
}

// optional int32 state_index = 2;
inline bool EntityStateResidency_StateResidency::has_state_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void EntityStateResidency_StateResidency::clear_state_index() {
  _impl_.state_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t EntityStateResidency_StateResidency::state_index() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.EntityStateResidency.StateResidency.state_index)
  return _internal_state_index();
}
inline void EntityStateResidency_StateResidency::set_state_index(::int32_t value) {
  _internal_set_state_index(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.EntityStateResidency.StateResidency.state_index)
}
inline ::int32_t EntityStateResidency_StateResidency::_internal_state_index() const {
  return _impl_.state_index_;
}
inline void EntityStateResidency_StateResidency::_internal_set_state_index(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.state_index_ = value;
}

// optional uint64 total_time_in_state_ms = 3;
inline bool EntityStateResidency_StateResidency::has_total_time_in_state_ms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void EntityStateResidency_StateResidency::clear_total_time_in_state_ms() {
  _impl_.total_time_in_state_ms_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t EntityStateResidency_StateResidency::total_time_in_state_ms() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.EntityStateResidency.StateResidency.total_time_in_state_ms)
  return _internal_total_time_in_state_ms();
}
inline void EntityStateResidency_StateResidency::set_total_time_in_state_ms(::uint64_t value) {
  _internal_set_total_time_in_state_ms(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.EntityStateResidency.StateResidency.total_time_in_state_ms)
}
inline ::uint64_t EntityStateResidency_StateResidency::_internal_total_time_in_state_ms() const {
  return _impl_.total_time_in_state_ms_;
}
inline void EntityStateResidency_StateResidency::_internal_set_total_time_in_state_ms(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.total_time_in_state_ms_ = value;
}

// optional uint64 total_state_entry_count = 4;
inline bool EntityStateResidency_StateResidency::has_total_state_entry_count() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void EntityStateResidency_StateResidency::clear_total_state_entry_count() {
  _impl_.total_state_entry_count_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint64_t EntityStateResidency_StateResidency::total_state_entry_count() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.EntityStateResidency.StateResidency.total_state_entry_count)
  return _internal_total_state_entry_count();
}
inline void EntityStateResidency_StateResidency::set_total_state_entry_count(::uint64_t value) {
  _internal_set_total_state_entry_count(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.EntityStateResidency.StateResidency.total_state_entry_count)
}
inline ::uint64_t EntityStateResidency_StateResidency::_internal_total_state_entry_count() const {
  return _impl_.total_state_entry_count_;
}
inline void EntityStateResidency_StateResidency::_internal_set_total_state_entry_count(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.total_state_entry_count_ = value;
}

// optional uint64 last_entry_timestamp_ms = 5;
inline bool EntityStateResidency_StateResidency::has_last_entry_timestamp_ms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void EntityStateResidency_StateResidency::clear_last_entry_timestamp_ms() {
  _impl_.last_entry_timestamp_ms_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint64_t EntityStateResidency_StateResidency::last_entry_timestamp_ms() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.EntityStateResidency.StateResidency.last_entry_timestamp_ms)
  return _internal_last_entry_timestamp_ms();
}
inline void EntityStateResidency_StateResidency::set_last_entry_timestamp_ms(::uint64_t value) {
  _internal_set_last_entry_timestamp_ms(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.EntityStateResidency.StateResidency.last_entry_timestamp_ms)
}
inline ::uint64_t EntityStateResidency_StateResidency::_internal_last_entry_timestamp_ms() const {
  return _impl_.last_entry_timestamp_ms_;
}
inline void EntityStateResidency_StateResidency::_internal_set_last_entry_timestamp_ms(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.last_entry_timestamp_ms_ = value;
}

// -------------------------------------------------------------------

// EntityStateResidency

// repeated .perfetto.protos.EntityStateResidency.PowerEntityState power_entity_state = 1;
inline int EntityStateResidency::_internal_power_entity_state_size() const {
  return _impl_.power_entity_state_.size();
}
inline int EntityStateResidency::power_entity_state_size() const {
  return _internal_power_entity_state_size();
}
inline void EntityStateResidency::clear_power_entity_state() {
  _internal_mutable_power_entity_state()->Clear();
}
inline ::perfetto::protos::EntityStateResidency_PowerEntityState* EntityStateResidency::mutable_power_entity_state(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.EntityStateResidency.power_entity_state)
  return _internal_mutable_power_entity_state()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::EntityStateResidency_PowerEntityState >*
EntityStateResidency::mutable_power_entity_state() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.EntityStateResidency.power_entity_state)
  return _internal_mutable_power_entity_state();
}
inline const ::perfetto::protos::EntityStateResidency_PowerEntityState& EntityStateResidency::_internal_power_entity_state(int index) const {
  return _internal_power_entity_state().Get(index);
}
inline const ::perfetto::protos::EntityStateResidency_PowerEntityState& EntityStateResidency::power_entity_state(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.EntityStateResidency.power_entity_state)
  return _internal_power_entity_state(index);
}
inline ::perfetto::protos::EntityStateResidency_PowerEntityState* EntityStateResidency::_internal_add_power_entity_state() {
  return _internal_mutable_power_entity_state()->Add();
}
inline ::perfetto::protos::EntityStateResidency_PowerEntityState* EntityStateResidency::add_power_entity_state() {
  ::perfetto::protos::EntityStateResidency_PowerEntityState* _add = _internal_add_power_entity_state();
  // @@protoc_insertion_point(field_add:perfetto.protos.EntityStateResidency.power_entity_state)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::EntityStateResidency_PowerEntityState >&
EntityStateResidency::power_entity_state() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.EntityStateResidency.power_entity_state)
  return _internal_power_entity_state();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::EntityStateResidency_PowerEntityState>&
EntityStateResidency::_internal_power_entity_state() const {
  return _impl_.power_entity_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::EntityStateResidency_PowerEntityState>*
EntityStateResidency::_internal_mutable_power_entity_state() {
  return &_impl_.power_entity_state_;
}

// repeated .perfetto.protos.EntityStateResidency.StateResidency residency = 2;
inline int EntityStateResidency::_internal_residency_size() const {
  return _impl_.residency_.size();
}
inline int EntityStateResidency::residency_size() const {
  return _internal_residency_size();
}
inline void EntityStateResidency::clear_residency() {
  _internal_mutable_residency()->Clear();
}
inline ::perfetto::protos::EntityStateResidency_StateResidency* EntityStateResidency::mutable_residency(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.EntityStateResidency.residency)
  return _internal_mutable_residency()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::EntityStateResidency_StateResidency >*
EntityStateResidency::mutable_residency() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.EntityStateResidency.residency)
  return _internal_mutable_residency();
}
inline const ::perfetto::protos::EntityStateResidency_StateResidency& EntityStateResidency::_internal_residency(int index) const {
  return _internal_residency().Get(index);
}
inline const ::perfetto::protos::EntityStateResidency_StateResidency& EntityStateResidency::residency(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.EntityStateResidency.residency)
  return _internal_residency(index);
}
inline ::perfetto::protos::EntityStateResidency_StateResidency* EntityStateResidency::_internal_add_residency() {
  return _internal_mutable_residency()->Add();
}
inline ::perfetto::protos::EntityStateResidency_StateResidency* EntityStateResidency::add_residency() {
  ::perfetto::protos::EntityStateResidency_StateResidency* _add = _internal_add_residency();
  // @@protoc_insertion_point(field_add:perfetto.protos.EntityStateResidency.residency)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::EntityStateResidency_StateResidency >&
EntityStateResidency::residency() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.EntityStateResidency.residency)
  return _internal_residency();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::EntityStateResidency_StateResidency>&
EntityStateResidency::_internal_residency() const {
  return _impl_.residency_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::EntityStateResidency_StateResidency>*
EntityStateResidency::_internal_mutable_residency() {
  return &_impl_.residency_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto_2epb_2eh
