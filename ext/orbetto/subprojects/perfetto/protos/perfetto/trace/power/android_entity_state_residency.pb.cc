// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/power/android_entity_state_residency.proto

#include "protos/perfetto/trace/power/android_entity_state_residency.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace perfetto {
namespace protos {
template <typename>
PROTOBUF_CONSTEXPR EntityStateResidency_PowerEntityState::EntityStateResidency_PowerEntityState(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.entity_name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.state_name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.entity_index_)*/ 0

  , /*decltype(_impl_.state_index_)*/ 0
} {}
struct EntityStateResidency_PowerEntityStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntityStateResidency_PowerEntityStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntityStateResidency_PowerEntityStateDefaultTypeInternal() {}
  union {
    EntityStateResidency_PowerEntityState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntityStateResidency_PowerEntityStateDefaultTypeInternal _EntityStateResidency_PowerEntityState_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR EntityStateResidency_StateResidency::EntityStateResidency_StateResidency(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.entity_index_)*/ 0

  , /*decltype(_impl_.state_index_)*/ 0

  , /*decltype(_impl_.total_time_in_state_ms_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.total_state_entry_count_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.last_entry_timestamp_ms_)*/ ::uint64_t{0u}
} {}
struct EntityStateResidency_StateResidencyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntityStateResidency_StateResidencyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntityStateResidency_StateResidencyDefaultTypeInternal() {}
  union {
    EntityStateResidency_StateResidency _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntityStateResidency_StateResidencyDefaultTypeInternal _EntityStateResidency_StateResidency_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR EntityStateResidency::EntityStateResidency(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.power_entity_state_)*/{}
  , /*decltype(_impl_.residency_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EntityStateResidencyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntityStateResidencyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntityStateResidencyDefaultTypeInternal() {}
  union {
    EntityStateResidency _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntityStateResidencyDefaultTypeInternal _EntityStateResidency_default_instance_;
}  // namespace protos
}  // namespace perfetto
static ::_pb::Metadata file_level_metadata_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto[3];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto = nullptr;
const ::uint32_t TableStruct_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::EntityStateResidency_PowerEntityState, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::EntityStateResidency_PowerEntityState, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::EntityStateResidency_PowerEntityState, _impl_.entity_index_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::EntityStateResidency_PowerEntityState, _impl_.state_index_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::EntityStateResidency_PowerEntityState, _impl_.entity_name_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::EntityStateResidency_PowerEntityState, _impl_.state_name_),
    2,
    3,
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::EntityStateResidency_StateResidency, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::EntityStateResidency_StateResidency, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::EntityStateResidency_StateResidency, _impl_.entity_index_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::EntityStateResidency_StateResidency, _impl_.state_index_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::EntityStateResidency_StateResidency, _impl_.total_time_in_state_ms_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::EntityStateResidency_StateResidency, _impl_.total_state_entry_count_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::EntityStateResidency_StateResidency, _impl_.last_entry_timestamp_ms_),
    0,
    1,
    2,
    3,
    4,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::EntityStateResidency, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::EntityStateResidency, _impl_.power_entity_state_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::EntityStateResidency, _impl_.residency_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, 12, -1, sizeof(::perfetto::protos::EntityStateResidency_PowerEntityState)},
        { 16, 29, -1, sizeof(::perfetto::protos::EntityStateResidency_StateResidency)},
        { 34, -1, -1, sizeof(::perfetto::protos::EntityStateResidency)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::perfetto::protos::_EntityStateResidency_PowerEntityState_default_instance_._instance,
    &::perfetto::protos::_EntityStateResidency_StateResidency_default_instance_._instance,
    &::perfetto::protos::_EntityStateResidency_default_instance_._instance,
};
const char descriptor_table_protodef_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n@protos/perfetto/trace/power/android_en"
    "tity_state_residency.proto\022\017perfetto.pro"
    "tos\"\273\003\n\024EntityStateResidency\022R\n\022power_en"
    "tity_state\030\001 \003(\01326.perfetto.protos.Entit"
    "yStateResidency.PowerEntityState\022G\n\tresi"
    "dency\030\002 \003(\01324.perfetto.protos.EntityStat"
    "eResidency.StateResidency\032f\n\020PowerEntity"
    "State\022\024\n\014entity_index\030\001 \001(\005\022\023\n\013state_ind"
    "ex\030\002 \001(\005\022\023\n\013entity_name\030\003 \001(\t\022\022\n\nstate_n"
    "ame\030\004 \001(\t\032\235\001\n\016StateResidency\022\024\n\014entity_i"
    "ndex\030\001 \001(\005\022\023\n\013state_index\030\002 \001(\005\022\036\n\026total"
    "_time_in_state_ms\030\003 \001(\004\022\037\n\027total_state_e"
    "ntry_count\030\004 \001(\004\022\037\n\027last_entry_timestamp"
    "_ms\030\005 \001(\004"
};
static ::absl::once_flag descriptor_table_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto = {
    false,
    false,
    529,
    descriptor_table_protodef_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto,
    "protos/perfetto/trace/power/android_entity_state_residency.proto",
    &descriptor_table_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto::offsets,
    file_level_metadata_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto,
    file_level_enum_descriptors_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto,
    file_level_service_descriptors_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto_getter() {
  return &descriptor_table_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto(&descriptor_table_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto);
namespace perfetto {
namespace protos {
// ===================================================================

class EntityStateResidency_PowerEntityState::_Internal {
 public:
  using HasBits = decltype(std::declval<EntityStateResidency_PowerEntityState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EntityStateResidency_PowerEntityState, _impl_._has_bits_);
  static void set_has_entity_index(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_state_index(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_entity_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_state_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

EntityStateResidency_PowerEntityState::EntityStateResidency_PowerEntityState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.EntityStateResidency.PowerEntityState)
}
EntityStateResidency_PowerEntityState::EntityStateResidency_PowerEntityState(const EntityStateResidency_PowerEntityState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EntityStateResidency_PowerEntityState* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.entity_name_) {}

    , decltype(_impl_.state_name_) {}

    , decltype(_impl_.entity_index_) {}

    , decltype(_impl_.state_index_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.entity_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.entity_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.entity_name_.Set(from._internal_entity_name(), _this->GetArenaForAllocation());
  }
  _impl_.state_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.state_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.state_name_.Set(from._internal_state_name(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.entity_index_, &from._impl_.entity_index_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.state_index_) -
    reinterpret_cast<char*>(&_impl_.entity_index_)) + sizeof(_impl_.state_index_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.EntityStateResidency.PowerEntityState)
}

inline void EntityStateResidency_PowerEntityState::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.entity_name_) {}

    , decltype(_impl_.state_name_) {}

    , decltype(_impl_.entity_index_) { 0 }

    , decltype(_impl_.state_index_) { 0 }

  };
  _impl_.entity_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.entity_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.state_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.state_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

EntityStateResidency_PowerEntityState::~EntityStateResidency_PowerEntityState() {
  // @@protoc_insertion_point(destructor:perfetto.protos.EntityStateResidency.PowerEntityState)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EntityStateResidency_PowerEntityState::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.entity_name_.Destroy();
  _impl_.state_name_.Destroy();
}

void EntityStateResidency_PowerEntityState::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EntityStateResidency_PowerEntityState::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.EntityStateResidency.PowerEntityState)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.entity_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.state_name_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&_impl_.entity_index_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.state_index_) -
        reinterpret_cast<char*>(&_impl_.entity_index_)) + sizeof(_impl_.state_index_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EntityStateResidency_PowerEntityState::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 entity_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _Internal::set_has_entity_index(&has_bits);
          _impl_.entity_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional int32 state_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _Internal::set_has_state_index(&has_bits);
          _impl_.state_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional string entity_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_entity_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "perfetto.protos.EntityStateResidency.PowerEntityState.entity_name");
          #endif  // !NDEBUG
        } else {
          goto handle_unusual;
        }
        continue;
      // optional string state_name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_state_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "perfetto.protos.EntityStateResidency.PowerEntityState.state_name");
          #endif  // !NDEBUG
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* EntityStateResidency_PowerEntityState::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.EntityStateResidency.PowerEntityState)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 entity_index = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        1, this->_internal_entity_index(), target);
  }

  // optional int32 state_index = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        2, this->_internal_state_index(), target);
  }

  // optional string entity_name = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_entity_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
                                "perfetto.protos.EntityStateResidency.PowerEntityState.entity_name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string state_name = 4;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_state_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
                                "perfetto.protos.EntityStateResidency.PowerEntityState.state_name");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.EntityStateResidency.PowerEntityState)
  return target;
}

::size_t EntityStateResidency_PowerEntityState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.EntityStateResidency.PowerEntityState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string entity_name = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                      this->_internal_entity_name());
    }

    // optional string state_name = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                      this->_internal_state_name());
    }

    // optional int32 entity_index = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_entity_index());
    }

    // optional int32 state_index = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_state_index());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EntityStateResidency_PowerEntityState::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EntityStateResidency_PowerEntityState::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EntityStateResidency_PowerEntityState::GetClassData() const { return &_class_data_; }


void EntityStateResidency_PowerEntityState::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EntityStateResidency_PowerEntityState*>(&to_msg);
  auto& from = static_cast<const EntityStateResidency_PowerEntityState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.EntityStateResidency.PowerEntityState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_entity_name(from._internal_entity_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_state_name(from._internal_state_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.entity_index_ = from._impl_.entity_index_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.state_index_ = from._impl_.state_index_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EntityStateResidency_PowerEntityState::CopyFrom(const EntityStateResidency_PowerEntityState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.EntityStateResidency.PowerEntityState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityStateResidency_PowerEntityState::IsInitialized() const {
  return true;
}

void EntityStateResidency_PowerEntityState::InternalSwap(EntityStateResidency_PowerEntityState* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_name_, lhs_arena,
                                       &other->_impl_.entity_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.state_name_, lhs_arena,
                                       &other->_impl_.state_name_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EntityStateResidency_PowerEntityState, _impl_.state_index_)
      + sizeof(EntityStateResidency_PowerEntityState::_impl_.state_index_)
      - PROTOBUF_FIELD_OFFSET(EntityStateResidency_PowerEntityState, _impl_.entity_index_)>(
          reinterpret_cast<char*>(&_impl_.entity_index_),
          reinterpret_cast<char*>(&other->_impl_.entity_index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EntityStateResidency_PowerEntityState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto_getter, &descriptor_table_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto_once,
      file_level_metadata_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto[0]);
}
// ===================================================================

class EntityStateResidency_StateResidency::_Internal {
 public:
  using HasBits = decltype(std::declval<EntityStateResidency_StateResidency>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EntityStateResidency_StateResidency, _impl_._has_bits_);
  static void set_has_entity_index(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_state_index(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_total_time_in_state_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_total_state_entry_count(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_last_entry_timestamp_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

EntityStateResidency_StateResidency::EntityStateResidency_StateResidency(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.EntityStateResidency.StateResidency)
}
EntityStateResidency_StateResidency::EntityStateResidency_StateResidency(const EntityStateResidency_StateResidency& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.EntityStateResidency.StateResidency)
}

inline void EntityStateResidency_StateResidency::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.entity_index_) { 0 }

    , decltype(_impl_.state_index_) { 0 }

    , decltype(_impl_.total_time_in_state_ms_) { ::uint64_t{0u} }

    , decltype(_impl_.total_state_entry_count_) { ::uint64_t{0u} }

    , decltype(_impl_.last_entry_timestamp_ms_) { ::uint64_t{0u} }

  };
}

EntityStateResidency_StateResidency::~EntityStateResidency_StateResidency() {
  // @@protoc_insertion_point(destructor:perfetto.protos.EntityStateResidency.StateResidency)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EntityStateResidency_StateResidency::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void EntityStateResidency_StateResidency::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EntityStateResidency_StateResidency::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.EntityStateResidency.StateResidency)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.entity_index_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.last_entry_timestamp_ms_) -
        reinterpret_cast<char*>(&_impl_.entity_index_)) + sizeof(_impl_.last_entry_timestamp_ms_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EntityStateResidency_StateResidency::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 entity_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _Internal::set_has_entity_index(&has_bits);
          _impl_.entity_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional int32 state_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _Internal::set_has_state_index(&has_bits);
          _impl_.state_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional uint64 total_time_in_state_ms = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _Internal::set_has_total_time_in_state_ms(&has_bits);
          _impl_.total_time_in_state_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional uint64 total_state_entry_count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 32)) {
          _Internal::set_has_total_state_entry_count(&has_bits);
          _impl_.total_state_entry_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional uint64 last_entry_timestamp_ms = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 40)) {
          _Internal::set_has_last_entry_timestamp_ms(&has_bits);
          _impl_.last_entry_timestamp_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* EntityStateResidency_StateResidency::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.EntityStateResidency.StateResidency)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 entity_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        1, this->_internal_entity_index(), target);
  }

  // optional int32 state_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        2, this->_internal_state_index(), target);
  }

  // optional uint64 total_time_in_state_ms = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_total_time_in_state_ms(), target);
  }

  // optional uint64 total_state_entry_count = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_total_state_entry_count(), target);
  }

  // optional uint64 last_entry_timestamp_ms = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_last_entry_timestamp_ms(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.EntityStateResidency.StateResidency)
  return target;
}

::size_t EntityStateResidency_StateResidency::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.EntityStateResidency.StateResidency)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional int32 entity_index = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_entity_index());
    }

    // optional int32 state_index = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_state_index());
    }

    // optional uint64 total_time_in_state_ms = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_total_time_in_state_ms());
    }

    // optional uint64 total_state_entry_count = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_total_state_entry_count());
    }

    // optional uint64 last_entry_timestamp_ms = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_last_entry_timestamp_ms());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EntityStateResidency_StateResidency::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EntityStateResidency_StateResidency::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EntityStateResidency_StateResidency::GetClassData() const { return &_class_data_; }


void EntityStateResidency_StateResidency::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EntityStateResidency_StateResidency*>(&to_msg);
  auto& from = static_cast<const EntityStateResidency_StateResidency&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.EntityStateResidency.StateResidency)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.entity_index_ = from._impl_.entity_index_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.state_index_ = from._impl_.state_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.total_time_in_state_ms_ = from._impl_.total_time_in_state_ms_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.total_state_entry_count_ = from._impl_.total_state_entry_count_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.last_entry_timestamp_ms_ = from._impl_.last_entry_timestamp_ms_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EntityStateResidency_StateResidency::CopyFrom(const EntityStateResidency_StateResidency& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.EntityStateResidency.StateResidency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityStateResidency_StateResidency::IsInitialized() const {
  return true;
}

void EntityStateResidency_StateResidency::InternalSwap(EntityStateResidency_StateResidency* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EntityStateResidency_StateResidency, _impl_.last_entry_timestamp_ms_)
      + sizeof(EntityStateResidency_StateResidency::_impl_.last_entry_timestamp_ms_)
      - PROTOBUF_FIELD_OFFSET(EntityStateResidency_StateResidency, _impl_.entity_index_)>(
          reinterpret_cast<char*>(&_impl_.entity_index_),
          reinterpret_cast<char*>(&other->_impl_.entity_index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EntityStateResidency_StateResidency::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto_getter, &descriptor_table_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto_once,
      file_level_metadata_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto[1]);
}
// ===================================================================

class EntityStateResidency::_Internal {
 public:
};

EntityStateResidency::EntityStateResidency(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.EntityStateResidency)
}
EntityStateResidency::EntityStateResidency(const EntityStateResidency& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EntityStateResidency* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.power_entity_state_){from._impl_.power_entity_state_}
    , decltype(_impl_.residency_){from._impl_.residency_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.EntityStateResidency)
}

inline void EntityStateResidency::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.power_entity_state_){arena}
    , decltype(_impl_.residency_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

EntityStateResidency::~EntityStateResidency() {
  // @@protoc_insertion_point(destructor:perfetto.protos.EntityStateResidency)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EntityStateResidency::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_power_entity_state()->~RepeatedPtrField();
  _internal_mutable_residency()->~RepeatedPtrField();
}

void EntityStateResidency::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EntityStateResidency::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.EntityStateResidency)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_power_entity_state()->Clear();
  _internal_mutable_residency()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EntityStateResidency::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .perfetto.protos.EntityStateResidency.PowerEntityState power_entity_state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_power_entity_state(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .perfetto.protos.EntityStateResidency.StateResidency residency = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_residency(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* EntityStateResidency::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.EntityStateResidency)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .perfetto.protos.EntityStateResidency.PowerEntityState power_entity_state = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_power_entity_state_size()); i < n; i++) {
    const auto& repfield = this->_internal_power_entity_state(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.EntityStateResidency.StateResidency residency = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_residency_size()); i < n; i++) {
    const auto& repfield = this->_internal_residency(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.EntityStateResidency)
  return target;
}

::size_t EntityStateResidency::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.EntityStateResidency)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .perfetto.protos.EntityStateResidency.PowerEntityState power_entity_state = 1;
  total_size += 1UL * this->_internal_power_entity_state_size();
  for (const auto& msg : this->_internal_power_entity_state()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.EntityStateResidency.StateResidency residency = 2;
  total_size += 1UL * this->_internal_residency_size();
  for (const auto& msg : this->_internal_residency()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EntityStateResidency::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EntityStateResidency::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EntityStateResidency::GetClassData() const { return &_class_data_; }


void EntityStateResidency::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EntityStateResidency*>(&to_msg);
  auto& from = static_cast<const EntityStateResidency&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.EntityStateResidency)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_power_entity_state()->MergeFrom(from._internal_power_entity_state());
  _this->_internal_mutable_residency()->MergeFrom(from._internal_residency());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EntityStateResidency::CopyFrom(const EntityStateResidency& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.EntityStateResidency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityStateResidency::IsInitialized() const {
  return true;
}

void EntityStateResidency::InternalSwap(EntityStateResidency* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_power_entity_state()->InternalSwap(other->_internal_mutable_power_entity_state());
  _internal_mutable_residency()->InternalSwap(other->_internal_mutable_residency());
}

::PROTOBUF_NAMESPACE_ID::Metadata EntityStateResidency::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto_getter, &descriptor_table_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto_once,
      file_level_metadata_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fentity_5fstate_5fresidency_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::perfetto::protos::EntityStateResidency_PowerEntityState*
Arena::CreateMaybeMessage< ::perfetto::protos::EntityStateResidency_PowerEntityState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::EntityStateResidency_PowerEntityState >(arena);
}
template<> PROTOBUF_NOINLINE ::perfetto::protos::EntityStateResidency_StateResidency*
Arena::CreateMaybeMessage< ::perfetto::protos::EntityStateResidency_StateResidency >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::EntityStateResidency_StateResidency >(arena);
}
template<> PROTOBUF_NOINLINE ::perfetto::protos::EntityStateResidency*
Arena::CreateMaybeMessage< ::perfetto::protos::EntityStateResidency >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::EntityStateResidency >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
