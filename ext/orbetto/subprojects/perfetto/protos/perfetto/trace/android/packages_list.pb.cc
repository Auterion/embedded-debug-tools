// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/android/packages_list.proto

#include "protos/perfetto/trace/android/packages_list.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace perfetto {
namespace protos {
template <typename>
PROTOBUF_CONSTEXPR PackagesList_PackageInfo::PackagesList_PackageInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.uid_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.version_code_)*/ ::int64_t{0}

  , /*decltype(_impl_.debuggable_)*/ false

  , /*decltype(_impl_.profileable_from_shell_)*/ false
} {}
struct PackagesList_PackageInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PackagesList_PackageInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PackagesList_PackageInfoDefaultTypeInternal() {}
  union {
    PackagesList_PackageInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PackagesList_PackageInfoDefaultTypeInternal _PackagesList_PackageInfo_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR PackagesList::PackagesList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.packages_)*/{}
  , /*decltype(_impl_.parse_error_)*/ false

  , /*decltype(_impl_.read_error_)*/ false
} {}
struct PackagesListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PackagesListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PackagesListDefaultTypeInternal() {}
  union {
    PackagesList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PackagesListDefaultTypeInternal _PackagesList_default_instance_;
}  // namespace protos
}  // namespace perfetto
static ::_pb::Metadata file_level_metadata_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto = nullptr;
const ::uint32_t TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::PackagesList_PackageInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::PackagesList_PackageInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::PackagesList_PackageInfo, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::PackagesList_PackageInfo, _impl_.uid_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::PackagesList_PackageInfo, _impl_.debuggable_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::PackagesList_PackageInfo, _impl_.profileable_from_shell_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::PackagesList_PackageInfo, _impl_.version_code_),
    0,
    1,
    3,
    4,
    2,
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::PackagesList, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::PackagesList, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::PackagesList, _impl_.packages_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::PackagesList, _impl_.parse_error_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::PackagesList, _impl_.read_error_),
    ~0u,
    0,
    1,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, 13, -1, sizeof(::perfetto::protos::PackagesList_PackageInfo)},
        { 18, 29, -1, sizeof(::perfetto::protos::PackagesList)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::perfetto::protos::_PackagesList_PackageInfo_default_instance_._instance,
    &::perfetto::protos::_PackagesList_default_instance_._instance,
};
const char descriptor_table_protodef_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n1protos/perfetto/trace/android/packages"
    "_list.proto\022\017perfetto.protos\"\350\001\n\014Package"
    "sList\022;\n\010packages\030\001 \003(\0132).perfetto.proto"
    "s.PackagesList.PackageInfo\022\023\n\013parse_erro"
    "r\030\002 \001(\010\022\022\n\nread_error\030\003 \001(\010\032r\n\013PackageIn"
    "fo\022\014\n\004name\030\001 \001(\t\022\013\n\003uid\030\002 \001(\004\022\022\n\ndebugga"
    "ble\030\003 \001(\010\022\036\n\026profileable_from_shell\030\004 \001("
    "\010\022\024\n\014version_code\030\005 \001(\003"
};
static ::absl::once_flag descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto = {
    false,
    false,
    303,
    descriptor_table_protodef_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto,
    "protos/perfetto/trace/android/packages_list.proto",
    &descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto::offsets,
    file_level_metadata_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto,
    file_level_enum_descriptors_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto,
    file_level_service_descriptors_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto_getter() {
  return &descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto(&descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto);
namespace perfetto {
namespace protos {
// ===================================================================

class PackagesList_PackageInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<PackagesList_PackageInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PackagesList_PackageInfo, _impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_debuggable(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_profileable_from_shell(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_version_code(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

PackagesList_PackageInfo::PackagesList_PackageInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.PackagesList.PackageInfo)
}
PackagesList_PackageInfo::PackagesList_PackageInfo(const PackagesList_PackageInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PackagesList_PackageInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_) {}

    , decltype(_impl_.uid_) {}

    , decltype(_impl_.version_code_) {}

    , decltype(_impl_.debuggable_) {}

    , decltype(_impl_.profileable_from_shell_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.uid_, &from._impl_.uid_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.profileable_from_shell_) -
    reinterpret_cast<char*>(&_impl_.uid_)) + sizeof(_impl_.profileable_from_shell_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.PackagesList.PackageInfo)
}

inline void PackagesList_PackageInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_) {}

    , decltype(_impl_.uid_) { ::uint64_t{0u} }

    , decltype(_impl_.version_code_) { ::int64_t{0} }

    , decltype(_impl_.debuggable_) { false }

    , decltype(_impl_.profileable_from_shell_) { false }

  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PackagesList_PackageInfo::~PackagesList_PackageInfo() {
  // @@protoc_insertion_point(destructor:perfetto.protos.PackagesList.PackageInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PackagesList_PackageInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void PackagesList_PackageInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PackagesList_PackageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.PackagesList.PackageInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&_impl_.uid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.profileable_from_shell_) -
        reinterpret_cast<char*>(&_impl_.uid_)) + sizeof(_impl_.profileable_from_shell_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PackagesList_PackageInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "perfetto.protos.PackagesList.PackageInfo.name");
          #endif  // !NDEBUG
        } else {
          goto handle_unusual;
        }
        continue;
      // optional uint64 uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _Internal::set_has_uid(&has_bits);
          _impl_.uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional bool debuggable = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _Internal::set_has_debuggable(&has_bits);
          _impl_.debuggable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional bool profileable_from_shell = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 32)) {
          _Internal::set_has_profileable_from_shell(&has_bits);
          _impl_.profileable_from_shell_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional int64 version_code = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 40)) {
          _Internal::set_has_version_code(&has_bits);
          _impl_.version_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* PackagesList_PackageInfo::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.PackagesList.PackageInfo)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
                                "perfetto.protos.PackagesList.PackageInfo.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional uint64 uid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_uid(), target);
  }

  // optional bool debuggable = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_debuggable(), target);
  }

  // optional bool profileable_from_shell = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_profileable_from_shell(), target);
  }

  // optional int64 version_code = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        5, this->_internal_version_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.PackagesList.PackageInfo)
  return target;
}

::size_t PackagesList_PackageInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.PackagesList.PackageInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional uint64 uid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_uid());
    }

    // optional int64 version_code = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_version_code());
    }

    // optional bool debuggable = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }

    // optional bool profileable_from_shell = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PackagesList_PackageInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PackagesList_PackageInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PackagesList_PackageInfo::GetClassData() const { return &_class_data_; }


void PackagesList_PackageInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PackagesList_PackageInfo*>(&to_msg);
  auto& from = static_cast<const PackagesList_PackageInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.PackagesList.PackageInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.uid_ = from._impl_.uid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.version_code_ = from._impl_.version_code_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.debuggable_ = from._impl_.debuggable_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.profileable_from_shell_ = from._impl_.profileable_from_shell_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PackagesList_PackageInfo::CopyFrom(const PackagesList_PackageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.PackagesList.PackageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackagesList_PackageInfo::IsInitialized() const {
  return true;
}

void PackagesList_PackageInfo::InternalSwap(PackagesList_PackageInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PackagesList_PackageInfo, _impl_.profileable_from_shell_)
      + sizeof(PackagesList_PackageInfo::_impl_.profileable_from_shell_)
      - PROTOBUF_FIELD_OFFSET(PackagesList_PackageInfo, _impl_.uid_)>(
          reinterpret_cast<char*>(&_impl_.uid_),
          reinterpret_cast<char*>(&other->_impl_.uid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PackagesList_PackageInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto_getter, &descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto_once,
      file_level_metadata_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto[0]);
}
// ===================================================================

class PackagesList::_Internal {
 public:
  using HasBits = decltype(std::declval<PackagesList>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PackagesList, _impl_._has_bits_);
  static void set_has_parse_error(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_read_error(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PackagesList::PackagesList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.PackagesList)
}
PackagesList::PackagesList(const PackagesList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PackagesList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.packages_){from._impl_.packages_}
    , decltype(_impl_.parse_error_) {}

    , decltype(_impl_.read_error_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.parse_error_, &from._impl_.parse_error_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.read_error_) -
    reinterpret_cast<char*>(&_impl_.parse_error_)) + sizeof(_impl_.read_error_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.PackagesList)
}

inline void PackagesList::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.packages_){arena}
    , decltype(_impl_.parse_error_) { false }

    , decltype(_impl_.read_error_) { false }

  };
}

PackagesList::~PackagesList() {
  // @@protoc_insertion_point(destructor:perfetto.protos.PackagesList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PackagesList::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_packages()->~RepeatedPtrField();
}

void PackagesList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PackagesList::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.PackagesList)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_packages()->Clear();
  ::memset(&_impl_.parse_error_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.read_error_) -
      reinterpret_cast<char*>(&_impl_.parse_error_)) + sizeof(_impl_.read_error_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PackagesList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .perfetto.protos.PackagesList.PackageInfo packages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_packages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // optional bool parse_error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _Internal::set_has_parse_error(&has_bits);
          _impl_.parse_error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional bool read_error = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _Internal::set_has_read_error(&has_bits);
          _impl_.read_error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* PackagesList::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.PackagesList)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .perfetto.protos.PackagesList.PackageInfo packages = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_packages_size()); i < n; i++) {
    const auto& repfield = this->_internal_packages(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool parse_error = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_parse_error(), target);
  }

  // optional bool read_error = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_read_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.PackagesList)
  return target;
}

::size_t PackagesList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.PackagesList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .perfetto.protos.PackagesList.PackageInfo packages = 1;
  total_size += 1UL * this->_internal_packages_size();
  for (const auto& msg : this->_internal_packages()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool parse_error = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2;
    }

    // optional bool read_error = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PackagesList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PackagesList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PackagesList::GetClassData() const { return &_class_data_; }


void PackagesList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PackagesList*>(&to_msg);
  auto& from = static_cast<const PackagesList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.PackagesList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_packages()->MergeFrom(from._internal_packages());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.parse_error_ = from._impl_.parse_error_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.read_error_ = from._impl_.read_error_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PackagesList::CopyFrom(const PackagesList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.PackagesList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackagesList::IsInitialized() const {
  return true;
}

void PackagesList::InternalSwap(PackagesList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_packages()->InternalSwap(other->_internal_mutable_packages());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PackagesList, _impl_.read_error_)
      + sizeof(PackagesList::_impl_.read_error_)
      - PROTOBUF_FIELD_OFFSET(PackagesList, _impl_.parse_error_)>(
          reinterpret_cast<char*>(&_impl_.parse_error_),
          reinterpret_cast<char*>(&other->_impl_.parse_error_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PackagesList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto_getter, &descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto_once,
      file_level_metadata_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::perfetto::protos::PackagesList_PackageInfo*
Arena::CreateMaybeMessage< ::perfetto::protos::PackagesList_PackageInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::PackagesList_PackageInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::perfetto::protos::PackagesList*
Arena::CreateMaybeMessage< ::perfetto::protos::PackagesList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::PackagesList >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
