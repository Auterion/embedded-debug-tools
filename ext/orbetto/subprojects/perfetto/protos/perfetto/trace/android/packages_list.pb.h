// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/android/packages_list.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto;
namespace perfetto {
namespace protos {
class PackagesList;
struct PackagesListDefaultTypeInternal;
extern PackagesListDefaultTypeInternal _PackagesList_default_instance_;
class PackagesList_PackageInfo;
struct PackagesList_PackageInfoDefaultTypeInternal;
extern PackagesList_PackageInfoDefaultTypeInternal _PackagesList_PackageInfo_default_instance_;
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template <>
::perfetto::protos::PackagesList* Arena::CreateMaybeMessage<::perfetto::protos::PackagesList>(Arena*);
template <>
::perfetto::protos::PackagesList_PackageInfo* Arena::CreateMaybeMessage<::perfetto::protos::PackagesList_PackageInfo>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace perfetto {
namespace protos {

// ===================================================================


// -------------------------------------------------------------------

class PackagesList_PackageInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.PackagesList.PackageInfo) */ {
 public:
  inline PackagesList_PackageInfo() : PackagesList_PackageInfo(nullptr) {}
  ~PackagesList_PackageInfo() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PackagesList_PackageInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PackagesList_PackageInfo(const PackagesList_PackageInfo& from);
  PackagesList_PackageInfo(PackagesList_PackageInfo&& from) noexcept
    : PackagesList_PackageInfo() {
    *this = ::std::move(from);
  }

  inline PackagesList_PackageInfo& operator=(const PackagesList_PackageInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline PackagesList_PackageInfo& operator=(PackagesList_PackageInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PackagesList_PackageInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const PackagesList_PackageInfo* internal_default_instance() {
    return reinterpret_cast<const PackagesList_PackageInfo*>(
               &_PackagesList_PackageInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PackagesList_PackageInfo& a, PackagesList_PackageInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(PackagesList_PackageInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PackagesList_PackageInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PackagesList_PackageInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PackagesList_PackageInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PackagesList_PackageInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PackagesList_PackageInfo& from) {
    PackagesList_PackageInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PackagesList_PackageInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.PackagesList.PackageInfo";
  }
  protected:
  explicit PackagesList_PackageInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kUidFieldNumber = 2,
    kVersionCodeFieldNumber = 5,
    kDebuggableFieldNumber = 3,
    kProfileableFromShellFieldNumber = 4,
  };
  // optional string name = 1;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional uint64 uid = 2;
  bool has_uid() const;
  void clear_uid() ;
  ::uint64_t uid() const;
  void set_uid(::uint64_t value);

  private:
  ::uint64_t _internal_uid() const;
  void _internal_set_uid(::uint64_t value);

  public:
  // optional int64 version_code = 5;
  bool has_version_code() const;
  void clear_version_code() ;
  ::int64_t version_code() const;
  void set_version_code(::int64_t value);

  private:
  ::int64_t _internal_version_code() const;
  void _internal_set_version_code(::int64_t value);

  public:
  // optional bool debuggable = 3;
  bool has_debuggable() const;
  void clear_debuggable() ;
  bool debuggable() const;
  void set_debuggable(bool value);

  private:
  bool _internal_debuggable() const;
  void _internal_set_debuggable(bool value);

  public:
  // optional bool profileable_from_shell = 4;
  bool has_profileable_from_shell() const;
  void clear_profileable_from_shell() ;
  bool profileable_from_shell() const;
  void set_profileable_from_shell(bool value);

  private:
  bool _internal_profileable_from_shell() const;
  void _internal_set_profileable_from_shell(bool value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.PackagesList.PackageInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::uint64_t uid_;
    ::int64_t version_code_;
    bool debuggable_;
    bool profileable_from_shell_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto;
};// -------------------------------------------------------------------

class PackagesList final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.PackagesList) */ {
 public:
  inline PackagesList() : PackagesList(nullptr) {}
  ~PackagesList() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PackagesList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PackagesList(const PackagesList& from);
  PackagesList(PackagesList&& from) noexcept
    : PackagesList() {
    *this = ::std::move(from);
  }

  inline PackagesList& operator=(const PackagesList& from) {
    CopyFrom(from);
    return *this;
  }
  inline PackagesList& operator=(PackagesList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PackagesList& default_instance() {
    return *internal_default_instance();
  }
  static inline const PackagesList* internal_default_instance() {
    return reinterpret_cast<const PackagesList*>(
               &_PackagesList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PackagesList& a, PackagesList& b) {
    a.Swap(&b);
  }
  inline void Swap(PackagesList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PackagesList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PackagesList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PackagesList>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PackagesList& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PackagesList& from) {
    PackagesList::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PackagesList* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.PackagesList";
  }
  protected:
  explicit PackagesList(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PackagesList_PackageInfo PackageInfo;

  // accessors -------------------------------------------------------

  enum : int {
    kPackagesFieldNumber = 1,
    kParseErrorFieldNumber = 2,
    kReadErrorFieldNumber = 3,
  };
  // repeated .perfetto.protos.PackagesList.PackageInfo packages = 1;
  int packages_size() const;
  private:
  int _internal_packages_size() const;

  public:
  void clear_packages() ;
  ::perfetto::protos::PackagesList_PackageInfo* mutable_packages(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::PackagesList_PackageInfo >*
      mutable_packages();
  private:
  const ::perfetto::protos::PackagesList_PackageInfo& _internal_packages(int index) const;
  ::perfetto::protos::PackagesList_PackageInfo* _internal_add_packages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::PackagesList_PackageInfo>& _internal_packages() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::PackagesList_PackageInfo>* _internal_mutable_packages();
  public:
  const ::perfetto::protos::PackagesList_PackageInfo& packages(int index) const;
  ::perfetto::protos::PackagesList_PackageInfo* add_packages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::PackagesList_PackageInfo >&
      packages() const;
  // optional bool parse_error = 2;
  bool has_parse_error() const;
  void clear_parse_error() ;
  bool parse_error() const;
  void set_parse_error(bool value);

  private:
  bool _internal_parse_error() const;
  void _internal_set_parse_error(bool value);

  public:
  // optional bool read_error = 3;
  bool has_read_error() const;
  void clear_read_error() ;
  bool read_error() const;
  void set_read_error(bool value);

  private:
  bool _internal_read_error() const;
  void _internal_set_read_error(bool value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.PackagesList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::PackagesList_PackageInfo > packages_;
    bool parse_error_;
    bool read_error_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PackagesList_PackageInfo

// optional string name = 1;
inline bool PackagesList_PackageInfo::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PackagesList_PackageInfo::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PackagesList_PackageInfo::name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.PackagesList.PackageInfo.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PackagesList_PackageInfo::set_name(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:perfetto.protos.PackagesList.PackageInfo.name)
}
inline std::string* PackagesList_PackageInfo::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.PackagesList.PackageInfo.name)
  return _s;
}
inline const std::string& PackagesList_PackageInfo::_internal_name() const {
  return _impl_.name_.Get();
}
inline void PackagesList_PackageInfo::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* PackagesList_PackageInfo::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* PackagesList_PackageInfo::release_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.PackagesList.PackageInfo.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void PackagesList_PackageInfo::set_allocated_name(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.PackagesList.PackageInfo.name)
}

// optional uint64 uid = 2;
inline bool PackagesList_PackageInfo::has_uid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PackagesList_PackageInfo::clear_uid() {
  _impl_.uid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t PackagesList_PackageInfo::uid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.PackagesList.PackageInfo.uid)
  return _internal_uid();
}
inline void PackagesList_PackageInfo::set_uid(::uint64_t value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.PackagesList.PackageInfo.uid)
}
inline ::uint64_t PackagesList_PackageInfo::_internal_uid() const {
  return _impl_.uid_;
}
inline void PackagesList_PackageInfo::_internal_set_uid(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.uid_ = value;
}

// optional bool debuggable = 3;
inline bool PackagesList_PackageInfo::has_debuggable() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void PackagesList_PackageInfo::clear_debuggable() {
  _impl_.debuggable_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool PackagesList_PackageInfo::debuggable() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.PackagesList.PackageInfo.debuggable)
  return _internal_debuggable();
}
inline void PackagesList_PackageInfo::set_debuggable(bool value) {
  _internal_set_debuggable(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.PackagesList.PackageInfo.debuggable)
}
inline bool PackagesList_PackageInfo::_internal_debuggable() const {
  return _impl_.debuggable_;
}
inline void PackagesList_PackageInfo::_internal_set_debuggable(bool value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.debuggable_ = value;
}

// optional bool profileable_from_shell = 4;
inline bool PackagesList_PackageInfo::has_profileable_from_shell() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void PackagesList_PackageInfo::clear_profileable_from_shell() {
  _impl_.profileable_from_shell_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool PackagesList_PackageInfo::profileable_from_shell() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.PackagesList.PackageInfo.profileable_from_shell)
  return _internal_profileable_from_shell();
}
inline void PackagesList_PackageInfo::set_profileable_from_shell(bool value) {
  _internal_set_profileable_from_shell(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.PackagesList.PackageInfo.profileable_from_shell)
}
inline bool PackagesList_PackageInfo::_internal_profileable_from_shell() const {
  return _impl_.profileable_from_shell_;
}
inline void PackagesList_PackageInfo::_internal_set_profileable_from_shell(bool value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.profileable_from_shell_ = value;
}

// optional int64 version_code = 5;
inline bool PackagesList_PackageInfo::has_version_code() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void PackagesList_PackageInfo::clear_version_code() {
  _impl_.version_code_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t PackagesList_PackageInfo::version_code() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.PackagesList.PackageInfo.version_code)
  return _internal_version_code();
}
inline void PackagesList_PackageInfo::set_version_code(::int64_t value) {
  _internal_set_version_code(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.PackagesList.PackageInfo.version_code)
}
inline ::int64_t PackagesList_PackageInfo::_internal_version_code() const {
  return _impl_.version_code_;
}
inline void PackagesList_PackageInfo::_internal_set_version_code(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.version_code_ = value;
}

// -------------------------------------------------------------------

// PackagesList

// repeated .perfetto.protos.PackagesList.PackageInfo packages = 1;
inline int PackagesList::_internal_packages_size() const {
  return _impl_.packages_.size();
}
inline int PackagesList::packages_size() const {
  return _internal_packages_size();
}
inline void PackagesList::clear_packages() {
  _internal_mutable_packages()->Clear();
}
inline ::perfetto::protos::PackagesList_PackageInfo* PackagesList::mutable_packages(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.PackagesList.packages)
  return _internal_mutable_packages()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::PackagesList_PackageInfo >*
PackagesList::mutable_packages() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.PackagesList.packages)
  return _internal_mutable_packages();
}
inline const ::perfetto::protos::PackagesList_PackageInfo& PackagesList::_internal_packages(int index) const {
  return _internal_packages().Get(index);
}
inline const ::perfetto::protos::PackagesList_PackageInfo& PackagesList::packages(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.PackagesList.packages)
  return _internal_packages(index);
}
inline ::perfetto::protos::PackagesList_PackageInfo* PackagesList::_internal_add_packages() {
  return _internal_mutable_packages()->Add();
}
inline ::perfetto::protos::PackagesList_PackageInfo* PackagesList::add_packages() {
  ::perfetto::protos::PackagesList_PackageInfo* _add = _internal_add_packages();
  // @@protoc_insertion_point(field_add:perfetto.protos.PackagesList.packages)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::PackagesList_PackageInfo >&
PackagesList::packages() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.PackagesList.packages)
  return _internal_packages();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::PackagesList_PackageInfo>&
PackagesList::_internal_packages() const {
  return _impl_.packages_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::PackagesList_PackageInfo>*
PackagesList::_internal_mutable_packages() {
  return &_impl_.packages_;
}

// optional bool parse_error = 2;
inline bool PackagesList::has_parse_error() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PackagesList::clear_parse_error() {
  _impl_.parse_error_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool PackagesList::parse_error() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.PackagesList.parse_error)
  return _internal_parse_error();
}
inline void PackagesList::set_parse_error(bool value) {
  _internal_set_parse_error(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.PackagesList.parse_error)
}
inline bool PackagesList::_internal_parse_error() const {
  return _impl_.parse_error_;
}
inline void PackagesList::_internal_set_parse_error(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.parse_error_ = value;
}

// optional bool read_error = 3;
inline bool PackagesList::has_read_error() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PackagesList::clear_read_error() {
  _impl_.read_error_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool PackagesList::read_error() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.PackagesList.read_error)
  return _internal_read_error();
}
inline void PackagesList::set_read_error(bool value) {
  _internal_set_read_error(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.PackagesList.read_error)
}
inline bool PackagesList::_internal_read_error() const {
  return _impl_.read_error_;
}
inline void PackagesList::_internal_set_read_error(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.read_error_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fandroid_2fpackages_5flist_2eproto_2epb_2eh
