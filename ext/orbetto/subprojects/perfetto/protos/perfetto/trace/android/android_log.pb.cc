// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/android/android_log.proto

#include "protos/perfetto/trace/android/android_log.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace perfetto {
namespace protos {
template <typename>
PROTOBUF_CONSTEXPR AndroidLogPacket_LogEvent_Arg::AndroidLogPacket_LogEvent_Arg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct AndroidLogPacket_LogEvent_ArgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AndroidLogPacket_LogEvent_ArgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AndroidLogPacket_LogEvent_ArgDefaultTypeInternal() {}
  union {
    AndroidLogPacket_LogEvent_Arg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AndroidLogPacket_LogEvent_ArgDefaultTypeInternal _AndroidLogPacket_LogEvent_Arg_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR AndroidLogPacket_LogEvent::AndroidLogPacket_LogEvent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.args_)*/{}
  , /*decltype(_impl_.tag_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.message_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.log_id_)*/ 0

  , /*decltype(_impl_.pid_)*/ 0

  , /*decltype(_impl_.tid_)*/ 0

  , /*decltype(_impl_.uid_)*/ 0

  , /*decltype(_impl_.timestamp_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.prio_)*/ 0
} {}
struct AndroidLogPacket_LogEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AndroidLogPacket_LogEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AndroidLogPacket_LogEventDefaultTypeInternal() {}
  union {
    AndroidLogPacket_LogEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AndroidLogPacket_LogEventDefaultTypeInternal _AndroidLogPacket_LogEvent_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR AndroidLogPacket_Stats::AndroidLogPacket_Stats(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.num_total_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.num_failed_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.num_skipped_)*/ ::uint64_t{0u}
} {}
struct AndroidLogPacket_StatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AndroidLogPacket_StatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AndroidLogPacket_StatsDefaultTypeInternal() {}
  union {
    AndroidLogPacket_Stats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AndroidLogPacket_StatsDefaultTypeInternal _AndroidLogPacket_Stats_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR AndroidLogPacket::AndroidLogPacket(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.events_)*/{}
  , /*decltype(_impl_.stats_)*/nullptr} {}
struct AndroidLogPacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AndroidLogPacketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AndroidLogPacketDefaultTypeInternal() {}
  union {
    AndroidLogPacket _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AndroidLogPacketDefaultTypeInternal _AndroidLogPacket_default_instance_;
}  // namespace protos
}  // namespace perfetto
static ::_pb::Metadata file_level_metadata_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto[4];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto = nullptr;
const ::uint32_t TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket_LogEvent_Arg, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket_LogEvent_Arg, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket_LogEvent_Arg, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket_LogEvent_Arg, _impl_.name_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket_LogEvent_Arg, _impl_.value_),
    0,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket_LogEvent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket_LogEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket_LogEvent, _impl_.log_id_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket_LogEvent, _impl_.pid_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket_LogEvent, _impl_.tid_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket_LogEvent, _impl_.uid_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket_LogEvent, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket_LogEvent, _impl_.tag_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket_LogEvent, _impl_.prio_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket_LogEvent, _impl_.message_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket_LogEvent, _impl_.args_),
    2,
    3,
    4,
    5,
    6,
    0,
    7,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket_Stats, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket_Stats, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket_Stats, _impl_.num_total_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket_Stats, _impl_.num_failed_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket_Stats, _impl_.num_skipped_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket, _impl_.events_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket, _impl_.stats_),
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, 13, -1, sizeof(::perfetto::protos::AndroidLogPacket_LogEvent_Arg)},
        { 17, 34, -1, sizeof(::perfetto::protos::AndroidLogPacket_LogEvent)},
        { 43, 54, -1, sizeof(::perfetto::protos::AndroidLogPacket_Stats)},
        { 57, 67, -1, sizeof(::perfetto::protos::AndroidLogPacket)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::perfetto::protos::_AndroidLogPacket_LogEvent_Arg_default_instance_._instance,
    &::perfetto::protos::_AndroidLogPacket_LogEvent_default_instance_._instance,
    &::perfetto::protos::_AndroidLogPacket_Stats_default_instance_._instance,
    &::perfetto::protos::_AndroidLogPacket_default_instance_._instance,
};
const char descriptor_table_protodef_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n/protos/perfetto/trace/android/android_"
    "log.proto\022\017perfetto.protos\0322protos/perfe"
    "tto/common/android_log_constants.proto\"\262"
    "\004\n\020AndroidLogPacket\022:\n\006events\030\001 \003(\0132*.pe"
    "rfetto.protos.AndroidLogPacket.LogEvent\022"
    "6\n\005stats\030\002 \001(\0132\'.perfetto.protos.Android"
    "LogPacket.Stats\032\344\002\n\010LogEvent\022-\n\006log_id\030\001"
    " \001(\0162\035.perfetto.protos.AndroidLogId\022\013\n\003p"
    "id\030\002 \001(\005\022\013\n\003tid\030\003 \001(\005\022\013\n\003uid\030\004 \001(\005\022\021\n\tti"
    "mestamp\030\005 \001(\004\022\013\n\003tag\030\006 \001(\t\0221\n\004prio\030\007 \001(\016"
    "2#.perfetto.protos.AndroidLogPriority\022\017\n"
    "\007message\030\010 \001(\t\022<\n\004args\030\t \003(\0132..perfetto."
    "protos.AndroidLogPacket.LogEvent.Arg\032`\n\003"
    "Arg\022\014\n\004name\030\001 \001(\t\022\023\n\tint_value\030\002 \001(\003H\000\022\025"
    "\n\013float_value\030\003 \001(\002H\000\022\026\n\014string_value\030\004 "
    "\001(\tH\000B\007\n\005value\032C\n\005Stats\022\021\n\tnum_total\030\001 \001"
    "(\004\022\022\n\nnum_failed\030\002 \001(\004\022\023\n\013num_skipped\030\003 "
    "\001(\004"
};
static const ::_pbi::DescriptorTable* const descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto_deps[1] =
    {
        &::descriptor_table_protos_2fperfetto_2fcommon_2fandroid_5flog_5fconstants_2eproto,
};
static ::absl::once_flag descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto = {
    false,
    false,
    683,
    descriptor_table_protodef_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto,
    "protos/perfetto/trace/android/android_log.proto",
    &descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto_once,
    descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto_deps,
    1,
    4,
    schemas,
    file_default_instances,
    TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto::offsets,
    file_level_metadata_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto,
    file_level_enum_descriptors_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto,
    file_level_service_descriptors_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto_getter() {
  return &descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto(&descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto);
namespace perfetto {
namespace protos {
// ===================================================================

class AndroidLogPacket_LogEvent_Arg::_Internal {
 public:
  using HasBits = decltype(std::declval<AndroidLogPacket_LogEvent_Arg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AndroidLogPacket_LogEvent_Arg, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::AndroidLogPacket_LogEvent_Arg, _impl_._oneof_case_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AndroidLogPacket_LogEvent_Arg::AndroidLogPacket_LogEvent_Arg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.AndroidLogPacket.LogEvent.Arg)
}
AndroidLogPacket_LogEvent_Arg::AndroidLogPacket_LogEvent_Arg(const AndroidLogPacket_LogEvent_Arg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AndroidLogPacket_LogEvent_Arg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_) {}

    , decltype(_impl_.value_){}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  clear_has_value();
  switch (from.value_case()) {
    case kIntValue: {
      _this->_internal_set_int_value(from._internal_int_value());
      break;
    }
    case kFloatValue: {
      _this->_internal_set_float_value(from._internal_float_value());
      break;
    }
    case kStringValue: {
      _this->_internal_set_string_value(from._internal_string_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.AndroidLogPacket.LogEvent.Arg)
}

inline void AndroidLogPacket_LogEvent_Arg::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_) {}

    , decltype(_impl_.value_){}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_value();
}

AndroidLogPacket_LogEvent_Arg::~AndroidLogPacket_LogEvent_Arg() {
  // @@protoc_insertion_point(destructor:perfetto.protos.AndroidLogPacket.LogEvent.Arg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AndroidLogPacket_LogEvent_Arg::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  if (has_value()) {
    clear_value();
  }
}

void AndroidLogPacket_LogEvent_Arg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AndroidLogPacket_LogEvent_Arg::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:perfetto.protos.AndroidLogPacket.LogEvent.Arg)
  switch (value_case()) {
    case kIntValue: {
      // No need to clear
      break;
    }
    case kFloatValue: {
      // No need to clear
      break;
    }
    case kStringValue: {
      _impl_.value_.string_value_.Destroy();
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


void AndroidLogPacket_LogEvent_Arg::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.AndroidLogPacket.LogEvent.Arg)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  clear_value();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AndroidLogPacket_LogEvent_Arg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "perfetto.protos.AndroidLogPacket.LogEvent.Arg.name");
          #endif  // !NDEBUG
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 int_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _internal_set_int_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // float float_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 29)) {
          _internal_set_float_value(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else {
          goto handle_unusual;
        }
        continue;
      // string string_value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_string_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "perfetto.protos.AndroidLogPacket.LogEvent.Arg.string_value");
          #endif  // !NDEBUG
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* AndroidLogPacket_LogEvent_Arg::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.AndroidLogPacket.LogEvent.Arg)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
                                "perfetto.protos.AndroidLogPacket.LogEvent.Arg.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  switch (value_case()) {
    case kIntValue: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt64ToArray(
          2, this->_internal_int_value(), target);
      break;
    }
    case kFloatValue: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          3, this->_internal_float_value(), target);
      break;
    }
    case kStringValue: {
      const std::string& _s = this->_internal_string_value();
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
                                  "perfetto.protos.AndroidLogPacket.LogEvent.Arg.string_value");
      target = stream->WriteStringMaybeAliased(4, _s, target);
      break;
    }
    default: ;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.AndroidLogPacket.LogEvent.Arg)
  return target;
}

::size_t AndroidLogPacket_LogEvent_Arg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.AndroidLogPacket.LogEvent.Arg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string name = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  switch (value_case()) {
    // int64 int_value = 2;
    case kIntValue: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_int_value());
      break;
    }
    // float float_value = 3;
    case kFloatValue: {
      total_size += 5;
      break;
    }
    // string string_value = 4;
    case kStringValue: {
      total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                      this->_internal_string_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AndroidLogPacket_LogEvent_Arg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AndroidLogPacket_LogEvent_Arg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AndroidLogPacket_LogEvent_Arg::GetClassData() const { return &_class_data_; }


void AndroidLogPacket_LogEvent_Arg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AndroidLogPacket_LogEvent_Arg*>(&to_msg);
  auto& from = static_cast<const AndroidLogPacket_LogEvent_Arg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.AndroidLogPacket.LogEvent.Arg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_name(from._internal_name());
  }
  switch (from.value_case()) {
    case kIntValue: {
      _this->_internal_set_int_value(from._internal_int_value());
      break;
    }
    case kFloatValue: {
      _this->_internal_set_float_value(from._internal_float_value());
      break;
    }
    case kStringValue: {
      _this->_internal_set_string_value(from._internal_string_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AndroidLogPacket_LogEvent_Arg::CopyFrom(const AndroidLogPacket_LogEvent_Arg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.AndroidLogPacket.LogEvent.Arg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AndroidLogPacket_LogEvent_Arg::IsInitialized() const {
  return true;
}

void AndroidLogPacket_LogEvent_Arg::InternalSwap(AndroidLogPacket_LogEvent_Arg* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata AndroidLogPacket_LogEvent_Arg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto_getter, &descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto_once,
      file_level_metadata_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto[0]);
}
// ===================================================================

class AndroidLogPacket_LogEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<AndroidLogPacket_LogEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AndroidLogPacket_LogEvent, _impl_._has_bits_);
  static void set_has_log_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_pid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_tid(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_tag(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_prio(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_message(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

AndroidLogPacket_LogEvent::AndroidLogPacket_LogEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.AndroidLogPacket.LogEvent)
}
AndroidLogPacket_LogEvent::AndroidLogPacket_LogEvent(const AndroidLogPacket_LogEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AndroidLogPacket_LogEvent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.args_){from._impl_.args_}
    , decltype(_impl_.tag_) {}

    , decltype(_impl_.message_) {}

    , decltype(_impl_.log_id_) {}

    , decltype(_impl_.pid_) {}

    , decltype(_impl_.tid_) {}

    , decltype(_impl_.uid_) {}

    , decltype(_impl_.timestamp_) {}

    , decltype(_impl_.prio_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.tag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.tag_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.tag_.Set(from._internal_tag(), _this->GetArenaForAllocation());
  }
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.message_.Set(from._internal_message(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.log_id_, &from._impl_.log_id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.prio_) -
    reinterpret_cast<char*>(&_impl_.log_id_)) + sizeof(_impl_.prio_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.AndroidLogPacket.LogEvent)
}

inline void AndroidLogPacket_LogEvent::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.args_){arena}
    , decltype(_impl_.tag_) {}

    , decltype(_impl_.message_) {}

    , decltype(_impl_.log_id_) { 0 }

    , decltype(_impl_.pid_) { 0 }

    , decltype(_impl_.tid_) { 0 }

    , decltype(_impl_.uid_) { 0 }

    , decltype(_impl_.timestamp_) { ::uint64_t{0u} }

    , decltype(_impl_.prio_) { 0 }

  };
  _impl_.tag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.tag_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AndroidLogPacket_LogEvent::~AndroidLogPacket_LogEvent() {
  // @@protoc_insertion_point(destructor:perfetto.protos.AndroidLogPacket.LogEvent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AndroidLogPacket_LogEvent::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_args()->~RepeatedPtrField();
  _impl_.tag_.Destroy();
  _impl_.message_.Destroy();
}

void AndroidLogPacket_LogEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AndroidLogPacket_LogEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.AndroidLogPacket.LogEvent)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_args()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.tag_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&_impl_.log_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.prio_) -
        reinterpret_cast<char*>(&_impl_.log_id_)) + sizeof(_impl_.prio_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AndroidLogPacket_LogEvent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .perfetto.protos.AndroidLogId log_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          ::int32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::perfetto::protos::AndroidLogId_IsValid(static_cast<int>(val)))) {
            _internal_set_log_id(static_cast<::perfetto::protos::AndroidLogId>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else {
          goto handle_unusual;
        }
        continue;
      // optional int32 pid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _Internal::set_has_pid(&has_bits);
          _impl_.pid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional int32 tid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _Internal::set_has_tid(&has_bits);
          _impl_.tid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional int32 uid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 32)) {
          _Internal::set_has_uid(&has_bits);
          _impl_.uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional uint64 timestamp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 40)) {
          _Internal::set_has_timestamp(&has_bits);
          _impl_.timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional string tag = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_tag();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "perfetto.protos.AndroidLogPacket.LogEvent.tag");
          #endif  // !NDEBUG
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.AndroidLogPriority prio = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 56)) {
          ::int32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::perfetto::protos::AndroidLogPriority_IsValid(static_cast<int>(val)))) {
            _internal_set_prio(static_cast<::perfetto::protos::AndroidLogPriority>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(7, val, mutable_unknown_fields());
          }
        } else {
          goto handle_unusual;
        }
        continue;
      // optional string message = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "perfetto.protos.AndroidLogPacket.LogEvent.message");
          #endif  // !NDEBUG
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .perfetto.protos.AndroidLogPacket.LogEvent.Arg args = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_args(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* AndroidLogPacket_LogEvent::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.AndroidLogPacket.LogEvent)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .perfetto.protos.AndroidLogId log_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_log_id(), target);
  }

  // optional int32 pid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        2, this->_internal_pid(), target);
  }

  // optional int32 tid = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        3, this->_internal_tid(), target);
  }

  // optional int32 uid = 4;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        4, this->_internal_uid(), target);
  }

  // optional uint64 timestamp = 5;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_timestamp(), target);
  }

  // optional string tag = 6;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_tag();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
                                "perfetto.protos.AndroidLogPacket.LogEvent.tag");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional .perfetto.protos.AndroidLogPriority prio = 7;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        7, this->_internal_prio(), target);
  }

  // optional string message = 8;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_message();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
                                "perfetto.protos.AndroidLogPacket.LogEvent.message");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // repeated .perfetto.protos.AndroidLogPacket.LogEvent.Arg args = 9;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_args_size()); i < n; i++) {
    const auto& repfield = this->_internal_args(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(9, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.AndroidLogPacket.LogEvent)
  return target;
}

::size_t AndroidLogPacket_LogEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.AndroidLogPacket.LogEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .perfetto.protos.AndroidLogPacket.LogEvent.Arg args = 9;
  total_size += 1UL * this->_internal_args_size();
  for (const auto& msg : this->_internal_args()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string tag = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                      this->_internal_tag());
    }

    // optional string message = 8;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                      this->_internal_message());
    }

    // optional .perfetto.protos.AndroidLogId log_id = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_log_id());
    }

    // optional int32 pid = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_pid());
    }

    // optional int32 tid = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_tid());
    }

    // optional int32 uid = 4;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_uid());
    }

    // optional uint64 timestamp = 5;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_timestamp());
    }

    // optional .perfetto.protos.AndroidLogPriority prio = 7;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_prio());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AndroidLogPacket_LogEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AndroidLogPacket_LogEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AndroidLogPacket_LogEvent::GetClassData() const { return &_class_data_; }


void AndroidLogPacket_LogEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AndroidLogPacket_LogEvent*>(&to_msg);
  auto& from = static_cast<const AndroidLogPacket_LogEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.AndroidLogPacket.LogEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_args()->MergeFrom(from._internal_args());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_tag(from._internal_tag());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_message(from._internal_message());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.log_id_ = from._impl_.log_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.pid_ = from._impl_.pid_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.tid_ = from._impl_.tid_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.uid_ = from._impl_.uid_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.timestamp_ = from._impl_.timestamp_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.prio_ = from._impl_.prio_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AndroidLogPacket_LogEvent::CopyFrom(const AndroidLogPacket_LogEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.AndroidLogPacket.LogEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AndroidLogPacket_LogEvent::IsInitialized() const {
  return true;
}

void AndroidLogPacket_LogEvent::InternalSwap(AndroidLogPacket_LogEvent* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_args()->InternalSwap(other->_internal_mutable_args());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tag_, lhs_arena,
                                       &other->_impl_.tag_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, lhs_arena,
                                       &other->_impl_.message_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AndroidLogPacket_LogEvent, _impl_.prio_)
      + sizeof(AndroidLogPacket_LogEvent::_impl_.prio_)
      - PROTOBUF_FIELD_OFFSET(AndroidLogPacket_LogEvent, _impl_.log_id_)>(
          reinterpret_cast<char*>(&_impl_.log_id_),
          reinterpret_cast<char*>(&other->_impl_.log_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AndroidLogPacket_LogEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto_getter, &descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto_once,
      file_level_metadata_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto[1]);
}
// ===================================================================

class AndroidLogPacket_Stats::_Internal {
 public:
  using HasBits = decltype(std::declval<AndroidLogPacket_Stats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AndroidLogPacket_Stats, _impl_._has_bits_);
  static void set_has_num_total(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_num_failed(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_num_skipped(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

AndroidLogPacket_Stats::AndroidLogPacket_Stats(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.AndroidLogPacket.Stats)
}
AndroidLogPacket_Stats::AndroidLogPacket_Stats(const AndroidLogPacket_Stats& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.AndroidLogPacket.Stats)
}

inline void AndroidLogPacket_Stats::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.num_total_) { ::uint64_t{0u} }

    , decltype(_impl_.num_failed_) { ::uint64_t{0u} }

    , decltype(_impl_.num_skipped_) { ::uint64_t{0u} }

  };
}

AndroidLogPacket_Stats::~AndroidLogPacket_Stats() {
  // @@protoc_insertion_point(destructor:perfetto.protos.AndroidLogPacket.Stats)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AndroidLogPacket_Stats::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void AndroidLogPacket_Stats::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AndroidLogPacket_Stats::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.AndroidLogPacket.Stats)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.num_total_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.num_skipped_) -
        reinterpret_cast<char*>(&_impl_.num_total_)) + sizeof(_impl_.num_skipped_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AndroidLogPacket_Stats::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 num_total = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _Internal::set_has_num_total(&has_bits);
          _impl_.num_total_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional uint64 num_failed = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _Internal::set_has_num_failed(&has_bits);
          _impl_.num_failed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional uint64 num_skipped = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _Internal::set_has_num_skipped(&has_bits);
          _impl_.num_skipped_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* AndroidLogPacket_Stats::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.AndroidLogPacket.Stats)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 num_total = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_num_total(), target);
  }

  // optional uint64 num_failed = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_num_failed(), target);
  }

  // optional uint64 num_skipped = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_num_skipped(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.AndroidLogPacket.Stats)
  return target;
}

::size_t AndroidLogPacket_Stats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.AndroidLogPacket.Stats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 num_total = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_num_total());
    }

    // optional uint64 num_failed = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_num_failed());
    }

    // optional uint64 num_skipped = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_num_skipped());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AndroidLogPacket_Stats::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AndroidLogPacket_Stats::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AndroidLogPacket_Stats::GetClassData() const { return &_class_data_; }


void AndroidLogPacket_Stats::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AndroidLogPacket_Stats*>(&to_msg);
  auto& from = static_cast<const AndroidLogPacket_Stats&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.AndroidLogPacket.Stats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.num_total_ = from._impl_.num_total_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.num_failed_ = from._impl_.num_failed_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.num_skipped_ = from._impl_.num_skipped_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AndroidLogPacket_Stats::CopyFrom(const AndroidLogPacket_Stats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.AndroidLogPacket.Stats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AndroidLogPacket_Stats::IsInitialized() const {
  return true;
}

void AndroidLogPacket_Stats::InternalSwap(AndroidLogPacket_Stats* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AndroidLogPacket_Stats, _impl_.num_skipped_)
      + sizeof(AndroidLogPacket_Stats::_impl_.num_skipped_)
      - PROTOBUF_FIELD_OFFSET(AndroidLogPacket_Stats, _impl_.num_total_)>(
          reinterpret_cast<char*>(&_impl_.num_total_),
          reinterpret_cast<char*>(&other->_impl_.num_total_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AndroidLogPacket_Stats::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto_getter, &descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto_once,
      file_level_metadata_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto[2]);
}
// ===================================================================

class AndroidLogPacket::_Internal {
 public:
  using HasBits = decltype(std::declval<AndroidLogPacket>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AndroidLogPacket, _impl_._has_bits_);
  static const ::perfetto::protos::AndroidLogPacket_Stats& stats(const AndroidLogPacket* msg);
  static void set_has_stats(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::perfetto::protos::AndroidLogPacket_Stats&
AndroidLogPacket::_Internal::stats(const AndroidLogPacket* msg) {
  return *msg->_impl_.stats_;
}
AndroidLogPacket::AndroidLogPacket(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.AndroidLogPacket)
}
AndroidLogPacket::AndroidLogPacket(const AndroidLogPacket& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AndroidLogPacket* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.events_){from._impl_.events_}
    , decltype(_impl_.stats_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.stats_ = new ::perfetto::protos::AndroidLogPacket_Stats(*from._impl_.stats_);
  }
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.AndroidLogPacket)
}

inline void AndroidLogPacket::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.events_){arena}
    , decltype(_impl_.stats_){nullptr}
  };
}

AndroidLogPacket::~AndroidLogPacket() {
  // @@protoc_insertion_point(destructor:perfetto.protos.AndroidLogPacket)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AndroidLogPacket::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_events()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.stats_;
}

void AndroidLogPacket::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AndroidLogPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.AndroidLogPacket)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_events()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.stats_ != nullptr);
    _impl_.stats_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AndroidLogPacket::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .perfetto.protos.AndroidLogPacket.LogEvent events = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_events(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.AndroidLogPacket.Stats stats = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_stats(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* AndroidLogPacket::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.AndroidLogPacket)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .perfetto.protos.AndroidLogPacket.LogEvent events = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_events_size()); i < n; i++) {
    const auto& repfield = this->_internal_events(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .perfetto.protos.AndroidLogPacket.Stats stats = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::stats(this),
        _Internal::stats(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.AndroidLogPacket)
  return target;
}

::size_t AndroidLogPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.AndroidLogPacket)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .perfetto.protos.AndroidLogPacket.LogEvent events = 1;
  total_size += 1UL * this->_internal_events_size();
  for (const auto& msg : this->_internal_events()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .perfetto.protos.AndroidLogPacket.Stats stats = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.stats_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AndroidLogPacket::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AndroidLogPacket::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AndroidLogPacket::GetClassData() const { return &_class_data_; }


void AndroidLogPacket::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AndroidLogPacket*>(&to_msg);
  auto& from = static_cast<const AndroidLogPacket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.AndroidLogPacket)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_events()->MergeFrom(from._internal_events());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_stats()->::perfetto::protos::AndroidLogPacket_Stats::MergeFrom(
        from._internal_stats());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AndroidLogPacket::CopyFrom(const AndroidLogPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.AndroidLogPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AndroidLogPacket::IsInitialized() const {
  return true;
}

void AndroidLogPacket::InternalSwap(AndroidLogPacket* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_events()->InternalSwap(other->_internal_mutable_events());
  swap(_impl_.stats_, other->_impl_.stats_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AndroidLogPacket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto_getter, &descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto_once,
      file_level_metadata_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::perfetto::protos::AndroidLogPacket_LogEvent_Arg*
Arena::CreateMaybeMessage< ::perfetto::protos::AndroidLogPacket_LogEvent_Arg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::AndroidLogPacket_LogEvent_Arg >(arena);
}
template<> PROTOBUF_NOINLINE ::perfetto::protos::AndroidLogPacket_LogEvent*
Arena::CreateMaybeMessage< ::perfetto::protos::AndroidLogPacket_LogEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::AndroidLogPacket_LogEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::perfetto::protos::AndroidLogPacket_Stats*
Arena::CreateMaybeMessage< ::perfetto::protos::AndroidLogPacket_Stats >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::AndroidLogPacket_Stats >(arena);
}
template<> PROTOBUF_NOINLINE ::perfetto::protos::AndroidLogPacket*
Arena::CreateMaybeMessage< ::perfetto::protos::AndroidLogPacket >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::AndroidLogPacket >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
