// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/android/android_log.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "protos/perfetto/common/android_log_constants.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto;
namespace perfetto {
namespace protos {
class AndroidLogPacket;
struct AndroidLogPacketDefaultTypeInternal;
extern AndroidLogPacketDefaultTypeInternal _AndroidLogPacket_default_instance_;
class AndroidLogPacket_LogEvent;
struct AndroidLogPacket_LogEventDefaultTypeInternal;
extern AndroidLogPacket_LogEventDefaultTypeInternal _AndroidLogPacket_LogEvent_default_instance_;
class AndroidLogPacket_LogEvent_Arg;
struct AndroidLogPacket_LogEvent_ArgDefaultTypeInternal;
extern AndroidLogPacket_LogEvent_ArgDefaultTypeInternal _AndroidLogPacket_LogEvent_Arg_default_instance_;
class AndroidLogPacket_Stats;
struct AndroidLogPacket_StatsDefaultTypeInternal;
extern AndroidLogPacket_StatsDefaultTypeInternal _AndroidLogPacket_Stats_default_instance_;
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template <>
::perfetto::protos::AndroidLogPacket* Arena::CreateMaybeMessage<::perfetto::protos::AndroidLogPacket>(Arena*);
template <>
::perfetto::protos::AndroidLogPacket_LogEvent* Arena::CreateMaybeMessage<::perfetto::protos::AndroidLogPacket_LogEvent>(Arena*);
template <>
::perfetto::protos::AndroidLogPacket_LogEvent_Arg* Arena::CreateMaybeMessage<::perfetto::protos::AndroidLogPacket_LogEvent_Arg>(Arena*);
template <>
::perfetto::protos::AndroidLogPacket_Stats* Arena::CreateMaybeMessage<::perfetto::protos::AndroidLogPacket_Stats>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace perfetto {
namespace protos {

// ===================================================================


// -------------------------------------------------------------------

class AndroidLogPacket_LogEvent_Arg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.AndroidLogPacket.LogEvent.Arg) */ {
 public:
  inline AndroidLogPacket_LogEvent_Arg() : AndroidLogPacket_LogEvent_Arg(nullptr) {}
  ~AndroidLogPacket_LogEvent_Arg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AndroidLogPacket_LogEvent_Arg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AndroidLogPacket_LogEvent_Arg(const AndroidLogPacket_LogEvent_Arg& from);
  AndroidLogPacket_LogEvent_Arg(AndroidLogPacket_LogEvent_Arg&& from) noexcept
    : AndroidLogPacket_LogEvent_Arg() {
    *this = ::std::move(from);
  }

  inline AndroidLogPacket_LogEvent_Arg& operator=(const AndroidLogPacket_LogEvent_Arg& from) {
    CopyFrom(from);
    return *this;
  }
  inline AndroidLogPacket_LogEvent_Arg& operator=(AndroidLogPacket_LogEvent_Arg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AndroidLogPacket_LogEvent_Arg& default_instance() {
    return *internal_default_instance();
  }
  enum ValueCase {
    kIntValue = 2,
    kFloatValue = 3,
    kStringValue = 4,
    VALUE_NOT_SET = 0,
  };

  static inline const AndroidLogPacket_LogEvent_Arg* internal_default_instance() {
    return reinterpret_cast<const AndroidLogPacket_LogEvent_Arg*>(
               &_AndroidLogPacket_LogEvent_Arg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AndroidLogPacket_LogEvent_Arg& a, AndroidLogPacket_LogEvent_Arg& b) {
    a.Swap(&b);
  }
  inline void Swap(AndroidLogPacket_LogEvent_Arg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AndroidLogPacket_LogEvent_Arg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AndroidLogPacket_LogEvent_Arg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AndroidLogPacket_LogEvent_Arg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AndroidLogPacket_LogEvent_Arg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const AndroidLogPacket_LogEvent_Arg& from) {
    AndroidLogPacket_LogEvent_Arg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AndroidLogPacket_LogEvent_Arg* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.AndroidLogPacket.LogEvent.Arg";
  }
  protected:
  explicit AndroidLogPacket_LogEvent_Arg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kIntValueFieldNumber = 2,
    kFloatValueFieldNumber = 3,
    kStringValueFieldNumber = 4,
  };
  // optional string name = 1;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // int64 int_value = 2;
  bool has_int_value() const;
  void clear_int_value() ;
  ::int64_t int_value() const;
  void set_int_value(::int64_t value);

  private:
  ::int64_t _internal_int_value() const;
  void _internal_set_int_value(::int64_t value);

  public:
  // float float_value = 3;
  bool has_float_value() const;
  void clear_float_value() ;
  float float_value() const;
  void set_float_value(float value);

  private:
  float _internal_float_value() const;
  void _internal_set_float_value(float value);

  public:
  // string string_value = 4;
  bool has_string_value() const;
  void clear_string_value() ;
  const std::string& string_value() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_string_value(Arg_&& arg, Args_... args);
  std::string* mutable_string_value();
  PROTOBUF_NODISCARD std::string* release_string_value();
  void set_allocated_string_value(std::string* ptr);

  private:
  const std::string& _internal_string_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_string_value(
      const std::string& value);
  std::string* _internal_mutable_string_value();

  public:
  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:perfetto.protos.AndroidLogPacket.LogEvent.Arg)
 private:
  class _Internal;
  void set_has_int_value();
  void set_has_float_value();
  void set_has_string_value();

  inline bool has_value() const;
  inline void clear_has_value();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    union ValueUnion {
      constexpr ValueUnion() : _constinit_{} {}
        ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
      ::int64_t int_value_;
      float float_value_;
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr string_value_;
    } value_;
    ::uint32_t _oneof_case_[1];

  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto;
};// -------------------------------------------------------------------

class AndroidLogPacket_LogEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.AndroidLogPacket.LogEvent) */ {
 public:
  inline AndroidLogPacket_LogEvent() : AndroidLogPacket_LogEvent(nullptr) {}
  ~AndroidLogPacket_LogEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AndroidLogPacket_LogEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AndroidLogPacket_LogEvent(const AndroidLogPacket_LogEvent& from);
  AndroidLogPacket_LogEvent(AndroidLogPacket_LogEvent&& from) noexcept
    : AndroidLogPacket_LogEvent() {
    *this = ::std::move(from);
  }

  inline AndroidLogPacket_LogEvent& operator=(const AndroidLogPacket_LogEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline AndroidLogPacket_LogEvent& operator=(AndroidLogPacket_LogEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AndroidLogPacket_LogEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const AndroidLogPacket_LogEvent* internal_default_instance() {
    return reinterpret_cast<const AndroidLogPacket_LogEvent*>(
               &_AndroidLogPacket_LogEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AndroidLogPacket_LogEvent& a, AndroidLogPacket_LogEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(AndroidLogPacket_LogEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AndroidLogPacket_LogEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AndroidLogPacket_LogEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AndroidLogPacket_LogEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AndroidLogPacket_LogEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const AndroidLogPacket_LogEvent& from) {
    AndroidLogPacket_LogEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AndroidLogPacket_LogEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.AndroidLogPacket.LogEvent";
  }
  protected:
  explicit AndroidLogPacket_LogEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AndroidLogPacket_LogEvent_Arg Arg;

  // accessors -------------------------------------------------------

  enum : int {
    kArgsFieldNumber = 9,
    kTagFieldNumber = 6,
    kMessageFieldNumber = 8,
    kLogIdFieldNumber = 1,
    kPidFieldNumber = 2,
    kTidFieldNumber = 3,
    kUidFieldNumber = 4,
    kTimestampFieldNumber = 5,
    kPrioFieldNumber = 7,
  };
  // repeated .perfetto.protos.AndroidLogPacket.LogEvent.Arg args = 9;
  int args_size() const;
  private:
  int _internal_args_size() const;

  public:
  void clear_args() ;
  ::perfetto::protos::AndroidLogPacket_LogEvent_Arg* mutable_args(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidLogPacket_LogEvent_Arg >*
      mutable_args();
  private:
  const ::perfetto::protos::AndroidLogPacket_LogEvent_Arg& _internal_args(int index) const;
  ::perfetto::protos::AndroidLogPacket_LogEvent_Arg* _internal_add_args();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::AndroidLogPacket_LogEvent_Arg>& _internal_args() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::AndroidLogPacket_LogEvent_Arg>* _internal_mutable_args();
  public:
  const ::perfetto::protos::AndroidLogPacket_LogEvent_Arg& args(int index) const;
  ::perfetto::protos::AndroidLogPacket_LogEvent_Arg* add_args();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidLogPacket_LogEvent_Arg >&
      args() const;
  // optional string tag = 6;
  bool has_tag() const;
  void clear_tag() ;
  const std::string& tag() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tag(Arg_&& arg, Args_... args);
  std::string* mutable_tag();
  PROTOBUF_NODISCARD std::string* release_tag();
  void set_allocated_tag(std::string* ptr);

  private:
  const std::string& _internal_tag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tag(
      const std::string& value);
  std::string* _internal_mutable_tag();

  public:
  // optional string message = 8;
  bool has_message() const;
  void clear_message() ;
  const std::string& message() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* ptr);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // optional .perfetto.protos.AndroidLogId log_id = 1;
  bool has_log_id() const;
  void clear_log_id() ;
  ::perfetto::protos::AndroidLogId log_id() const;
  void set_log_id(::perfetto::protos::AndroidLogId value);

  private:
  ::perfetto::protos::AndroidLogId _internal_log_id() const;
  void _internal_set_log_id(::perfetto::protos::AndroidLogId value);

  public:
  // optional int32 pid = 2;
  bool has_pid() const;
  void clear_pid() ;
  ::int32_t pid() const;
  void set_pid(::int32_t value);

  private:
  ::int32_t _internal_pid() const;
  void _internal_set_pid(::int32_t value);

  public:
  // optional int32 tid = 3;
  bool has_tid() const;
  void clear_tid() ;
  ::int32_t tid() const;
  void set_tid(::int32_t value);

  private:
  ::int32_t _internal_tid() const;
  void _internal_set_tid(::int32_t value);

  public:
  // optional int32 uid = 4;
  bool has_uid() const;
  void clear_uid() ;
  ::int32_t uid() const;
  void set_uid(::int32_t value);

  private:
  ::int32_t _internal_uid() const;
  void _internal_set_uid(::int32_t value);

  public:
  // optional uint64 timestamp = 5;
  bool has_timestamp() const;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // optional .perfetto.protos.AndroidLogPriority prio = 7;
  bool has_prio() const;
  void clear_prio() ;
  ::perfetto::protos::AndroidLogPriority prio() const;
  void set_prio(::perfetto::protos::AndroidLogPriority value);

  private:
  ::perfetto::protos::AndroidLogPriority _internal_prio() const;
  void _internal_set_prio(::perfetto::protos::AndroidLogPriority value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.AndroidLogPacket.LogEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidLogPacket_LogEvent_Arg > args_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tag_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
    int log_id_;
    ::int32_t pid_;
    ::int32_t tid_;
    ::int32_t uid_;
    ::uint64_t timestamp_;
    int prio_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto;
};// -------------------------------------------------------------------

class AndroidLogPacket_Stats final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.AndroidLogPacket.Stats) */ {
 public:
  inline AndroidLogPacket_Stats() : AndroidLogPacket_Stats(nullptr) {}
  ~AndroidLogPacket_Stats() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AndroidLogPacket_Stats(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AndroidLogPacket_Stats(const AndroidLogPacket_Stats& from);
  AndroidLogPacket_Stats(AndroidLogPacket_Stats&& from) noexcept
    : AndroidLogPacket_Stats() {
    *this = ::std::move(from);
  }

  inline AndroidLogPacket_Stats& operator=(const AndroidLogPacket_Stats& from) {
    CopyFrom(from);
    return *this;
  }
  inline AndroidLogPacket_Stats& operator=(AndroidLogPacket_Stats&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AndroidLogPacket_Stats& default_instance() {
    return *internal_default_instance();
  }
  static inline const AndroidLogPacket_Stats* internal_default_instance() {
    return reinterpret_cast<const AndroidLogPacket_Stats*>(
               &_AndroidLogPacket_Stats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AndroidLogPacket_Stats& a, AndroidLogPacket_Stats& b) {
    a.Swap(&b);
  }
  inline void Swap(AndroidLogPacket_Stats* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AndroidLogPacket_Stats* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AndroidLogPacket_Stats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AndroidLogPacket_Stats>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AndroidLogPacket_Stats& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const AndroidLogPacket_Stats& from) {
    AndroidLogPacket_Stats::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AndroidLogPacket_Stats* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.AndroidLogPacket.Stats";
  }
  protected:
  explicit AndroidLogPacket_Stats(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNumTotalFieldNumber = 1,
    kNumFailedFieldNumber = 2,
    kNumSkippedFieldNumber = 3,
  };
  // optional uint64 num_total = 1;
  bool has_num_total() const;
  void clear_num_total() ;
  ::uint64_t num_total() const;
  void set_num_total(::uint64_t value);

  private:
  ::uint64_t _internal_num_total() const;
  void _internal_set_num_total(::uint64_t value);

  public:
  // optional uint64 num_failed = 2;
  bool has_num_failed() const;
  void clear_num_failed() ;
  ::uint64_t num_failed() const;
  void set_num_failed(::uint64_t value);

  private:
  ::uint64_t _internal_num_failed() const;
  void _internal_set_num_failed(::uint64_t value);

  public:
  // optional uint64 num_skipped = 3;
  bool has_num_skipped() const;
  void clear_num_skipped() ;
  ::uint64_t num_skipped() const;
  void set_num_skipped(::uint64_t value);

  private:
  ::uint64_t _internal_num_skipped() const;
  void _internal_set_num_skipped(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.AndroidLogPacket.Stats)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::uint64_t num_total_;
    ::uint64_t num_failed_;
    ::uint64_t num_skipped_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto;
};// -------------------------------------------------------------------

class AndroidLogPacket final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.AndroidLogPacket) */ {
 public:
  inline AndroidLogPacket() : AndroidLogPacket(nullptr) {}
  ~AndroidLogPacket() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AndroidLogPacket(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AndroidLogPacket(const AndroidLogPacket& from);
  AndroidLogPacket(AndroidLogPacket&& from) noexcept
    : AndroidLogPacket() {
    *this = ::std::move(from);
  }

  inline AndroidLogPacket& operator=(const AndroidLogPacket& from) {
    CopyFrom(from);
    return *this;
  }
  inline AndroidLogPacket& operator=(AndroidLogPacket&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AndroidLogPacket& default_instance() {
    return *internal_default_instance();
  }
  static inline const AndroidLogPacket* internal_default_instance() {
    return reinterpret_cast<const AndroidLogPacket*>(
               &_AndroidLogPacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(AndroidLogPacket& a, AndroidLogPacket& b) {
    a.Swap(&b);
  }
  inline void Swap(AndroidLogPacket* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AndroidLogPacket* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AndroidLogPacket* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AndroidLogPacket>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AndroidLogPacket& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const AndroidLogPacket& from) {
    AndroidLogPacket::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AndroidLogPacket* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.AndroidLogPacket";
  }
  protected:
  explicit AndroidLogPacket(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AndroidLogPacket_LogEvent LogEvent;
  typedef AndroidLogPacket_Stats Stats;

  // accessors -------------------------------------------------------

  enum : int {
    kEventsFieldNumber = 1,
    kStatsFieldNumber = 2,
  };
  // repeated .perfetto.protos.AndroidLogPacket.LogEvent events = 1;
  int events_size() const;
  private:
  int _internal_events_size() const;

  public:
  void clear_events() ;
  ::perfetto::protos::AndroidLogPacket_LogEvent* mutable_events(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidLogPacket_LogEvent >*
      mutable_events();
  private:
  const ::perfetto::protos::AndroidLogPacket_LogEvent& _internal_events(int index) const;
  ::perfetto::protos::AndroidLogPacket_LogEvent* _internal_add_events();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::AndroidLogPacket_LogEvent>& _internal_events() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::AndroidLogPacket_LogEvent>* _internal_mutable_events();
  public:
  const ::perfetto::protos::AndroidLogPacket_LogEvent& events(int index) const;
  ::perfetto::protos::AndroidLogPacket_LogEvent* add_events();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidLogPacket_LogEvent >&
      events() const;
  // optional .perfetto.protos.AndroidLogPacket.Stats stats = 2;
  bool has_stats() const;
  void clear_stats() ;
  const ::perfetto::protos::AndroidLogPacket_Stats& stats() const;
  PROTOBUF_NODISCARD ::perfetto::protos::AndroidLogPacket_Stats* release_stats();
  ::perfetto::protos::AndroidLogPacket_Stats* mutable_stats();
  void set_allocated_stats(::perfetto::protos::AndroidLogPacket_Stats* stats);
  private:
  const ::perfetto::protos::AndroidLogPacket_Stats& _internal_stats() const;
  ::perfetto::protos::AndroidLogPacket_Stats* _internal_mutable_stats();
  public:
  void unsafe_arena_set_allocated_stats(
      ::perfetto::protos::AndroidLogPacket_Stats* stats);
  ::perfetto::protos::AndroidLogPacket_Stats* unsafe_arena_release_stats();
  // @@protoc_insertion_point(class_scope:perfetto.protos.AndroidLogPacket)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidLogPacket_LogEvent > events_;
    ::perfetto::protos::AndroidLogPacket_Stats* stats_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AndroidLogPacket_LogEvent_Arg

// optional string name = 1;
inline bool AndroidLogPacket_LogEvent_Arg::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void AndroidLogPacket_LogEvent_Arg::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& AndroidLogPacket_LogEvent_Arg::name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidLogPacket.LogEvent.Arg.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AndroidLogPacket_LogEvent_Arg::set_name(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidLogPacket.LogEvent.Arg.name)
}
inline std::string* AndroidLogPacket_LogEvent_Arg::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.AndroidLogPacket.LogEvent.Arg.name)
  return _s;
}
inline const std::string& AndroidLogPacket_LogEvent_Arg::_internal_name() const {
  return _impl_.name_.Get();
}
inline void AndroidLogPacket_LogEvent_Arg::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* AndroidLogPacket_LogEvent_Arg::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* AndroidLogPacket_LogEvent_Arg::release_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.AndroidLogPacket.LogEvent.Arg.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void AndroidLogPacket_LogEvent_Arg::set_allocated_name(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.AndroidLogPacket.LogEvent.Arg.name)
}

// int64 int_value = 2;
inline bool AndroidLogPacket_LogEvent_Arg::has_int_value() const {
  return value_case() == kIntValue;
}
inline void AndroidLogPacket_LogEvent_Arg::set_has_int_value() {
  _impl_._oneof_case_[0] = kIntValue;
}
inline void AndroidLogPacket_LogEvent_Arg::clear_int_value() {
  if (value_case() == kIntValue) {
    _impl_.value_.int_value_ = ::int64_t{0};
    clear_has_value();
  }
}
inline ::int64_t AndroidLogPacket_LogEvent_Arg::int_value() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidLogPacket.LogEvent.Arg.int_value)
  return _internal_int_value();
}
inline void AndroidLogPacket_LogEvent_Arg::set_int_value(::int64_t value) {
  _internal_set_int_value(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidLogPacket.LogEvent.Arg.int_value)
}
inline ::int64_t AndroidLogPacket_LogEvent_Arg::_internal_int_value() const {
  if (value_case() == kIntValue) {
    return _impl_.value_.int_value_;
  }
  return ::int64_t{0};
}
inline void AndroidLogPacket_LogEvent_Arg::_internal_set_int_value(::int64_t value) {
  if (value_case() != kIntValue) {
    clear_value();
    set_has_int_value();
  }
  _impl_.value_.int_value_ = value;
}

// float float_value = 3;
inline bool AndroidLogPacket_LogEvent_Arg::has_float_value() const {
  return value_case() == kFloatValue;
}
inline void AndroidLogPacket_LogEvent_Arg::set_has_float_value() {
  _impl_._oneof_case_[0] = kFloatValue;
}
inline void AndroidLogPacket_LogEvent_Arg::clear_float_value() {
  if (value_case() == kFloatValue) {
    _impl_.value_.float_value_ = 0;
    clear_has_value();
  }
}
inline float AndroidLogPacket_LogEvent_Arg::float_value() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidLogPacket.LogEvent.Arg.float_value)
  return _internal_float_value();
}
inline void AndroidLogPacket_LogEvent_Arg::set_float_value(float value) {
  _internal_set_float_value(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidLogPacket.LogEvent.Arg.float_value)
}
inline float AndroidLogPacket_LogEvent_Arg::_internal_float_value() const {
  if (value_case() == kFloatValue) {
    return _impl_.value_.float_value_;
  }
  return 0;
}
inline void AndroidLogPacket_LogEvent_Arg::_internal_set_float_value(float value) {
  if (value_case() != kFloatValue) {
    clear_value();
    set_has_float_value();
  }
  _impl_.value_.float_value_ = value;
}

// string string_value = 4;
inline bool AndroidLogPacket_LogEvent_Arg::has_string_value() const {
  return value_case() == kStringValue;
}
inline void AndroidLogPacket_LogEvent_Arg::set_has_string_value() {
  _impl_._oneof_case_[0] = kStringValue;
}
inline void AndroidLogPacket_LogEvent_Arg::clear_string_value() {
  if (value_case() == kStringValue) {
    _impl_.value_.string_value_.Destroy();
    clear_has_value();
  }
}
inline const std::string& AndroidLogPacket_LogEvent_Arg::string_value() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidLogPacket.LogEvent.Arg.string_value)
  return _internal_string_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AndroidLogPacket_LogEvent_Arg::set_string_value(Arg_&& arg,
                                                     Args_... args) {
  if (value_case() != kStringValue) {
    clear_value();

    set_has_string_value();
    _impl_.value_.string_value_.InitDefault();
  }
  _impl_.value_.string_value_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidLogPacket.LogEvent.Arg.string_value)
}
inline std::string* AndroidLogPacket_LogEvent_Arg::mutable_string_value() {
  std::string* _s = _internal_mutable_string_value();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.AndroidLogPacket.LogEvent.Arg.string_value)
  return _s;
}
inline const std::string& AndroidLogPacket_LogEvent_Arg::_internal_string_value() const {
  if (value_case() != kStringValue) {
    return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.value_.string_value_.Get();
}
inline void AndroidLogPacket_LogEvent_Arg::_internal_set_string_value(const std::string& value) {
  if (value_case() != kStringValue) {
    clear_value();

    set_has_string_value();
    _impl_.value_.string_value_.InitDefault();
  }


  _impl_.value_.string_value_.Set(value, GetArenaForAllocation());
}
inline std::string* AndroidLogPacket_LogEvent_Arg::_internal_mutable_string_value() {
  if (value_case() != kStringValue) {
    clear_value();

    set_has_string_value();
    _impl_.value_.string_value_.InitDefault();
  }
  return _impl_.value_.string_value_.Mutable( GetArenaForAllocation());
}
inline std::string* AndroidLogPacket_LogEvent_Arg::release_string_value() {
  // @@protoc_insertion_point(field_release:perfetto.protos.AndroidLogPacket.LogEvent.Arg.string_value)
  if (value_case() != kStringValue) {
    return nullptr;
  }
  clear_has_value();
  return _impl_.value_.string_value_.Release();
}
inline void AndroidLogPacket_LogEvent_Arg::set_allocated_string_value(std::string* value) {
  if (has_value()) {
    clear_value();
  }
  if (value != nullptr) {
    set_has_string_value();
    _impl_.value_.string_value_.InitAllocated(value, GetArenaForAllocation());
  }
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.AndroidLogPacket.LogEvent.Arg.string_value)
}

inline bool AndroidLogPacket_LogEvent_Arg::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void AndroidLogPacket_LogEvent_Arg::clear_has_value() {
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}
inline AndroidLogPacket_LogEvent_Arg::ValueCase AndroidLogPacket_LogEvent_Arg::value_case() const {
  return AndroidLogPacket_LogEvent_Arg::ValueCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// AndroidLogPacket_LogEvent

// optional .perfetto.protos.AndroidLogId log_id = 1;
inline bool AndroidLogPacket_LogEvent::has_log_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void AndroidLogPacket_LogEvent::clear_log_id() {
  _impl_.log_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::perfetto::protos::AndroidLogId AndroidLogPacket_LogEvent::log_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidLogPacket.LogEvent.log_id)
  return _internal_log_id();
}
inline void AndroidLogPacket_LogEvent::set_log_id(::perfetto::protos::AndroidLogId value) {
   _internal_set_log_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidLogPacket.LogEvent.log_id)
}
inline ::perfetto::protos::AndroidLogId AndroidLogPacket_LogEvent::_internal_log_id() const {
  return static_cast<::perfetto::protos::AndroidLogId>(_impl_.log_id_);
}
inline void AndroidLogPacket_LogEvent::_internal_set_log_id(::perfetto::protos::AndroidLogId value) {
  assert(::perfetto::protos::AndroidLogId_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.log_id_ = value;
}

// optional int32 pid = 2;
inline bool AndroidLogPacket_LogEvent::has_pid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void AndroidLogPacket_LogEvent::clear_pid() {
  _impl_.pid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t AndroidLogPacket_LogEvent::pid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidLogPacket.LogEvent.pid)
  return _internal_pid();
}
inline void AndroidLogPacket_LogEvent::set_pid(::int32_t value) {
  _internal_set_pid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidLogPacket.LogEvent.pid)
}
inline ::int32_t AndroidLogPacket_LogEvent::_internal_pid() const {
  return _impl_.pid_;
}
inline void AndroidLogPacket_LogEvent::_internal_set_pid(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.pid_ = value;
}

// optional int32 tid = 3;
inline bool AndroidLogPacket_LogEvent::has_tid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void AndroidLogPacket_LogEvent::clear_tid() {
  _impl_.tid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t AndroidLogPacket_LogEvent::tid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidLogPacket.LogEvent.tid)
  return _internal_tid();
}
inline void AndroidLogPacket_LogEvent::set_tid(::int32_t value) {
  _internal_set_tid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidLogPacket.LogEvent.tid)
}
inline ::int32_t AndroidLogPacket_LogEvent::_internal_tid() const {
  return _impl_.tid_;
}
inline void AndroidLogPacket_LogEvent::_internal_set_tid(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.tid_ = value;
}

// optional int32 uid = 4;
inline bool AndroidLogPacket_LogEvent::has_uid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void AndroidLogPacket_LogEvent::clear_uid() {
  _impl_.uid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t AndroidLogPacket_LogEvent::uid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidLogPacket.LogEvent.uid)
  return _internal_uid();
}
inline void AndroidLogPacket_LogEvent::set_uid(::int32_t value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidLogPacket.LogEvent.uid)
}
inline ::int32_t AndroidLogPacket_LogEvent::_internal_uid() const {
  return _impl_.uid_;
}
inline void AndroidLogPacket_LogEvent::_internal_set_uid(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.uid_ = value;
}

// optional uint64 timestamp = 5;
inline bool AndroidLogPacket_LogEvent::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void AndroidLogPacket_LogEvent::clear_timestamp() {
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint64_t AndroidLogPacket_LogEvent::timestamp() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidLogPacket.LogEvent.timestamp)
  return _internal_timestamp();
}
inline void AndroidLogPacket_LogEvent::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidLogPacket.LogEvent.timestamp)
}
inline ::uint64_t AndroidLogPacket_LogEvent::_internal_timestamp() const {
  return _impl_.timestamp_;
}
inline void AndroidLogPacket_LogEvent::_internal_set_timestamp(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.timestamp_ = value;
}

// optional string tag = 6;
inline bool AndroidLogPacket_LogEvent::has_tag() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void AndroidLogPacket_LogEvent::clear_tag() {
  _impl_.tag_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& AndroidLogPacket_LogEvent::tag() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidLogPacket.LogEvent.tag)
  return _internal_tag();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AndroidLogPacket_LogEvent::set_tag(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.tag_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidLogPacket.LogEvent.tag)
}
inline std::string* AndroidLogPacket_LogEvent::mutable_tag() {
  std::string* _s = _internal_mutable_tag();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.AndroidLogPacket.LogEvent.tag)
  return _s;
}
inline const std::string& AndroidLogPacket_LogEvent::_internal_tag() const {
  return _impl_.tag_.Get();
}
inline void AndroidLogPacket_LogEvent::_internal_set_tag(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.tag_.Set(value, GetArenaForAllocation());
}
inline std::string* AndroidLogPacket_LogEvent::_internal_mutable_tag() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.tag_.Mutable( GetArenaForAllocation());
}
inline std::string* AndroidLogPacket_LogEvent::release_tag() {
  // @@protoc_insertion_point(field_release:perfetto.protos.AndroidLogPacket.LogEvent.tag)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.tag_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.tag_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void AndroidLogPacket_LogEvent::set_allocated_tag(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.tag_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.tag_.IsDefault()) {
          _impl_.tag_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.AndroidLogPacket.LogEvent.tag)
}

// optional .perfetto.protos.AndroidLogPriority prio = 7;
inline bool AndroidLogPacket_LogEvent::has_prio() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void AndroidLogPacket_LogEvent::clear_prio() {
  _impl_.prio_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::perfetto::protos::AndroidLogPriority AndroidLogPacket_LogEvent::prio() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidLogPacket.LogEvent.prio)
  return _internal_prio();
}
inline void AndroidLogPacket_LogEvent::set_prio(::perfetto::protos::AndroidLogPriority value) {
   _internal_set_prio(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidLogPacket.LogEvent.prio)
}
inline ::perfetto::protos::AndroidLogPriority AndroidLogPacket_LogEvent::_internal_prio() const {
  return static_cast<::perfetto::protos::AndroidLogPriority>(_impl_.prio_);
}
inline void AndroidLogPacket_LogEvent::_internal_set_prio(::perfetto::protos::AndroidLogPriority value) {
  assert(::perfetto::protos::AndroidLogPriority_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.prio_ = value;
}

// optional string message = 8;
inline bool AndroidLogPacket_LogEvent::has_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void AndroidLogPacket_LogEvent::clear_message() {
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& AndroidLogPacket_LogEvent::message() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidLogPacket.LogEvent.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AndroidLogPacket_LogEvent::set_message(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidLogPacket.LogEvent.message)
}
inline std::string* AndroidLogPacket_LogEvent::mutable_message() {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.AndroidLogPacket.LogEvent.message)
  return _s;
}
inline const std::string& AndroidLogPacket_LogEvent::_internal_message() const {
  return _impl_.message_.Get();
}
inline void AndroidLogPacket_LogEvent::_internal_set_message(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;


  _impl_.message_.Set(value, GetArenaForAllocation());
}
inline std::string* AndroidLogPacket_LogEvent::_internal_mutable_message() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.message_.Mutable( GetArenaForAllocation());
}
inline std::string* AndroidLogPacket_LogEvent::release_message() {
  // @@protoc_insertion_point(field_release:perfetto.protos.AndroidLogPacket.LogEvent.message)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.message_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void AndroidLogPacket_LogEvent::set_allocated_message(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.message_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.AndroidLogPacket.LogEvent.message)
}

// repeated .perfetto.protos.AndroidLogPacket.LogEvent.Arg args = 9;
inline int AndroidLogPacket_LogEvent::_internal_args_size() const {
  return _impl_.args_.size();
}
inline int AndroidLogPacket_LogEvent::args_size() const {
  return _internal_args_size();
}
inline void AndroidLogPacket_LogEvent::clear_args() {
  _internal_mutable_args()->Clear();
}
inline ::perfetto::protos::AndroidLogPacket_LogEvent_Arg* AndroidLogPacket_LogEvent::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.AndroidLogPacket.LogEvent.args)
  return _internal_mutable_args()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidLogPacket_LogEvent_Arg >*
AndroidLogPacket_LogEvent::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.AndroidLogPacket.LogEvent.args)
  return _internal_mutable_args();
}
inline const ::perfetto::protos::AndroidLogPacket_LogEvent_Arg& AndroidLogPacket_LogEvent::_internal_args(int index) const {
  return _internal_args().Get(index);
}
inline const ::perfetto::protos::AndroidLogPacket_LogEvent_Arg& AndroidLogPacket_LogEvent::args(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidLogPacket.LogEvent.args)
  return _internal_args(index);
}
inline ::perfetto::protos::AndroidLogPacket_LogEvent_Arg* AndroidLogPacket_LogEvent::_internal_add_args() {
  return _internal_mutable_args()->Add();
}
inline ::perfetto::protos::AndroidLogPacket_LogEvent_Arg* AndroidLogPacket_LogEvent::add_args() {
  ::perfetto::protos::AndroidLogPacket_LogEvent_Arg* _add = _internal_add_args();
  // @@protoc_insertion_point(field_add:perfetto.protos.AndroidLogPacket.LogEvent.args)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidLogPacket_LogEvent_Arg >&
AndroidLogPacket_LogEvent::args() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.AndroidLogPacket.LogEvent.args)
  return _internal_args();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::AndroidLogPacket_LogEvent_Arg>&
AndroidLogPacket_LogEvent::_internal_args() const {
  return _impl_.args_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::AndroidLogPacket_LogEvent_Arg>*
AndroidLogPacket_LogEvent::_internal_mutable_args() {
  return &_impl_.args_;
}

// -------------------------------------------------------------------

// AndroidLogPacket_Stats

// optional uint64 num_total = 1;
inline bool AndroidLogPacket_Stats::has_num_total() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void AndroidLogPacket_Stats::clear_num_total() {
  _impl_.num_total_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t AndroidLogPacket_Stats::num_total() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidLogPacket.Stats.num_total)
  return _internal_num_total();
}
inline void AndroidLogPacket_Stats::set_num_total(::uint64_t value) {
  _internal_set_num_total(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidLogPacket.Stats.num_total)
}
inline ::uint64_t AndroidLogPacket_Stats::_internal_num_total() const {
  return _impl_.num_total_;
}
inline void AndroidLogPacket_Stats::_internal_set_num_total(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.num_total_ = value;
}

// optional uint64 num_failed = 2;
inline bool AndroidLogPacket_Stats::has_num_failed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void AndroidLogPacket_Stats::clear_num_failed() {
  _impl_.num_failed_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t AndroidLogPacket_Stats::num_failed() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidLogPacket.Stats.num_failed)
  return _internal_num_failed();
}
inline void AndroidLogPacket_Stats::set_num_failed(::uint64_t value) {
  _internal_set_num_failed(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidLogPacket.Stats.num_failed)
}
inline ::uint64_t AndroidLogPacket_Stats::_internal_num_failed() const {
  return _impl_.num_failed_;
}
inline void AndroidLogPacket_Stats::_internal_set_num_failed(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.num_failed_ = value;
}

// optional uint64 num_skipped = 3;
inline bool AndroidLogPacket_Stats::has_num_skipped() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void AndroidLogPacket_Stats::clear_num_skipped() {
  _impl_.num_skipped_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t AndroidLogPacket_Stats::num_skipped() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidLogPacket.Stats.num_skipped)
  return _internal_num_skipped();
}
inline void AndroidLogPacket_Stats::set_num_skipped(::uint64_t value) {
  _internal_set_num_skipped(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidLogPacket.Stats.num_skipped)
}
inline ::uint64_t AndroidLogPacket_Stats::_internal_num_skipped() const {
  return _impl_.num_skipped_;
}
inline void AndroidLogPacket_Stats::_internal_set_num_skipped(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.num_skipped_ = value;
}

// -------------------------------------------------------------------

// AndroidLogPacket

// repeated .perfetto.protos.AndroidLogPacket.LogEvent events = 1;
inline int AndroidLogPacket::_internal_events_size() const {
  return _impl_.events_.size();
}
inline int AndroidLogPacket::events_size() const {
  return _internal_events_size();
}
inline void AndroidLogPacket::clear_events() {
  _internal_mutable_events()->Clear();
}
inline ::perfetto::protos::AndroidLogPacket_LogEvent* AndroidLogPacket::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.AndroidLogPacket.events)
  return _internal_mutable_events()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidLogPacket_LogEvent >*
AndroidLogPacket::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.AndroidLogPacket.events)
  return _internal_mutable_events();
}
inline const ::perfetto::protos::AndroidLogPacket_LogEvent& AndroidLogPacket::_internal_events(int index) const {
  return _internal_events().Get(index);
}
inline const ::perfetto::protos::AndroidLogPacket_LogEvent& AndroidLogPacket::events(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidLogPacket.events)
  return _internal_events(index);
}
inline ::perfetto::protos::AndroidLogPacket_LogEvent* AndroidLogPacket::_internal_add_events() {
  return _internal_mutable_events()->Add();
}
inline ::perfetto::protos::AndroidLogPacket_LogEvent* AndroidLogPacket::add_events() {
  ::perfetto::protos::AndroidLogPacket_LogEvent* _add = _internal_add_events();
  // @@protoc_insertion_point(field_add:perfetto.protos.AndroidLogPacket.events)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidLogPacket_LogEvent >&
AndroidLogPacket::events() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.AndroidLogPacket.events)
  return _internal_events();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::AndroidLogPacket_LogEvent>&
AndroidLogPacket::_internal_events() const {
  return _impl_.events_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::AndroidLogPacket_LogEvent>*
AndroidLogPacket::_internal_mutable_events() {
  return &_impl_.events_;
}

// optional .perfetto.protos.AndroidLogPacket.Stats stats = 2;
inline bool AndroidLogPacket::has_stats() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.stats_ != nullptr);
  return value;
}
inline void AndroidLogPacket::clear_stats() {
  if (_impl_.stats_ != nullptr) _impl_.stats_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::perfetto::protos::AndroidLogPacket_Stats& AndroidLogPacket::_internal_stats() const {
  const ::perfetto::protos::AndroidLogPacket_Stats* p = _impl_.stats_;
  return p != nullptr ? *p : reinterpret_cast<const ::perfetto::protos::AndroidLogPacket_Stats&>(
      ::perfetto::protos::_AndroidLogPacket_Stats_default_instance_);
}
inline const ::perfetto::protos::AndroidLogPacket_Stats& AndroidLogPacket::stats() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidLogPacket.stats)
  return _internal_stats();
}
inline void AndroidLogPacket::unsafe_arena_set_allocated_stats(
    ::perfetto::protos::AndroidLogPacket_Stats* stats) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.stats_);
  }
  _impl_.stats_ = stats;
  if (stats) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:perfetto.protos.AndroidLogPacket.stats)
}
inline ::perfetto::protos::AndroidLogPacket_Stats* AndroidLogPacket::release_stats() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::perfetto::protos::AndroidLogPacket_Stats* temp = _impl_.stats_;
  _impl_.stats_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::perfetto::protos::AndroidLogPacket_Stats* AndroidLogPacket::unsafe_arena_release_stats() {
  // @@protoc_insertion_point(field_release:perfetto.protos.AndroidLogPacket.stats)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::perfetto::protos::AndroidLogPacket_Stats* temp = _impl_.stats_;
  _impl_.stats_ = nullptr;
  return temp;
}
inline ::perfetto::protos::AndroidLogPacket_Stats* AndroidLogPacket::_internal_mutable_stats() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.stats_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::AndroidLogPacket_Stats>(GetArenaForAllocation());
    _impl_.stats_ = p;
  }
  return _impl_.stats_;
}
inline ::perfetto::protos::AndroidLogPacket_Stats* AndroidLogPacket::mutable_stats() {
  ::perfetto::protos::AndroidLogPacket_Stats* _msg = _internal_mutable_stats();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.AndroidLogPacket.stats)
  return _msg;
}
inline void AndroidLogPacket::set_allocated_stats(::perfetto::protos::AndroidLogPacket_Stats* stats) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.stats_;
  }
  if (stats) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(stats);
    if (message_arena != submessage_arena) {
      stats = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stats, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.stats_ = stats;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.AndroidLogPacket.stats)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fandroid_2fandroid_5flog_2eproto_2epb_2eh
