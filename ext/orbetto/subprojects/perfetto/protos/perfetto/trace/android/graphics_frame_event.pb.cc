// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/android/graphics_frame_event.proto

#include "protos/perfetto/trace/android/graphics_frame_event.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace perfetto {
namespace protos {
template <typename>
PROTOBUF_CONSTEXPR GraphicsFrameEvent_BufferEvent::GraphicsFrameEvent_BufferEvent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.layer_name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.frame_number_)*/ 0u

  , /*decltype(_impl_.type_)*/ 0

  , /*decltype(_impl_.duration_ns_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.buffer_id_)*/ 0u
} {}
struct GraphicsFrameEvent_BufferEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphicsFrameEvent_BufferEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphicsFrameEvent_BufferEventDefaultTypeInternal() {}
  union {
    GraphicsFrameEvent_BufferEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphicsFrameEvent_BufferEventDefaultTypeInternal _GraphicsFrameEvent_BufferEvent_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GraphicsFrameEvent::GraphicsFrameEvent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.buffer_event_)*/nullptr} {}
struct GraphicsFrameEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphicsFrameEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphicsFrameEventDefaultTypeInternal() {}
  union {
    GraphicsFrameEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphicsFrameEventDefaultTypeInternal _GraphicsFrameEvent_default_instance_;
}  // namespace protos
}  // namespace perfetto
static ::_pb::Metadata file_level_metadata_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto[2];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto = nullptr;
const ::uint32_t TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::GraphicsFrameEvent_BufferEvent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::GraphicsFrameEvent_BufferEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::GraphicsFrameEvent_BufferEvent, _impl_.frame_number_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::GraphicsFrameEvent_BufferEvent, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::GraphicsFrameEvent_BufferEvent, _impl_.layer_name_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::GraphicsFrameEvent_BufferEvent, _impl_.duration_ns_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::GraphicsFrameEvent_BufferEvent, _impl_.buffer_id_),
    1,
    2,
    0,
    3,
    4,
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::GraphicsFrameEvent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::GraphicsFrameEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::GraphicsFrameEvent, _impl_.buffer_event_),
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, 13, -1, sizeof(::perfetto::protos::GraphicsFrameEvent_BufferEvent)},
        { 18, 27, -1, sizeof(::perfetto::protos::GraphicsFrameEvent)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::perfetto::protos::_GraphicsFrameEvent_BufferEvent_default_instance_._instance,
    &::perfetto::protos::_GraphicsFrameEvent_default_instance_._instance,
};
const char descriptor_table_protodef_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n8protos/perfetto/trace/android/graphics"
    "_frame_event.proto\022\017perfetto.protos\"\361\003\n\022"
    "GraphicsFrameEvent\022E\n\014buffer_event\030\001 \001(\013"
    "2/.perfetto.protos.GraphicsFrameEvent.Bu"
    "fferEvent\032\242\001\n\013BufferEvent\022\024\n\014frame_numbe"
    "r\030\001 \001(\r\022A\n\004type\030\002 \001(\01623.perfetto.protos."
    "GraphicsFrameEvent.BufferEventType\022\022\n\nla"
    "yer_name\030\003 \001(\t\022\023\n\013duration_ns\030\004 \001(\004\022\021\n\tb"
    "uffer_id\030\005 \001(\r\"\356\001\n\017BufferEventType\022\017\n\013UN"
    "SPECIFIED\020\000\022\013\n\007DEQUEUE\020\001\022\t\n\005QUEUE\020\002\022\010\n\004P"
    "OST\020\003\022\021\n\rACQUIRE_FENCE\020\004\022\t\n\005LATCH\020\005\022\032\n\026H"
    "WC_COMPOSITION_QUEUED\020\006\022\030\n\024FALLBACK_COMP"
    "OSITION\020\007\022\021\n\rPRESENT_FENCE\020\010\022\021\n\rRELEASE_"
    "FENCE\020\t\022\n\n\006MODIFY\020\n\022\n\n\006DETACH\020\013\022\n\n\006ATTAC"
    "H\020\014\022\n\n\006CANCEL\020\r"
};
static ::absl::once_flag descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto = {
    false,
    false,
    575,
    descriptor_table_protodef_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto,
    "protos/perfetto/trace/android/graphics_frame_event.proto",
    &descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto::offsets,
    file_level_metadata_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto,
    file_level_enum_descriptors_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto,
    file_level_service_descriptors_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto_getter() {
  return &descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto(&descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto);
namespace perfetto {
namespace protos {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GraphicsFrameEvent_BufferEventType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto);
  return file_level_enum_descriptors_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto[0];
}
bool GraphicsFrameEvent_BufferEventType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr GraphicsFrameEvent_BufferEventType GraphicsFrameEvent::UNSPECIFIED;
constexpr GraphicsFrameEvent_BufferEventType GraphicsFrameEvent::DEQUEUE;
constexpr GraphicsFrameEvent_BufferEventType GraphicsFrameEvent::QUEUE;
constexpr GraphicsFrameEvent_BufferEventType GraphicsFrameEvent::POST;
constexpr GraphicsFrameEvent_BufferEventType GraphicsFrameEvent::ACQUIRE_FENCE;
constexpr GraphicsFrameEvent_BufferEventType GraphicsFrameEvent::LATCH;
constexpr GraphicsFrameEvent_BufferEventType GraphicsFrameEvent::HWC_COMPOSITION_QUEUED;
constexpr GraphicsFrameEvent_BufferEventType GraphicsFrameEvent::FALLBACK_COMPOSITION;
constexpr GraphicsFrameEvent_BufferEventType GraphicsFrameEvent::PRESENT_FENCE;
constexpr GraphicsFrameEvent_BufferEventType GraphicsFrameEvent::RELEASE_FENCE;
constexpr GraphicsFrameEvent_BufferEventType GraphicsFrameEvent::MODIFY;
constexpr GraphicsFrameEvent_BufferEventType GraphicsFrameEvent::DETACH;
constexpr GraphicsFrameEvent_BufferEventType GraphicsFrameEvent::ATTACH;
constexpr GraphicsFrameEvent_BufferEventType GraphicsFrameEvent::CANCEL;
constexpr GraphicsFrameEvent_BufferEventType GraphicsFrameEvent::BufferEventType_MIN;
constexpr GraphicsFrameEvent_BufferEventType GraphicsFrameEvent::BufferEventType_MAX;
constexpr int GraphicsFrameEvent::BufferEventType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class GraphicsFrameEvent_BufferEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<GraphicsFrameEvent_BufferEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GraphicsFrameEvent_BufferEvent, _impl_._has_bits_);
  static void set_has_frame_number(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_layer_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_duration_ns(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_buffer_id(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

GraphicsFrameEvent_BufferEvent::GraphicsFrameEvent_BufferEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.GraphicsFrameEvent.BufferEvent)
}
GraphicsFrameEvent_BufferEvent::GraphicsFrameEvent_BufferEvent(const GraphicsFrameEvent_BufferEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GraphicsFrameEvent_BufferEvent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.layer_name_) {}

    , decltype(_impl_.frame_number_) {}

    , decltype(_impl_.type_) {}

    , decltype(_impl_.duration_ns_) {}

    , decltype(_impl_.buffer_id_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.layer_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.layer_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.layer_name_.Set(from._internal_layer_name(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.frame_number_, &from._impl_.frame_number_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.buffer_id_) -
    reinterpret_cast<char*>(&_impl_.frame_number_)) + sizeof(_impl_.buffer_id_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.GraphicsFrameEvent.BufferEvent)
}

inline void GraphicsFrameEvent_BufferEvent::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.layer_name_) {}

    , decltype(_impl_.frame_number_) { 0u }

    , decltype(_impl_.type_) { 0 }

    , decltype(_impl_.duration_ns_) { ::uint64_t{0u} }

    , decltype(_impl_.buffer_id_) { 0u }

  };
  _impl_.layer_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.layer_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GraphicsFrameEvent_BufferEvent::~GraphicsFrameEvent_BufferEvent() {
  // @@protoc_insertion_point(destructor:perfetto.protos.GraphicsFrameEvent.BufferEvent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GraphicsFrameEvent_BufferEvent::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.layer_name_.Destroy();
}

void GraphicsFrameEvent_BufferEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GraphicsFrameEvent_BufferEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.GraphicsFrameEvent.BufferEvent)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.layer_name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&_impl_.frame_number_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.buffer_id_) -
        reinterpret_cast<char*>(&_impl_.frame_number_)) + sizeof(_impl_.buffer_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GraphicsFrameEvent_BufferEvent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 frame_number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _Internal::set_has_frame_number(&has_bits);
          _impl_.frame_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.GraphicsFrameEvent.BufferEventType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          ::int32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::perfetto::protos::GraphicsFrameEvent_BufferEventType_IsValid(static_cast<int>(val)))) {
            _internal_set_type(static_cast<::perfetto::protos::GraphicsFrameEvent_BufferEventType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else {
          goto handle_unusual;
        }
        continue;
      // optional string layer_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_layer_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "perfetto.protos.GraphicsFrameEvent.BufferEvent.layer_name");
          #endif  // !NDEBUG
        } else {
          goto handle_unusual;
        }
        continue;
      // optional uint64 duration_ns = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 32)) {
          _Internal::set_has_duration_ns(&has_bits);
          _impl_.duration_ns_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional uint32 buffer_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 40)) {
          _Internal::set_has_buffer_id(&has_bits);
          _impl_.buffer_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GraphicsFrameEvent_BufferEvent::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.GraphicsFrameEvent.BufferEvent)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 frame_number = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_frame_number(), target);
  }

  // optional .perfetto.protos.GraphicsFrameEvent.BufferEventType type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_type(), target);
  }

  // optional string layer_name = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_layer_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
                                "perfetto.protos.GraphicsFrameEvent.BufferEvent.layer_name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional uint64 duration_ns = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_duration_ns(), target);
  }

  // optional uint32 buffer_id = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_buffer_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.GraphicsFrameEvent.BufferEvent)
  return target;
}

::size_t GraphicsFrameEvent_BufferEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.GraphicsFrameEvent.BufferEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string layer_name = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                      this->_internal_layer_name());
    }

    // optional uint32 frame_number = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_frame_number());
    }

    // optional .perfetto.protos.GraphicsFrameEvent.BufferEventType type = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
    }

    // optional uint64 duration_ns = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_duration_ns());
    }

    // optional uint32 buffer_id = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_buffer_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GraphicsFrameEvent_BufferEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GraphicsFrameEvent_BufferEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GraphicsFrameEvent_BufferEvent::GetClassData() const { return &_class_data_; }


void GraphicsFrameEvent_BufferEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GraphicsFrameEvent_BufferEvent*>(&to_msg);
  auto& from = static_cast<const GraphicsFrameEvent_BufferEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.GraphicsFrameEvent.BufferEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_layer_name(from._internal_layer_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.frame_number_ = from._impl_.frame_number_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.duration_ns_ = from._impl_.duration_ns_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.buffer_id_ = from._impl_.buffer_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GraphicsFrameEvent_BufferEvent::CopyFrom(const GraphicsFrameEvent_BufferEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.GraphicsFrameEvent.BufferEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphicsFrameEvent_BufferEvent::IsInitialized() const {
  return true;
}

void GraphicsFrameEvent_BufferEvent::InternalSwap(GraphicsFrameEvent_BufferEvent* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.layer_name_, lhs_arena,
                                       &other->_impl_.layer_name_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GraphicsFrameEvent_BufferEvent, _impl_.buffer_id_)
      + sizeof(GraphicsFrameEvent_BufferEvent::_impl_.buffer_id_)
      - PROTOBUF_FIELD_OFFSET(GraphicsFrameEvent_BufferEvent, _impl_.frame_number_)>(
          reinterpret_cast<char*>(&_impl_.frame_number_),
          reinterpret_cast<char*>(&other->_impl_.frame_number_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GraphicsFrameEvent_BufferEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto_getter, &descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto_once,
      file_level_metadata_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto[0]);
}
// ===================================================================

class GraphicsFrameEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<GraphicsFrameEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GraphicsFrameEvent, _impl_._has_bits_);
  static const ::perfetto::protos::GraphicsFrameEvent_BufferEvent& buffer_event(const GraphicsFrameEvent* msg);
  static void set_has_buffer_event(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::perfetto::protos::GraphicsFrameEvent_BufferEvent&
GraphicsFrameEvent::_Internal::buffer_event(const GraphicsFrameEvent* msg) {
  return *msg->_impl_.buffer_event_;
}
GraphicsFrameEvent::GraphicsFrameEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.GraphicsFrameEvent)
}
GraphicsFrameEvent::GraphicsFrameEvent(const GraphicsFrameEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GraphicsFrameEvent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.buffer_event_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.buffer_event_ = new ::perfetto::protos::GraphicsFrameEvent_BufferEvent(*from._impl_.buffer_event_);
  }
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.GraphicsFrameEvent)
}

inline void GraphicsFrameEvent::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.buffer_event_){nullptr}
  };
}

GraphicsFrameEvent::~GraphicsFrameEvent() {
  // @@protoc_insertion_point(destructor:perfetto.protos.GraphicsFrameEvent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GraphicsFrameEvent::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.buffer_event_;
}

void GraphicsFrameEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GraphicsFrameEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.GraphicsFrameEvent)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.buffer_event_ != nullptr);
    _impl_.buffer_event_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GraphicsFrameEvent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .perfetto.protos.GraphicsFrameEvent.BufferEvent buffer_event = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_buffer_event(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GraphicsFrameEvent::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.GraphicsFrameEvent)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .perfetto.protos.GraphicsFrameEvent.BufferEvent buffer_event = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::buffer_event(this),
        _Internal::buffer_event(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.GraphicsFrameEvent)
  return target;
}

::size_t GraphicsFrameEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.GraphicsFrameEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .perfetto.protos.GraphicsFrameEvent.BufferEvent buffer_event = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.buffer_event_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GraphicsFrameEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GraphicsFrameEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GraphicsFrameEvent::GetClassData() const { return &_class_data_; }


void GraphicsFrameEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GraphicsFrameEvent*>(&to_msg);
  auto& from = static_cast<const GraphicsFrameEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.GraphicsFrameEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_buffer_event()->::perfetto::protos::GraphicsFrameEvent_BufferEvent::MergeFrom(
        from._internal_buffer_event());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GraphicsFrameEvent::CopyFrom(const GraphicsFrameEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.GraphicsFrameEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphicsFrameEvent::IsInitialized() const {
  return true;
}

void GraphicsFrameEvent::InternalSwap(GraphicsFrameEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.buffer_event_, other->_impl_.buffer_event_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GraphicsFrameEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto_getter, &descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto_once,
      file_level_metadata_protos_2fperfetto_2ftrace_2fandroid_2fgraphics_5fframe_5fevent_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::perfetto::protos::GraphicsFrameEvent_BufferEvent*
Arena::CreateMaybeMessage< ::perfetto::protos::GraphicsFrameEvent_BufferEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::GraphicsFrameEvent_BufferEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::perfetto::protos::GraphicsFrameEvent*
Arena::CreateMaybeMessage< ::perfetto::protos::GraphicsFrameEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::GraphicsFrameEvent >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
