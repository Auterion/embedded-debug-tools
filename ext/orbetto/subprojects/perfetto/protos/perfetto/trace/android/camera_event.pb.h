// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/android/camera_event.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fandroid_2fcamera_5fevent_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fandroid_2fcamera_5fevent_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2ftrace_2fandroid_2fcamera_5fevent_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fcamera_5fevent_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_protos_2fperfetto_2ftrace_2fandroid_2fcamera_5fevent_2eproto;
namespace perfetto {
namespace protos {
class AndroidCameraFrameEvent;
struct AndroidCameraFrameEventDefaultTypeInternal;
extern AndroidCameraFrameEventDefaultTypeInternal _AndroidCameraFrameEvent_default_instance_;
class AndroidCameraFrameEvent_CameraNodeProcessingDetails;
struct AndroidCameraFrameEvent_CameraNodeProcessingDetailsDefaultTypeInternal;
extern AndroidCameraFrameEvent_CameraNodeProcessingDetailsDefaultTypeInternal _AndroidCameraFrameEvent_CameraNodeProcessingDetails_default_instance_;
class AndroidCameraSessionStats;
struct AndroidCameraSessionStatsDefaultTypeInternal;
extern AndroidCameraSessionStatsDefaultTypeInternal _AndroidCameraSessionStats_default_instance_;
class AndroidCameraSessionStats_CameraGraph;
struct AndroidCameraSessionStats_CameraGraphDefaultTypeInternal;
extern AndroidCameraSessionStats_CameraGraphDefaultTypeInternal _AndroidCameraSessionStats_CameraGraph_default_instance_;
class AndroidCameraSessionStats_CameraGraph_CameraEdge;
struct AndroidCameraSessionStats_CameraGraph_CameraEdgeDefaultTypeInternal;
extern AndroidCameraSessionStats_CameraGraph_CameraEdgeDefaultTypeInternal _AndroidCameraSessionStats_CameraGraph_CameraEdge_default_instance_;
class AndroidCameraSessionStats_CameraGraph_CameraNode;
struct AndroidCameraSessionStats_CameraGraph_CameraNodeDefaultTypeInternal;
extern AndroidCameraSessionStats_CameraGraph_CameraNodeDefaultTypeInternal _AndroidCameraSessionStats_CameraGraph_CameraNode_default_instance_;
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template <>
::perfetto::protos::AndroidCameraFrameEvent* Arena::CreateMaybeMessage<::perfetto::protos::AndroidCameraFrameEvent>(Arena*);
template <>
::perfetto::protos::AndroidCameraFrameEvent_CameraNodeProcessingDetails* Arena::CreateMaybeMessage<::perfetto::protos::AndroidCameraFrameEvent_CameraNodeProcessingDetails>(Arena*);
template <>
::perfetto::protos::AndroidCameraSessionStats* Arena::CreateMaybeMessage<::perfetto::protos::AndroidCameraSessionStats>(Arena*);
template <>
::perfetto::protos::AndroidCameraSessionStats_CameraGraph* Arena::CreateMaybeMessage<::perfetto::protos::AndroidCameraSessionStats_CameraGraph>(Arena*);
template <>
::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraEdge* Arena::CreateMaybeMessage<::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraEdge>(Arena*);
template <>
::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraNode* Arena::CreateMaybeMessage<::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraNode>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace perfetto {
namespace protos {
enum AndroidCameraFrameEvent_CaptureResultStatus : int {
  AndroidCameraFrameEvent_CaptureResultStatus_STATUS_UNSPECIFIED = 0,
  AndroidCameraFrameEvent_CaptureResultStatus_STATUS_OK = 1,
  AndroidCameraFrameEvent_CaptureResultStatus_STATUS_EARLY_METADATA_ERROR = 2,
  AndroidCameraFrameEvent_CaptureResultStatus_STATUS_FINAL_METADATA_ERROR = 3,
  AndroidCameraFrameEvent_CaptureResultStatus_STATUS_BUFFER_ERROR = 4,
  AndroidCameraFrameEvent_CaptureResultStatus_STATUS_FLUSH_ERROR = 5,
};

bool AndroidCameraFrameEvent_CaptureResultStatus_IsValid(int value);
constexpr AndroidCameraFrameEvent_CaptureResultStatus AndroidCameraFrameEvent_CaptureResultStatus_CaptureResultStatus_MIN = static_cast<AndroidCameraFrameEvent_CaptureResultStatus>(0);
constexpr AndroidCameraFrameEvent_CaptureResultStatus AndroidCameraFrameEvent_CaptureResultStatus_CaptureResultStatus_MAX = static_cast<AndroidCameraFrameEvent_CaptureResultStatus>(5);
constexpr int AndroidCameraFrameEvent_CaptureResultStatus_CaptureResultStatus_ARRAYSIZE = 5 + 1;
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
AndroidCameraFrameEvent_CaptureResultStatus_descriptor();
template <typename T>
const std::string& AndroidCameraFrameEvent_CaptureResultStatus_Name(T value) {
  static_assert(std::is_same<T, AndroidCameraFrameEvent_CaptureResultStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to CaptureResultStatus_Name().");
  return AndroidCameraFrameEvent_CaptureResultStatus_Name(static_cast<AndroidCameraFrameEvent_CaptureResultStatus>(value));
}
template <>
inline const std::string& AndroidCameraFrameEvent_CaptureResultStatus_Name(AndroidCameraFrameEvent_CaptureResultStatus value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfDenseEnum<AndroidCameraFrameEvent_CaptureResultStatus_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool AndroidCameraFrameEvent_CaptureResultStatus_Parse(absl::string_view name, AndroidCameraFrameEvent_CaptureResultStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<AndroidCameraFrameEvent_CaptureResultStatus>(
      AndroidCameraFrameEvent_CaptureResultStatus_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class AndroidCameraFrameEvent_CameraNodeProcessingDetails final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.AndroidCameraFrameEvent.CameraNodeProcessingDetails) */ {
 public:
  inline AndroidCameraFrameEvent_CameraNodeProcessingDetails() : AndroidCameraFrameEvent_CameraNodeProcessingDetails(nullptr) {}
  ~AndroidCameraFrameEvent_CameraNodeProcessingDetails() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AndroidCameraFrameEvent_CameraNodeProcessingDetails(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AndroidCameraFrameEvent_CameraNodeProcessingDetails(const AndroidCameraFrameEvent_CameraNodeProcessingDetails& from);
  AndroidCameraFrameEvent_CameraNodeProcessingDetails(AndroidCameraFrameEvent_CameraNodeProcessingDetails&& from) noexcept
    : AndroidCameraFrameEvent_CameraNodeProcessingDetails() {
    *this = ::std::move(from);
  }

  inline AndroidCameraFrameEvent_CameraNodeProcessingDetails& operator=(const AndroidCameraFrameEvent_CameraNodeProcessingDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline AndroidCameraFrameEvent_CameraNodeProcessingDetails& operator=(AndroidCameraFrameEvent_CameraNodeProcessingDetails&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AndroidCameraFrameEvent_CameraNodeProcessingDetails& default_instance() {
    return *internal_default_instance();
  }
  static inline const AndroidCameraFrameEvent_CameraNodeProcessingDetails* internal_default_instance() {
    return reinterpret_cast<const AndroidCameraFrameEvent_CameraNodeProcessingDetails*>(
               &_AndroidCameraFrameEvent_CameraNodeProcessingDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AndroidCameraFrameEvent_CameraNodeProcessingDetails& a, AndroidCameraFrameEvent_CameraNodeProcessingDetails& b) {
    a.Swap(&b);
  }
  inline void Swap(AndroidCameraFrameEvent_CameraNodeProcessingDetails* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AndroidCameraFrameEvent_CameraNodeProcessingDetails* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AndroidCameraFrameEvent_CameraNodeProcessingDetails* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AndroidCameraFrameEvent_CameraNodeProcessingDetails>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AndroidCameraFrameEvent_CameraNodeProcessingDetails& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const AndroidCameraFrameEvent_CameraNodeProcessingDetails& from) {
    AndroidCameraFrameEvent_CameraNodeProcessingDetails::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AndroidCameraFrameEvent_CameraNodeProcessingDetails* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.AndroidCameraFrameEvent.CameraNodeProcessingDetails";
  }
  protected:
  explicit AndroidCameraFrameEvent_CameraNodeProcessingDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNodeIdFieldNumber = 1,
    kStartProcessingNsFieldNumber = 2,
    kEndProcessingNsFieldNumber = 3,
    kSchedulingLatencyNsFieldNumber = 4,
  };
  // optional int64 node_id = 1;
  bool has_node_id() const;
  void clear_node_id() ;
  ::int64_t node_id() const;
  void set_node_id(::int64_t value);

  private:
  ::int64_t _internal_node_id() const;
  void _internal_set_node_id(::int64_t value);

  public:
  // optional int64 start_processing_ns = 2;
  bool has_start_processing_ns() const;
  void clear_start_processing_ns() ;
  ::int64_t start_processing_ns() const;
  void set_start_processing_ns(::int64_t value);

  private:
  ::int64_t _internal_start_processing_ns() const;
  void _internal_set_start_processing_ns(::int64_t value);

  public:
  // optional int64 end_processing_ns = 3;
  bool has_end_processing_ns() const;
  void clear_end_processing_ns() ;
  ::int64_t end_processing_ns() const;
  void set_end_processing_ns(::int64_t value);

  private:
  ::int64_t _internal_end_processing_ns() const;
  void _internal_set_end_processing_ns(::int64_t value);

  public:
  // optional int64 scheduling_latency_ns = 4;
  bool has_scheduling_latency_ns() const;
  void clear_scheduling_latency_ns() ;
  ::int64_t scheduling_latency_ns() const;
  void set_scheduling_latency_ns(::int64_t value);

  private:
  ::int64_t _internal_scheduling_latency_ns() const;
  void _internal_set_scheduling_latency_ns(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.AndroidCameraFrameEvent.CameraNodeProcessingDetails)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::int64_t node_id_;
    ::int64_t start_processing_ns_;
    ::int64_t end_processing_ns_;
    ::int64_t scheduling_latency_ns_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fcamera_5fevent_2eproto;
};// -------------------------------------------------------------------

class AndroidCameraFrameEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.AndroidCameraFrameEvent) */ {
 public:
  inline AndroidCameraFrameEvent() : AndroidCameraFrameEvent(nullptr) {}
  ~AndroidCameraFrameEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AndroidCameraFrameEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AndroidCameraFrameEvent(const AndroidCameraFrameEvent& from);
  AndroidCameraFrameEvent(AndroidCameraFrameEvent&& from) noexcept
    : AndroidCameraFrameEvent() {
    *this = ::std::move(from);
  }

  inline AndroidCameraFrameEvent& operator=(const AndroidCameraFrameEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline AndroidCameraFrameEvent& operator=(AndroidCameraFrameEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AndroidCameraFrameEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const AndroidCameraFrameEvent* internal_default_instance() {
    return reinterpret_cast<const AndroidCameraFrameEvent*>(
               &_AndroidCameraFrameEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AndroidCameraFrameEvent& a, AndroidCameraFrameEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(AndroidCameraFrameEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AndroidCameraFrameEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AndroidCameraFrameEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AndroidCameraFrameEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AndroidCameraFrameEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const AndroidCameraFrameEvent& from) {
    AndroidCameraFrameEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AndroidCameraFrameEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.AndroidCameraFrameEvent";
  }
  protected:
  explicit AndroidCameraFrameEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AndroidCameraFrameEvent_CameraNodeProcessingDetails CameraNodeProcessingDetails;

  using CaptureResultStatus = AndroidCameraFrameEvent_CaptureResultStatus;
  static constexpr CaptureResultStatus STATUS_UNSPECIFIED = AndroidCameraFrameEvent_CaptureResultStatus_STATUS_UNSPECIFIED;
  static constexpr CaptureResultStatus STATUS_OK = AndroidCameraFrameEvent_CaptureResultStatus_STATUS_OK;
  static constexpr CaptureResultStatus STATUS_EARLY_METADATA_ERROR = AndroidCameraFrameEvent_CaptureResultStatus_STATUS_EARLY_METADATA_ERROR;
  static constexpr CaptureResultStatus STATUS_FINAL_METADATA_ERROR = AndroidCameraFrameEvent_CaptureResultStatus_STATUS_FINAL_METADATA_ERROR;
  static constexpr CaptureResultStatus STATUS_BUFFER_ERROR = AndroidCameraFrameEvent_CaptureResultStatus_STATUS_BUFFER_ERROR;
  static constexpr CaptureResultStatus STATUS_FLUSH_ERROR = AndroidCameraFrameEvent_CaptureResultStatus_STATUS_FLUSH_ERROR;
  static inline bool CaptureResultStatus_IsValid(int value) {
    return AndroidCameraFrameEvent_CaptureResultStatus_IsValid(value);
  }
  static constexpr CaptureResultStatus CaptureResultStatus_MIN = AndroidCameraFrameEvent_CaptureResultStatus_CaptureResultStatus_MIN;
  static constexpr CaptureResultStatus CaptureResultStatus_MAX = AndroidCameraFrameEvent_CaptureResultStatus_CaptureResultStatus_MAX;
  static constexpr int CaptureResultStatus_ARRAYSIZE = AndroidCameraFrameEvent_CaptureResultStatus_CaptureResultStatus_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CaptureResultStatus_descriptor() {
    return AndroidCameraFrameEvent_CaptureResultStatus_descriptor();
  }
  template <typename T>
  static inline const std::string& CaptureResultStatus_Name(T value) {
    return AndroidCameraFrameEvent_CaptureResultStatus_Name(value);
  }
  static inline bool CaptureResultStatus_Parse(absl::string_view name, CaptureResultStatus* value) {
    return AndroidCameraFrameEvent_CaptureResultStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kNodeProcessingDetailsFieldNumber = 14,
    kVendorDataFieldNumber = 16,
    kSessionIdFieldNumber = 1,
    kFrameNumberFieldNumber = 3,
    kRequestIdFieldNumber = 4,
    kRequestReceivedNsFieldNumber = 5,
    kRequestProcessingStartedNsFieldNumber = 6,
    kCameraIdFieldNumber = 2,
    kCaptureResultStatusFieldNumber = 10,
    kStartOfExposureNsFieldNumber = 7,
    kStartOfFrameNsFieldNumber = 8,
    kResponsesAllSentNsFieldNumber = 9,
    kSkippedSensorFramesFieldNumber = 11,
    kCaptureIntentFieldNumber = 12,
    kNumStreamsFieldNumber = 13,
    kVendorDataVersionFieldNumber = 15,
  };
  // repeated .perfetto.protos.AndroidCameraFrameEvent.CameraNodeProcessingDetails node_processing_details = 14;
  int node_processing_details_size() const;
  private:
  int _internal_node_processing_details_size() const;

  public:
  void clear_node_processing_details() ;
  ::perfetto::protos::AndroidCameraFrameEvent_CameraNodeProcessingDetails* mutable_node_processing_details(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidCameraFrameEvent_CameraNodeProcessingDetails >*
      mutable_node_processing_details();
  private:
  const ::perfetto::protos::AndroidCameraFrameEvent_CameraNodeProcessingDetails& _internal_node_processing_details(int index) const;
  ::perfetto::protos::AndroidCameraFrameEvent_CameraNodeProcessingDetails* _internal_add_node_processing_details();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::AndroidCameraFrameEvent_CameraNodeProcessingDetails>& _internal_node_processing_details() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::AndroidCameraFrameEvent_CameraNodeProcessingDetails>* _internal_mutable_node_processing_details();
  public:
  const ::perfetto::protos::AndroidCameraFrameEvent_CameraNodeProcessingDetails& node_processing_details(int index) const;
  ::perfetto::protos::AndroidCameraFrameEvent_CameraNodeProcessingDetails* add_node_processing_details();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidCameraFrameEvent_CameraNodeProcessingDetails >&
      node_processing_details() const;
  // optional bytes vendor_data = 16;
  bool has_vendor_data() const;
  void clear_vendor_data() ;
  const std::string& vendor_data() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_vendor_data(Arg_&& arg, Args_... args);
  std::string* mutable_vendor_data();
  PROTOBUF_NODISCARD std::string* release_vendor_data();
  void set_allocated_vendor_data(std::string* ptr);

  private:
  const std::string& _internal_vendor_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_vendor_data(
      const std::string& value);
  std::string* _internal_mutable_vendor_data();

  public:
  // optional uint64 session_id = 1;
  bool has_session_id() const;
  void clear_session_id() ;
  ::uint64_t session_id() const;
  void set_session_id(::uint64_t value);

  private:
  ::uint64_t _internal_session_id() const;
  void _internal_set_session_id(::uint64_t value);

  public:
  // optional int64 frame_number = 3;
  bool has_frame_number() const;
  void clear_frame_number() ;
  ::int64_t frame_number() const;
  void set_frame_number(::int64_t value);

  private:
  ::int64_t _internal_frame_number() const;
  void _internal_set_frame_number(::int64_t value);

  public:
  // optional int64 request_id = 4;
  bool has_request_id() const;
  void clear_request_id() ;
  ::int64_t request_id() const;
  void set_request_id(::int64_t value);

  private:
  ::int64_t _internal_request_id() const;
  void _internal_set_request_id(::int64_t value);

  public:
  // optional int64 request_received_ns = 5;
  bool has_request_received_ns() const;
  void clear_request_received_ns() ;
  ::int64_t request_received_ns() const;
  void set_request_received_ns(::int64_t value);

  private:
  ::int64_t _internal_request_received_ns() const;
  void _internal_set_request_received_ns(::int64_t value);

  public:
  // optional int64 request_processing_started_ns = 6;
  bool has_request_processing_started_ns() const;
  void clear_request_processing_started_ns() ;
  ::int64_t request_processing_started_ns() const;
  void set_request_processing_started_ns(::int64_t value);

  private:
  ::int64_t _internal_request_processing_started_ns() const;
  void _internal_set_request_processing_started_ns(::int64_t value);

  public:
  // optional uint32 camera_id = 2;
  bool has_camera_id() const;
  void clear_camera_id() ;
  ::uint32_t camera_id() const;
  void set_camera_id(::uint32_t value);

  private:
  ::uint32_t _internal_camera_id() const;
  void _internal_set_camera_id(::uint32_t value);

  public:
  // optional .perfetto.protos.AndroidCameraFrameEvent.CaptureResultStatus capture_result_status = 10;
  bool has_capture_result_status() const;
  void clear_capture_result_status() ;
  ::perfetto::protos::AndroidCameraFrameEvent_CaptureResultStatus capture_result_status() const;
  void set_capture_result_status(::perfetto::protos::AndroidCameraFrameEvent_CaptureResultStatus value);

  private:
  ::perfetto::protos::AndroidCameraFrameEvent_CaptureResultStatus _internal_capture_result_status() const;
  void _internal_set_capture_result_status(::perfetto::protos::AndroidCameraFrameEvent_CaptureResultStatus value);

  public:
  // optional int64 start_of_exposure_ns = 7;
  bool has_start_of_exposure_ns() const;
  void clear_start_of_exposure_ns() ;
  ::int64_t start_of_exposure_ns() const;
  void set_start_of_exposure_ns(::int64_t value);

  private:
  ::int64_t _internal_start_of_exposure_ns() const;
  void _internal_set_start_of_exposure_ns(::int64_t value);

  public:
  // optional int64 start_of_frame_ns = 8;
  bool has_start_of_frame_ns() const;
  void clear_start_of_frame_ns() ;
  ::int64_t start_of_frame_ns() const;
  void set_start_of_frame_ns(::int64_t value);

  private:
  ::int64_t _internal_start_of_frame_ns() const;
  void _internal_set_start_of_frame_ns(::int64_t value);

  public:
  // optional int64 responses_all_sent_ns = 9;
  bool has_responses_all_sent_ns() const;
  void clear_responses_all_sent_ns() ;
  ::int64_t responses_all_sent_ns() const;
  void set_responses_all_sent_ns(::int64_t value);

  private:
  ::int64_t _internal_responses_all_sent_ns() const;
  void _internal_set_responses_all_sent_ns(::int64_t value);

  public:
  // optional int32 skipped_sensor_frames = 11;
  bool has_skipped_sensor_frames() const;
  void clear_skipped_sensor_frames() ;
  ::int32_t skipped_sensor_frames() const;
  void set_skipped_sensor_frames(::int32_t value);

  private:
  ::int32_t _internal_skipped_sensor_frames() const;
  void _internal_set_skipped_sensor_frames(::int32_t value);

  public:
  // optional int32 capture_intent = 12;
  bool has_capture_intent() const;
  void clear_capture_intent() ;
  ::int32_t capture_intent() const;
  void set_capture_intent(::int32_t value);

  private:
  ::int32_t _internal_capture_intent() const;
  void _internal_set_capture_intent(::int32_t value);

  public:
  // optional int32 num_streams = 13;
  bool has_num_streams() const;
  void clear_num_streams() ;
  ::int32_t num_streams() const;
  void set_num_streams(::int32_t value);

  private:
  ::int32_t _internal_num_streams() const;
  void _internal_set_num_streams(::int32_t value);

  public:
  // optional int32 vendor_data_version = 15;
  bool has_vendor_data_version() const;
  void clear_vendor_data_version() ;
  ::int32_t vendor_data_version() const;
  void set_vendor_data_version(::int32_t value);

  private:
  ::int32_t _internal_vendor_data_version() const;
  void _internal_set_vendor_data_version(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.AndroidCameraFrameEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidCameraFrameEvent_CameraNodeProcessingDetails > node_processing_details_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr vendor_data_;
    ::uint64_t session_id_;
    ::int64_t frame_number_;
    ::int64_t request_id_;
    ::int64_t request_received_ns_;
    ::int64_t request_processing_started_ns_;
    ::uint32_t camera_id_;
    int capture_result_status_;
    ::int64_t start_of_exposure_ns_;
    ::int64_t start_of_frame_ns_;
    ::int64_t responses_all_sent_ns_;
    ::int32_t skipped_sensor_frames_;
    ::int32_t capture_intent_;
    ::int32_t num_streams_;
    ::int32_t vendor_data_version_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fcamera_5fevent_2eproto;
};// -------------------------------------------------------------------

class AndroidCameraSessionStats_CameraGraph_CameraNode final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode) */ {
 public:
  inline AndroidCameraSessionStats_CameraGraph_CameraNode() : AndroidCameraSessionStats_CameraGraph_CameraNode(nullptr) {}
  ~AndroidCameraSessionStats_CameraGraph_CameraNode() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AndroidCameraSessionStats_CameraGraph_CameraNode(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AndroidCameraSessionStats_CameraGraph_CameraNode(const AndroidCameraSessionStats_CameraGraph_CameraNode& from);
  AndroidCameraSessionStats_CameraGraph_CameraNode(AndroidCameraSessionStats_CameraGraph_CameraNode&& from) noexcept
    : AndroidCameraSessionStats_CameraGraph_CameraNode() {
    *this = ::std::move(from);
  }

  inline AndroidCameraSessionStats_CameraGraph_CameraNode& operator=(const AndroidCameraSessionStats_CameraGraph_CameraNode& from) {
    CopyFrom(from);
    return *this;
  }
  inline AndroidCameraSessionStats_CameraGraph_CameraNode& operator=(AndroidCameraSessionStats_CameraGraph_CameraNode&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AndroidCameraSessionStats_CameraGraph_CameraNode& default_instance() {
    return *internal_default_instance();
  }
  static inline const AndroidCameraSessionStats_CameraGraph_CameraNode* internal_default_instance() {
    return reinterpret_cast<const AndroidCameraSessionStats_CameraGraph_CameraNode*>(
               &_AndroidCameraSessionStats_CameraGraph_CameraNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AndroidCameraSessionStats_CameraGraph_CameraNode& a, AndroidCameraSessionStats_CameraGraph_CameraNode& b) {
    a.Swap(&b);
  }
  inline void Swap(AndroidCameraSessionStats_CameraGraph_CameraNode* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AndroidCameraSessionStats_CameraGraph_CameraNode* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AndroidCameraSessionStats_CameraGraph_CameraNode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AndroidCameraSessionStats_CameraGraph_CameraNode>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AndroidCameraSessionStats_CameraGraph_CameraNode& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const AndroidCameraSessionStats_CameraGraph_CameraNode& from) {
    AndroidCameraSessionStats_CameraGraph_CameraNode::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AndroidCameraSessionStats_CameraGraph_CameraNode* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode";
  }
  protected:
  explicit AndroidCameraSessionStats_CameraGraph_CameraNode(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInputIdsFieldNumber = 2,
    kOutputIdsFieldNumber = 3,
    kVendorDataFieldNumber = 5,
    kNodeIdFieldNumber = 1,
    kVendorDataVersionFieldNumber = 4,
  };
  // repeated int64 input_ids = 2;
  int input_ids_size() const;
  private:
  int _internal_input_ids_size() const;

  public:
  void clear_input_ids() ;
  ::int64_t input_ids(int index) const;
  void set_input_ids(int index, ::int64_t value);
  void add_input_ids(::int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::int64_t>& input_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<::int64_t>* mutable_input_ids();

  private:
  ::int64_t _internal_input_ids(int index) const;
  void _internal_add_input_ids(::int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::int64_t>& _internal_input_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<::int64_t>* _internal_mutable_input_ids();

  public:
  // repeated int64 output_ids = 3;
  int output_ids_size() const;
  private:
  int _internal_output_ids_size() const;

  public:
  void clear_output_ids() ;
  ::int64_t output_ids(int index) const;
  void set_output_ids(int index, ::int64_t value);
  void add_output_ids(::int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::int64_t>& output_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<::int64_t>* mutable_output_ids();

  private:
  ::int64_t _internal_output_ids(int index) const;
  void _internal_add_output_ids(::int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::int64_t>& _internal_output_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<::int64_t>* _internal_mutable_output_ids();

  public:
  // optional bytes vendor_data = 5;
  bool has_vendor_data() const;
  void clear_vendor_data() ;
  const std::string& vendor_data() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_vendor_data(Arg_&& arg, Args_... args);
  std::string* mutable_vendor_data();
  PROTOBUF_NODISCARD std::string* release_vendor_data();
  void set_allocated_vendor_data(std::string* ptr);

  private:
  const std::string& _internal_vendor_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_vendor_data(
      const std::string& value);
  std::string* _internal_mutable_vendor_data();

  public:
  // optional int64 node_id = 1;
  bool has_node_id() const;
  void clear_node_id() ;
  ::int64_t node_id() const;
  void set_node_id(::int64_t value);

  private:
  ::int64_t _internal_node_id() const;
  void _internal_set_node_id(::int64_t value);

  public:
  // optional int32 vendor_data_version = 4;
  bool has_vendor_data_version() const;
  void clear_vendor_data_version() ;
  ::int32_t vendor_data_version() const;
  void set_vendor_data_version(::int32_t value);

  private:
  ::int32_t _internal_vendor_data_version() const;
  void _internal_set_vendor_data_version(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<::int64_t> input_ids_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<::int64_t> output_ids_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr vendor_data_;
    ::int64_t node_id_;
    ::int32_t vendor_data_version_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fcamera_5fevent_2eproto;
};// -------------------------------------------------------------------

class AndroidCameraSessionStats_CameraGraph_CameraEdge final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraEdge) */ {
 public:
  inline AndroidCameraSessionStats_CameraGraph_CameraEdge() : AndroidCameraSessionStats_CameraGraph_CameraEdge(nullptr) {}
  ~AndroidCameraSessionStats_CameraGraph_CameraEdge() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AndroidCameraSessionStats_CameraGraph_CameraEdge(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AndroidCameraSessionStats_CameraGraph_CameraEdge(const AndroidCameraSessionStats_CameraGraph_CameraEdge& from);
  AndroidCameraSessionStats_CameraGraph_CameraEdge(AndroidCameraSessionStats_CameraGraph_CameraEdge&& from) noexcept
    : AndroidCameraSessionStats_CameraGraph_CameraEdge() {
    *this = ::std::move(from);
  }

  inline AndroidCameraSessionStats_CameraGraph_CameraEdge& operator=(const AndroidCameraSessionStats_CameraGraph_CameraEdge& from) {
    CopyFrom(from);
    return *this;
  }
  inline AndroidCameraSessionStats_CameraGraph_CameraEdge& operator=(AndroidCameraSessionStats_CameraGraph_CameraEdge&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AndroidCameraSessionStats_CameraGraph_CameraEdge& default_instance() {
    return *internal_default_instance();
  }
  static inline const AndroidCameraSessionStats_CameraGraph_CameraEdge* internal_default_instance() {
    return reinterpret_cast<const AndroidCameraSessionStats_CameraGraph_CameraEdge*>(
               &_AndroidCameraSessionStats_CameraGraph_CameraEdge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(AndroidCameraSessionStats_CameraGraph_CameraEdge& a, AndroidCameraSessionStats_CameraGraph_CameraEdge& b) {
    a.Swap(&b);
  }
  inline void Swap(AndroidCameraSessionStats_CameraGraph_CameraEdge* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AndroidCameraSessionStats_CameraGraph_CameraEdge* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AndroidCameraSessionStats_CameraGraph_CameraEdge* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AndroidCameraSessionStats_CameraGraph_CameraEdge>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AndroidCameraSessionStats_CameraGraph_CameraEdge& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const AndroidCameraSessionStats_CameraGraph_CameraEdge& from) {
    AndroidCameraSessionStats_CameraGraph_CameraEdge::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AndroidCameraSessionStats_CameraGraph_CameraEdge* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraEdge";
  }
  protected:
  explicit AndroidCameraSessionStats_CameraGraph_CameraEdge(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVendorDataFieldNumber = 6,
    kOutputNodeIdFieldNumber = 1,
    kOutputIdFieldNumber = 2,
    kInputNodeIdFieldNumber = 3,
    kInputIdFieldNumber = 4,
    kVendorDataVersionFieldNumber = 5,
  };
  // optional bytes vendor_data = 6;
  bool has_vendor_data() const;
  void clear_vendor_data() ;
  const std::string& vendor_data() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_vendor_data(Arg_&& arg, Args_... args);
  std::string* mutable_vendor_data();
  PROTOBUF_NODISCARD std::string* release_vendor_data();
  void set_allocated_vendor_data(std::string* ptr);

  private:
  const std::string& _internal_vendor_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_vendor_data(
      const std::string& value);
  std::string* _internal_mutable_vendor_data();

  public:
  // optional int64 output_node_id = 1;
  bool has_output_node_id() const;
  void clear_output_node_id() ;
  ::int64_t output_node_id() const;
  void set_output_node_id(::int64_t value);

  private:
  ::int64_t _internal_output_node_id() const;
  void _internal_set_output_node_id(::int64_t value);

  public:
  // optional int64 output_id = 2;
  bool has_output_id() const;
  void clear_output_id() ;
  ::int64_t output_id() const;
  void set_output_id(::int64_t value);

  private:
  ::int64_t _internal_output_id() const;
  void _internal_set_output_id(::int64_t value);

  public:
  // optional int64 input_node_id = 3;
  bool has_input_node_id() const;
  void clear_input_node_id() ;
  ::int64_t input_node_id() const;
  void set_input_node_id(::int64_t value);

  private:
  ::int64_t _internal_input_node_id() const;
  void _internal_set_input_node_id(::int64_t value);

  public:
  // optional int64 input_id = 4;
  bool has_input_id() const;
  void clear_input_id() ;
  ::int64_t input_id() const;
  void set_input_id(::int64_t value);

  private:
  ::int64_t _internal_input_id() const;
  void _internal_set_input_id(::int64_t value);

  public:
  // optional int32 vendor_data_version = 5;
  bool has_vendor_data_version() const;
  void clear_vendor_data_version() ;
  ::int32_t vendor_data_version() const;
  void set_vendor_data_version(::int32_t value);

  private:
  ::int32_t _internal_vendor_data_version() const;
  void _internal_set_vendor_data_version(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraEdge)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr vendor_data_;
    ::int64_t output_node_id_;
    ::int64_t output_id_;
    ::int64_t input_node_id_;
    ::int64_t input_id_;
    ::int32_t vendor_data_version_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fcamera_5fevent_2eproto;
};// -------------------------------------------------------------------

class AndroidCameraSessionStats_CameraGraph final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.AndroidCameraSessionStats.CameraGraph) */ {
 public:
  inline AndroidCameraSessionStats_CameraGraph() : AndroidCameraSessionStats_CameraGraph(nullptr) {}
  ~AndroidCameraSessionStats_CameraGraph() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AndroidCameraSessionStats_CameraGraph(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AndroidCameraSessionStats_CameraGraph(const AndroidCameraSessionStats_CameraGraph& from);
  AndroidCameraSessionStats_CameraGraph(AndroidCameraSessionStats_CameraGraph&& from) noexcept
    : AndroidCameraSessionStats_CameraGraph() {
    *this = ::std::move(from);
  }

  inline AndroidCameraSessionStats_CameraGraph& operator=(const AndroidCameraSessionStats_CameraGraph& from) {
    CopyFrom(from);
    return *this;
  }
  inline AndroidCameraSessionStats_CameraGraph& operator=(AndroidCameraSessionStats_CameraGraph&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AndroidCameraSessionStats_CameraGraph& default_instance() {
    return *internal_default_instance();
  }
  static inline const AndroidCameraSessionStats_CameraGraph* internal_default_instance() {
    return reinterpret_cast<const AndroidCameraSessionStats_CameraGraph*>(
               &_AndroidCameraSessionStats_CameraGraph_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(AndroidCameraSessionStats_CameraGraph& a, AndroidCameraSessionStats_CameraGraph& b) {
    a.Swap(&b);
  }
  inline void Swap(AndroidCameraSessionStats_CameraGraph* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AndroidCameraSessionStats_CameraGraph* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AndroidCameraSessionStats_CameraGraph* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AndroidCameraSessionStats_CameraGraph>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AndroidCameraSessionStats_CameraGraph& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const AndroidCameraSessionStats_CameraGraph& from) {
    AndroidCameraSessionStats_CameraGraph::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AndroidCameraSessionStats_CameraGraph* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.AndroidCameraSessionStats.CameraGraph";
  }
  protected:
  explicit AndroidCameraSessionStats_CameraGraph(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AndroidCameraSessionStats_CameraGraph_CameraNode CameraNode;
  typedef AndroidCameraSessionStats_CameraGraph_CameraEdge CameraEdge;

  // accessors -------------------------------------------------------

  enum : int {
    kNodesFieldNumber = 1,
    kEdgesFieldNumber = 2,
  };
  // repeated .perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode nodes = 1;
  int nodes_size() const;
  private:
  int _internal_nodes_size() const;

  public:
  void clear_nodes() ;
  ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraNode* mutable_nodes(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraNode >*
      mutable_nodes();
  private:
  const ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraNode& _internal_nodes(int index) const;
  ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraNode* _internal_add_nodes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraNode>& _internal_nodes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraNode>* _internal_mutable_nodes();
  public:
  const ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraNode& nodes(int index) const;
  ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraNode* add_nodes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraNode >&
      nodes() const;
  // repeated .perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraEdge edges = 2;
  int edges_size() const;
  private:
  int _internal_edges_size() const;

  public:
  void clear_edges() ;
  ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraEdge* mutable_edges(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraEdge >*
      mutable_edges();
  private:
  const ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraEdge& _internal_edges(int index) const;
  ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraEdge* _internal_add_edges();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraEdge>& _internal_edges() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraEdge>* _internal_mutable_edges();
  public:
  const ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraEdge& edges(int index) const;
  ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraEdge* add_edges();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraEdge >&
      edges() const;
  // @@protoc_insertion_point(class_scope:perfetto.protos.AndroidCameraSessionStats.CameraGraph)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraNode > nodes_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraEdge > edges_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fcamera_5fevent_2eproto;
};// -------------------------------------------------------------------

class AndroidCameraSessionStats final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.AndroidCameraSessionStats) */ {
 public:
  inline AndroidCameraSessionStats() : AndroidCameraSessionStats(nullptr) {}
  ~AndroidCameraSessionStats() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AndroidCameraSessionStats(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AndroidCameraSessionStats(const AndroidCameraSessionStats& from);
  AndroidCameraSessionStats(AndroidCameraSessionStats&& from) noexcept
    : AndroidCameraSessionStats() {
    *this = ::std::move(from);
  }

  inline AndroidCameraSessionStats& operator=(const AndroidCameraSessionStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline AndroidCameraSessionStats& operator=(AndroidCameraSessionStats&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AndroidCameraSessionStats& default_instance() {
    return *internal_default_instance();
  }
  static inline const AndroidCameraSessionStats* internal_default_instance() {
    return reinterpret_cast<const AndroidCameraSessionStats*>(
               &_AndroidCameraSessionStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(AndroidCameraSessionStats& a, AndroidCameraSessionStats& b) {
    a.Swap(&b);
  }
  inline void Swap(AndroidCameraSessionStats* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AndroidCameraSessionStats* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AndroidCameraSessionStats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AndroidCameraSessionStats>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AndroidCameraSessionStats& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const AndroidCameraSessionStats& from) {
    AndroidCameraSessionStats::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AndroidCameraSessionStats* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.AndroidCameraSessionStats";
  }
  protected:
  explicit AndroidCameraSessionStats(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AndroidCameraSessionStats_CameraGraph CameraGraph;

  // accessors -------------------------------------------------------

  enum : int {
    kGraphFieldNumber = 2,
    kSessionIdFieldNumber = 1,
  };
  // optional .perfetto.protos.AndroidCameraSessionStats.CameraGraph graph = 2;
  bool has_graph() const;
  void clear_graph() ;
  const ::perfetto::protos::AndroidCameraSessionStats_CameraGraph& graph() const;
  PROTOBUF_NODISCARD ::perfetto::protos::AndroidCameraSessionStats_CameraGraph* release_graph();
  ::perfetto::protos::AndroidCameraSessionStats_CameraGraph* mutable_graph();
  void set_allocated_graph(::perfetto::protos::AndroidCameraSessionStats_CameraGraph* graph);
  private:
  const ::perfetto::protos::AndroidCameraSessionStats_CameraGraph& _internal_graph() const;
  ::perfetto::protos::AndroidCameraSessionStats_CameraGraph* _internal_mutable_graph();
  public:
  void unsafe_arena_set_allocated_graph(
      ::perfetto::protos::AndroidCameraSessionStats_CameraGraph* graph);
  ::perfetto::protos::AndroidCameraSessionStats_CameraGraph* unsafe_arena_release_graph();
  // optional uint64 session_id = 1;
  bool has_session_id() const;
  void clear_session_id() ;
  ::uint64_t session_id() const;
  void set_session_id(::uint64_t value);

  private:
  ::uint64_t _internal_session_id() const;
  void _internal_set_session_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.AndroidCameraSessionStats)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::perfetto::protos::AndroidCameraSessionStats_CameraGraph* graph_;
    ::uint64_t session_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fandroid_2fcamera_5fevent_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AndroidCameraFrameEvent_CameraNodeProcessingDetails

// optional int64 node_id = 1;
inline bool AndroidCameraFrameEvent_CameraNodeProcessingDetails::has_node_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void AndroidCameraFrameEvent_CameraNodeProcessingDetails::clear_node_id() {
  _impl_.node_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t AndroidCameraFrameEvent_CameraNodeProcessingDetails::node_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraFrameEvent.CameraNodeProcessingDetails.node_id)
  return _internal_node_id();
}
inline void AndroidCameraFrameEvent_CameraNodeProcessingDetails::set_node_id(::int64_t value) {
  _internal_set_node_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraFrameEvent.CameraNodeProcessingDetails.node_id)
}
inline ::int64_t AndroidCameraFrameEvent_CameraNodeProcessingDetails::_internal_node_id() const {
  return _impl_.node_id_;
}
inline void AndroidCameraFrameEvent_CameraNodeProcessingDetails::_internal_set_node_id(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.node_id_ = value;
}

// optional int64 start_processing_ns = 2;
inline bool AndroidCameraFrameEvent_CameraNodeProcessingDetails::has_start_processing_ns() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void AndroidCameraFrameEvent_CameraNodeProcessingDetails::clear_start_processing_ns() {
  _impl_.start_processing_ns_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t AndroidCameraFrameEvent_CameraNodeProcessingDetails::start_processing_ns() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraFrameEvent.CameraNodeProcessingDetails.start_processing_ns)
  return _internal_start_processing_ns();
}
inline void AndroidCameraFrameEvent_CameraNodeProcessingDetails::set_start_processing_ns(::int64_t value) {
  _internal_set_start_processing_ns(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraFrameEvent.CameraNodeProcessingDetails.start_processing_ns)
}
inline ::int64_t AndroidCameraFrameEvent_CameraNodeProcessingDetails::_internal_start_processing_ns() const {
  return _impl_.start_processing_ns_;
}
inline void AndroidCameraFrameEvent_CameraNodeProcessingDetails::_internal_set_start_processing_ns(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.start_processing_ns_ = value;
}

// optional int64 end_processing_ns = 3;
inline bool AndroidCameraFrameEvent_CameraNodeProcessingDetails::has_end_processing_ns() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void AndroidCameraFrameEvent_CameraNodeProcessingDetails::clear_end_processing_ns() {
  _impl_.end_processing_ns_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t AndroidCameraFrameEvent_CameraNodeProcessingDetails::end_processing_ns() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraFrameEvent.CameraNodeProcessingDetails.end_processing_ns)
  return _internal_end_processing_ns();
}
inline void AndroidCameraFrameEvent_CameraNodeProcessingDetails::set_end_processing_ns(::int64_t value) {
  _internal_set_end_processing_ns(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraFrameEvent.CameraNodeProcessingDetails.end_processing_ns)
}
inline ::int64_t AndroidCameraFrameEvent_CameraNodeProcessingDetails::_internal_end_processing_ns() const {
  return _impl_.end_processing_ns_;
}
inline void AndroidCameraFrameEvent_CameraNodeProcessingDetails::_internal_set_end_processing_ns(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.end_processing_ns_ = value;
}

// optional int64 scheduling_latency_ns = 4;
inline bool AndroidCameraFrameEvent_CameraNodeProcessingDetails::has_scheduling_latency_ns() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void AndroidCameraFrameEvent_CameraNodeProcessingDetails::clear_scheduling_latency_ns() {
  _impl_.scheduling_latency_ns_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t AndroidCameraFrameEvent_CameraNodeProcessingDetails::scheduling_latency_ns() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraFrameEvent.CameraNodeProcessingDetails.scheduling_latency_ns)
  return _internal_scheduling_latency_ns();
}
inline void AndroidCameraFrameEvent_CameraNodeProcessingDetails::set_scheduling_latency_ns(::int64_t value) {
  _internal_set_scheduling_latency_ns(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraFrameEvent.CameraNodeProcessingDetails.scheduling_latency_ns)
}
inline ::int64_t AndroidCameraFrameEvent_CameraNodeProcessingDetails::_internal_scheduling_latency_ns() const {
  return _impl_.scheduling_latency_ns_;
}
inline void AndroidCameraFrameEvent_CameraNodeProcessingDetails::_internal_set_scheduling_latency_ns(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.scheduling_latency_ns_ = value;
}

// -------------------------------------------------------------------

// AndroidCameraFrameEvent

// optional uint64 session_id = 1;
inline bool AndroidCameraFrameEvent::has_session_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void AndroidCameraFrameEvent::clear_session_id() {
  _impl_.session_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t AndroidCameraFrameEvent::session_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraFrameEvent.session_id)
  return _internal_session_id();
}
inline void AndroidCameraFrameEvent::set_session_id(::uint64_t value) {
  _internal_set_session_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraFrameEvent.session_id)
}
inline ::uint64_t AndroidCameraFrameEvent::_internal_session_id() const {
  return _impl_.session_id_;
}
inline void AndroidCameraFrameEvent::_internal_set_session_id(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.session_id_ = value;
}

// optional uint32 camera_id = 2;
inline bool AndroidCameraFrameEvent::has_camera_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void AndroidCameraFrameEvent::clear_camera_id() {
  _impl_.camera_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t AndroidCameraFrameEvent::camera_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraFrameEvent.camera_id)
  return _internal_camera_id();
}
inline void AndroidCameraFrameEvent::set_camera_id(::uint32_t value) {
  _internal_set_camera_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraFrameEvent.camera_id)
}
inline ::uint32_t AndroidCameraFrameEvent::_internal_camera_id() const {
  return _impl_.camera_id_;
}
inline void AndroidCameraFrameEvent::_internal_set_camera_id(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.camera_id_ = value;
}

// optional int64 frame_number = 3;
inline bool AndroidCameraFrameEvent::has_frame_number() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void AndroidCameraFrameEvent::clear_frame_number() {
  _impl_.frame_number_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t AndroidCameraFrameEvent::frame_number() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraFrameEvent.frame_number)
  return _internal_frame_number();
}
inline void AndroidCameraFrameEvent::set_frame_number(::int64_t value) {
  _internal_set_frame_number(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraFrameEvent.frame_number)
}
inline ::int64_t AndroidCameraFrameEvent::_internal_frame_number() const {
  return _impl_.frame_number_;
}
inline void AndroidCameraFrameEvent::_internal_set_frame_number(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.frame_number_ = value;
}

// optional int64 request_id = 4;
inline bool AndroidCameraFrameEvent::has_request_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void AndroidCameraFrameEvent::clear_request_id() {
  _impl_.request_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t AndroidCameraFrameEvent::request_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraFrameEvent.request_id)
  return _internal_request_id();
}
inline void AndroidCameraFrameEvent::set_request_id(::int64_t value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraFrameEvent.request_id)
}
inline ::int64_t AndroidCameraFrameEvent::_internal_request_id() const {
  return _impl_.request_id_;
}
inline void AndroidCameraFrameEvent::_internal_set_request_id(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.request_id_ = value;
}

// optional int64 request_received_ns = 5;
inline bool AndroidCameraFrameEvent::has_request_received_ns() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void AndroidCameraFrameEvent::clear_request_received_ns() {
  _impl_.request_received_ns_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t AndroidCameraFrameEvent::request_received_ns() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraFrameEvent.request_received_ns)
  return _internal_request_received_ns();
}
inline void AndroidCameraFrameEvent::set_request_received_ns(::int64_t value) {
  _internal_set_request_received_ns(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraFrameEvent.request_received_ns)
}
inline ::int64_t AndroidCameraFrameEvent::_internal_request_received_ns() const {
  return _impl_.request_received_ns_;
}
inline void AndroidCameraFrameEvent::_internal_set_request_received_ns(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.request_received_ns_ = value;
}

// optional int64 request_processing_started_ns = 6;
inline bool AndroidCameraFrameEvent::has_request_processing_started_ns() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void AndroidCameraFrameEvent::clear_request_processing_started_ns() {
  _impl_.request_processing_started_ns_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int64_t AndroidCameraFrameEvent::request_processing_started_ns() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraFrameEvent.request_processing_started_ns)
  return _internal_request_processing_started_ns();
}
inline void AndroidCameraFrameEvent::set_request_processing_started_ns(::int64_t value) {
  _internal_set_request_processing_started_ns(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraFrameEvent.request_processing_started_ns)
}
inline ::int64_t AndroidCameraFrameEvent::_internal_request_processing_started_ns() const {
  return _impl_.request_processing_started_ns_;
}
inline void AndroidCameraFrameEvent::_internal_set_request_processing_started_ns(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.request_processing_started_ns_ = value;
}

// optional int64 start_of_exposure_ns = 7;
inline bool AndroidCameraFrameEvent::has_start_of_exposure_ns() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void AndroidCameraFrameEvent::clear_start_of_exposure_ns() {
  _impl_.start_of_exposure_ns_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int64_t AndroidCameraFrameEvent::start_of_exposure_ns() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraFrameEvent.start_of_exposure_ns)
  return _internal_start_of_exposure_ns();
}
inline void AndroidCameraFrameEvent::set_start_of_exposure_ns(::int64_t value) {
  _internal_set_start_of_exposure_ns(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraFrameEvent.start_of_exposure_ns)
}
inline ::int64_t AndroidCameraFrameEvent::_internal_start_of_exposure_ns() const {
  return _impl_.start_of_exposure_ns_;
}
inline void AndroidCameraFrameEvent::_internal_set_start_of_exposure_ns(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.start_of_exposure_ns_ = value;
}

// optional int64 start_of_frame_ns = 8;
inline bool AndroidCameraFrameEvent::has_start_of_frame_ns() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void AndroidCameraFrameEvent::clear_start_of_frame_ns() {
  _impl_.start_of_frame_ns_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::int64_t AndroidCameraFrameEvent::start_of_frame_ns() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraFrameEvent.start_of_frame_ns)
  return _internal_start_of_frame_ns();
}
inline void AndroidCameraFrameEvent::set_start_of_frame_ns(::int64_t value) {
  _internal_set_start_of_frame_ns(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraFrameEvent.start_of_frame_ns)
}
inline ::int64_t AndroidCameraFrameEvent::_internal_start_of_frame_ns() const {
  return _impl_.start_of_frame_ns_;
}
inline void AndroidCameraFrameEvent::_internal_set_start_of_frame_ns(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.start_of_frame_ns_ = value;
}

// optional int64 responses_all_sent_ns = 9;
inline bool AndroidCameraFrameEvent::has_responses_all_sent_ns() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void AndroidCameraFrameEvent::clear_responses_all_sent_ns() {
  _impl_.responses_all_sent_ns_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::int64_t AndroidCameraFrameEvent::responses_all_sent_ns() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraFrameEvent.responses_all_sent_ns)
  return _internal_responses_all_sent_ns();
}
inline void AndroidCameraFrameEvent::set_responses_all_sent_ns(::int64_t value) {
  _internal_set_responses_all_sent_ns(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraFrameEvent.responses_all_sent_ns)
}
inline ::int64_t AndroidCameraFrameEvent::_internal_responses_all_sent_ns() const {
  return _impl_.responses_all_sent_ns_;
}
inline void AndroidCameraFrameEvent::_internal_set_responses_all_sent_ns(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.responses_all_sent_ns_ = value;
}

// optional .perfetto.protos.AndroidCameraFrameEvent.CaptureResultStatus capture_result_status = 10;
inline bool AndroidCameraFrameEvent::has_capture_result_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void AndroidCameraFrameEvent::clear_capture_result_status() {
  _impl_.capture_result_status_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::perfetto::protos::AndroidCameraFrameEvent_CaptureResultStatus AndroidCameraFrameEvent::capture_result_status() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraFrameEvent.capture_result_status)
  return _internal_capture_result_status();
}
inline void AndroidCameraFrameEvent::set_capture_result_status(::perfetto::protos::AndroidCameraFrameEvent_CaptureResultStatus value) {
   _internal_set_capture_result_status(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraFrameEvent.capture_result_status)
}
inline ::perfetto::protos::AndroidCameraFrameEvent_CaptureResultStatus AndroidCameraFrameEvent::_internal_capture_result_status() const {
  return static_cast<::perfetto::protos::AndroidCameraFrameEvent_CaptureResultStatus>(_impl_.capture_result_status_);
}
inline void AndroidCameraFrameEvent::_internal_set_capture_result_status(::perfetto::protos::AndroidCameraFrameEvent_CaptureResultStatus value) {
  assert(::perfetto::protos::AndroidCameraFrameEvent_CaptureResultStatus_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.capture_result_status_ = value;
}

// optional int32 skipped_sensor_frames = 11;
inline bool AndroidCameraFrameEvent::has_skipped_sensor_frames() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void AndroidCameraFrameEvent::clear_skipped_sensor_frames() {
  _impl_.skipped_sensor_frames_ = 0;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::int32_t AndroidCameraFrameEvent::skipped_sensor_frames() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraFrameEvent.skipped_sensor_frames)
  return _internal_skipped_sensor_frames();
}
inline void AndroidCameraFrameEvent::set_skipped_sensor_frames(::int32_t value) {
  _internal_set_skipped_sensor_frames(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraFrameEvent.skipped_sensor_frames)
}
inline ::int32_t AndroidCameraFrameEvent::_internal_skipped_sensor_frames() const {
  return _impl_.skipped_sensor_frames_;
}
inline void AndroidCameraFrameEvent::_internal_set_skipped_sensor_frames(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.skipped_sensor_frames_ = value;
}

// optional int32 capture_intent = 12;
inline bool AndroidCameraFrameEvent::has_capture_intent() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void AndroidCameraFrameEvent::clear_capture_intent() {
  _impl_.capture_intent_ = 0;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::int32_t AndroidCameraFrameEvent::capture_intent() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraFrameEvent.capture_intent)
  return _internal_capture_intent();
}
inline void AndroidCameraFrameEvent::set_capture_intent(::int32_t value) {
  _internal_set_capture_intent(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraFrameEvent.capture_intent)
}
inline ::int32_t AndroidCameraFrameEvent::_internal_capture_intent() const {
  return _impl_.capture_intent_;
}
inline void AndroidCameraFrameEvent::_internal_set_capture_intent(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.capture_intent_ = value;
}

// optional int32 num_streams = 13;
inline bool AndroidCameraFrameEvent::has_num_streams() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void AndroidCameraFrameEvent::clear_num_streams() {
  _impl_.num_streams_ = 0;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::int32_t AndroidCameraFrameEvent::num_streams() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraFrameEvent.num_streams)
  return _internal_num_streams();
}
inline void AndroidCameraFrameEvent::set_num_streams(::int32_t value) {
  _internal_set_num_streams(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraFrameEvent.num_streams)
}
inline ::int32_t AndroidCameraFrameEvent::_internal_num_streams() const {
  return _impl_.num_streams_;
}
inline void AndroidCameraFrameEvent::_internal_set_num_streams(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00002000u;
  _impl_.num_streams_ = value;
}

// repeated .perfetto.protos.AndroidCameraFrameEvent.CameraNodeProcessingDetails node_processing_details = 14;
inline int AndroidCameraFrameEvent::_internal_node_processing_details_size() const {
  return _impl_.node_processing_details_.size();
}
inline int AndroidCameraFrameEvent::node_processing_details_size() const {
  return _internal_node_processing_details_size();
}
inline void AndroidCameraFrameEvent::clear_node_processing_details() {
  _internal_mutable_node_processing_details()->Clear();
}
inline ::perfetto::protos::AndroidCameraFrameEvent_CameraNodeProcessingDetails* AndroidCameraFrameEvent::mutable_node_processing_details(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.AndroidCameraFrameEvent.node_processing_details)
  return _internal_mutable_node_processing_details()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidCameraFrameEvent_CameraNodeProcessingDetails >*
AndroidCameraFrameEvent::mutable_node_processing_details() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.AndroidCameraFrameEvent.node_processing_details)
  return _internal_mutable_node_processing_details();
}
inline const ::perfetto::protos::AndroidCameraFrameEvent_CameraNodeProcessingDetails& AndroidCameraFrameEvent::_internal_node_processing_details(int index) const {
  return _internal_node_processing_details().Get(index);
}
inline const ::perfetto::protos::AndroidCameraFrameEvent_CameraNodeProcessingDetails& AndroidCameraFrameEvent::node_processing_details(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraFrameEvent.node_processing_details)
  return _internal_node_processing_details(index);
}
inline ::perfetto::protos::AndroidCameraFrameEvent_CameraNodeProcessingDetails* AndroidCameraFrameEvent::_internal_add_node_processing_details() {
  return _internal_mutable_node_processing_details()->Add();
}
inline ::perfetto::protos::AndroidCameraFrameEvent_CameraNodeProcessingDetails* AndroidCameraFrameEvent::add_node_processing_details() {
  ::perfetto::protos::AndroidCameraFrameEvent_CameraNodeProcessingDetails* _add = _internal_add_node_processing_details();
  // @@protoc_insertion_point(field_add:perfetto.protos.AndroidCameraFrameEvent.node_processing_details)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidCameraFrameEvent_CameraNodeProcessingDetails >&
AndroidCameraFrameEvent::node_processing_details() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.AndroidCameraFrameEvent.node_processing_details)
  return _internal_node_processing_details();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::AndroidCameraFrameEvent_CameraNodeProcessingDetails>&
AndroidCameraFrameEvent::_internal_node_processing_details() const {
  return _impl_.node_processing_details_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::AndroidCameraFrameEvent_CameraNodeProcessingDetails>*
AndroidCameraFrameEvent::_internal_mutable_node_processing_details() {
  return &_impl_.node_processing_details_;
}

// optional int32 vendor_data_version = 15;
inline bool AndroidCameraFrameEvent::has_vendor_data_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void AndroidCameraFrameEvent::clear_vendor_data_version() {
  _impl_.vendor_data_version_ = 0;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::int32_t AndroidCameraFrameEvent::vendor_data_version() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraFrameEvent.vendor_data_version)
  return _internal_vendor_data_version();
}
inline void AndroidCameraFrameEvent::set_vendor_data_version(::int32_t value) {
  _internal_set_vendor_data_version(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraFrameEvent.vendor_data_version)
}
inline ::int32_t AndroidCameraFrameEvent::_internal_vendor_data_version() const {
  return _impl_.vendor_data_version_;
}
inline void AndroidCameraFrameEvent::_internal_set_vendor_data_version(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00004000u;
  _impl_.vendor_data_version_ = value;
}

// optional bytes vendor_data = 16;
inline bool AndroidCameraFrameEvent::has_vendor_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void AndroidCameraFrameEvent::clear_vendor_data() {
  _impl_.vendor_data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& AndroidCameraFrameEvent::vendor_data() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraFrameEvent.vendor_data)
  return _internal_vendor_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AndroidCameraFrameEvent::set_vendor_data(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.vendor_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraFrameEvent.vendor_data)
}
inline std::string* AndroidCameraFrameEvent::mutable_vendor_data() {
  std::string* _s = _internal_mutable_vendor_data();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.AndroidCameraFrameEvent.vendor_data)
  return _s;
}
inline const std::string& AndroidCameraFrameEvent::_internal_vendor_data() const {
  return _impl_.vendor_data_.Get();
}
inline void AndroidCameraFrameEvent::_internal_set_vendor_data(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.vendor_data_.Set(value, GetArenaForAllocation());
}
inline std::string* AndroidCameraFrameEvent::_internal_mutable_vendor_data() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.vendor_data_.Mutable( GetArenaForAllocation());
}
inline std::string* AndroidCameraFrameEvent::release_vendor_data() {
  // @@protoc_insertion_point(field_release:perfetto.protos.AndroidCameraFrameEvent.vendor_data)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.vendor_data_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.vendor_data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void AndroidCameraFrameEvent::set_allocated_vendor_data(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.vendor_data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.vendor_data_.IsDefault()) {
          _impl_.vendor_data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.AndroidCameraFrameEvent.vendor_data)
}

// -------------------------------------------------------------------

// AndroidCameraSessionStats_CameraGraph_CameraNode

// optional int64 node_id = 1;
inline bool AndroidCameraSessionStats_CameraGraph_CameraNode::has_node_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void AndroidCameraSessionStats_CameraGraph_CameraNode::clear_node_id() {
  _impl_.node_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t AndroidCameraSessionStats_CameraGraph_CameraNode::node_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode.node_id)
  return _internal_node_id();
}
inline void AndroidCameraSessionStats_CameraGraph_CameraNode::set_node_id(::int64_t value) {
  _internal_set_node_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode.node_id)
}
inline ::int64_t AndroidCameraSessionStats_CameraGraph_CameraNode::_internal_node_id() const {
  return _impl_.node_id_;
}
inline void AndroidCameraSessionStats_CameraGraph_CameraNode::_internal_set_node_id(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.node_id_ = value;
}

// repeated int64 input_ids = 2;
inline int AndroidCameraSessionStats_CameraGraph_CameraNode::_internal_input_ids_size() const {
  return _impl_.input_ids_.size();
}
inline int AndroidCameraSessionStats_CameraGraph_CameraNode::input_ids_size() const {
  return _internal_input_ids_size();
}
inline void AndroidCameraSessionStats_CameraGraph_CameraNode::clear_input_ids() {
  _internal_mutable_input_ids()->Clear();
}
inline ::int64_t AndroidCameraSessionStats_CameraGraph_CameraNode::input_ids(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode.input_ids)
  return _internal_input_ids(index);
}
inline void AndroidCameraSessionStats_CameraGraph_CameraNode::set_input_ids(int index, ::int64_t value) {
  _internal_mutable_input_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode.input_ids)
}
inline void AndroidCameraSessionStats_CameraGraph_CameraNode::add_input_ids(::int64_t value) {
  _internal_add_input_ids(value);
  // @@protoc_insertion_point(field_add:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode.input_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::int64_t>& AndroidCameraSessionStats_CameraGraph_CameraNode::input_ids() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode.input_ids)
  return _internal_input_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<::int64_t>* AndroidCameraSessionStats_CameraGraph_CameraNode::mutable_input_ids() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode.input_ids)
  return _internal_mutable_input_ids();
}

inline ::int64_t AndroidCameraSessionStats_CameraGraph_CameraNode::_internal_input_ids(int index) const {
  return _internal_input_ids().Get(index);
}
inline void AndroidCameraSessionStats_CameraGraph_CameraNode::_internal_add_input_ids(::int64_t value) {
  _internal_mutable_input_ids()->Add(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::int64_t>& AndroidCameraSessionStats_CameraGraph_CameraNode::_internal_input_ids() const {
  return _impl_.input_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<::int64_t>* AndroidCameraSessionStats_CameraGraph_CameraNode::_internal_mutable_input_ids() {
  return &_impl_.input_ids_;
}

// repeated int64 output_ids = 3;
inline int AndroidCameraSessionStats_CameraGraph_CameraNode::_internal_output_ids_size() const {
  return _impl_.output_ids_.size();
}
inline int AndroidCameraSessionStats_CameraGraph_CameraNode::output_ids_size() const {
  return _internal_output_ids_size();
}
inline void AndroidCameraSessionStats_CameraGraph_CameraNode::clear_output_ids() {
  _internal_mutable_output_ids()->Clear();
}
inline ::int64_t AndroidCameraSessionStats_CameraGraph_CameraNode::output_ids(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode.output_ids)
  return _internal_output_ids(index);
}
inline void AndroidCameraSessionStats_CameraGraph_CameraNode::set_output_ids(int index, ::int64_t value) {
  _internal_mutable_output_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode.output_ids)
}
inline void AndroidCameraSessionStats_CameraGraph_CameraNode::add_output_ids(::int64_t value) {
  _internal_add_output_ids(value);
  // @@protoc_insertion_point(field_add:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode.output_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::int64_t>& AndroidCameraSessionStats_CameraGraph_CameraNode::output_ids() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode.output_ids)
  return _internal_output_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<::int64_t>* AndroidCameraSessionStats_CameraGraph_CameraNode::mutable_output_ids() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode.output_ids)
  return _internal_mutable_output_ids();
}

inline ::int64_t AndroidCameraSessionStats_CameraGraph_CameraNode::_internal_output_ids(int index) const {
  return _internal_output_ids().Get(index);
}
inline void AndroidCameraSessionStats_CameraGraph_CameraNode::_internal_add_output_ids(::int64_t value) {
  _internal_mutable_output_ids()->Add(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::int64_t>& AndroidCameraSessionStats_CameraGraph_CameraNode::_internal_output_ids() const {
  return _impl_.output_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<::int64_t>* AndroidCameraSessionStats_CameraGraph_CameraNode::_internal_mutable_output_ids() {
  return &_impl_.output_ids_;
}

// optional int32 vendor_data_version = 4;
inline bool AndroidCameraSessionStats_CameraGraph_CameraNode::has_vendor_data_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void AndroidCameraSessionStats_CameraGraph_CameraNode::clear_vendor_data_version() {
  _impl_.vendor_data_version_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t AndroidCameraSessionStats_CameraGraph_CameraNode::vendor_data_version() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode.vendor_data_version)
  return _internal_vendor_data_version();
}
inline void AndroidCameraSessionStats_CameraGraph_CameraNode::set_vendor_data_version(::int32_t value) {
  _internal_set_vendor_data_version(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode.vendor_data_version)
}
inline ::int32_t AndroidCameraSessionStats_CameraGraph_CameraNode::_internal_vendor_data_version() const {
  return _impl_.vendor_data_version_;
}
inline void AndroidCameraSessionStats_CameraGraph_CameraNode::_internal_set_vendor_data_version(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.vendor_data_version_ = value;
}

// optional bytes vendor_data = 5;
inline bool AndroidCameraSessionStats_CameraGraph_CameraNode::has_vendor_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void AndroidCameraSessionStats_CameraGraph_CameraNode::clear_vendor_data() {
  _impl_.vendor_data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& AndroidCameraSessionStats_CameraGraph_CameraNode::vendor_data() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode.vendor_data)
  return _internal_vendor_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AndroidCameraSessionStats_CameraGraph_CameraNode::set_vendor_data(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.vendor_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode.vendor_data)
}
inline std::string* AndroidCameraSessionStats_CameraGraph_CameraNode::mutable_vendor_data() {
  std::string* _s = _internal_mutable_vendor_data();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode.vendor_data)
  return _s;
}
inline const std::string& AndroidCameraSessionStats_CameraGraph_CameraNode::_internal_vendor_data() const {
  return _impl_.vendor_data_.Get();
}
inline void AndroidCameraSessionStats_CameraGraph_CameraNode::_internal_set_vendor_data(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.vendor_data_.Set(value, GetArenaForAllocation());
}
inline std::string* AndroidCameraSessionStats_CameraGraph_CameraNode::_internal_mutable_vendor_data() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.vendor_data_.Mutable( GetArenaForAllocation());
}
inline std::string* AndroidCameraSessionStats_CameraGraph_CameraNode::release_vendor_data() {
  // @@protoc_insertion_point(field_release:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode.vendor_data)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.vendor_data_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.vendor_data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void AndroidCameraSessionStats_CameraGraph_CameraNode::set_allocated_vendor_data(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.vendor_data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.vendor_data_.IsDefault()) {
          _impl_.vendor_data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode.vendor_data)
}

// -------------------------------------------------------------------

// AndroidCameraSessionStats_CameraGraph_CameraEdge

// optional int64 output_node_id = 1;
inline bool AndroidCameraSessionStats_CameraGraph_CameraEdge::has_output_node_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void AndroidCameraSessionStats_CameraGraph_CameraEdge::clear_output_node_id() {
  _impl_.output_node_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t AndroidCameraSessionStats_CameraGraph_CameraEdge::output_node_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraEdge.output_node_id)
  return _internal_output_node_id();
}
inline void AndroidCameraSessionStats_CameraGraph_CameraEdge::set_output_node_id(::int64_t value) {
  _internal_set_output_node_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraEdge.output_node_id)
}
inline ::int64_t AndroidCameraSessionStats_CameraGraph_CameraEdge::_internal_output_node_id() const {
  return _impl_.output_node_id_;
}
inline void AndroidCameraSessionStats_CameraGraph_CameraEdge::_internal_set_output_node_id(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.output_node_id_ = value;
}

// optional int64 output_id = 2;
inline bool AndroidCameraSessionStats_CameraGraph_CameraEdge::has_output_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void AndroidCameraSessionStats_CameraGraph_CameraEdge::clear_output_id() {
  _impl_.output_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t AndroidCameraSessionStats_CameraGraph_CameraEdge::output_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraEdge.output_id)
  return _internal_output_id();
}
inline void AndroidCameraSessionStats_CameraGraph_CameraEdge::set_output_id(::int64_t value) {
  _internal_set_output_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraEdge.output_id)
}
inline ::int64_t AndroidCameraSessionStats_CameraGraph_CameraEdge::_internal_output_id() const {
  return _impl_.output_id_;
}
inline void AndroidCameraSessionStats_CameraGraph_CameraEdge::_internal_set_output_id(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.output_id_ = value;
}

// optional int64 input_node_id = 3;
inline bool AndroidCameraSessionStats_CameraGraph_CameraEdge::has_input_node_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void AndroidCameraSessionStats_CameraGraph_CameraEdge::clear_input_node_id() {
  _impl_.input_node_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t AndroidCameraSessionStats_CameraGraph_CameraEdge::input_node_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraEdge.input_node_id)
  return _internal_input_node_id();
}
inline void AndroidCameraSessionStats_CameraGraph_CameraEdge::set_input_node_id(::int64_t value) {
  _internal_set_input_node_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraEdge.input_node_id)
}
inline ::int64_t AndroidCameraSessionStats_CameraGraph_CameraEdge::_internal_input_node_id() const {
  return _impl_.input_node_id_;
}
inline void AndroidCameraSessionStats_CameraGraph_CameraEdge::_internal_set_input_node_id(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.input_node_id_ = value;
}

// optional int64 input_id = 4;
inline bool AndroidCameraSessionStats_CameraGraph_CameraEdge::has_input_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void AndroidCameraSessionStats_CameraGraph_CameraEdge::clear_input_id() {
  _impl_.input_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t AndroidCameraSessionStats_CameraGraph_CameraEdge::input_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraEdge.input_id)
  return _internal_input_id();
}
inline void AndroidCameraSessionStats_CameraGraph_CameraEdge::set_input_id(::int64_t value) {
  _internal_set_input_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraEdge.input_id)
}
inline ::int64_t AndroidCameraSessionStats_CameraGraph_CameraEdge::_internal_input_id() const {
  return _impl_.input_id_;
}
inline void AndroidCameraSessionStats_CameraGraph_CameraEdge::_internal_set_input_id(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.input_id_ = value;
}

// optional int32 vendor_data_version = 5;
inline bool AndroidCameraSessionStats_CameraGraph_CameraEdge::has_vendor_data_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void AndroidCameraSessionStats_CameraGraph_CameraEdge::clear_vendor_data_version() {
  _impl_.vendor_data_version_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t AndroidCameraSessionStats_CameraGraph_CameraEdge::vendor_data_version() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraEdge.vendor_data_version)
  return _internal_vendor_data_version();
}
inline void AndroidCameraSessionStats_CameraGraph_CameraEdge::set_vendor_data_version(::int32_t value) {
  _internal_set_vendor_data_version(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraEdge.vendor_data_version)
}
inline ::int32_t AndroidCameraSessionStats_CameraGraph_CameraEdge::_internal_vendor_data_version() const {
  return _impl_.vendor_data_version_;
}
inline void AndroidCameraSessionStats_CameraGraph_CameraEdge::_internal_set_vendor_data_version(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.vendor_data_version_ = value;
}

// optional bytes vendor_data = 6;
inline bool AndroidCameraSessionStats_CameraGraph_CameraEdge::has_vendor_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void AndroidCameraSessionStats_CameraGraph_CameraEdge::clear_vendor_data() {
  _impl_.vendor_data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& AndroidCameraSessionStats_CameraGraph_CameraEdge::vendor_data() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraEdge.vendor_data)
  return _internal_vendor_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AndroidCameraSessionStats_CameraGraph_CameraEdge::set_vendor_data(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.vendor_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraEdge.vendor_data)
}
inline std::string* AndroidCameraSessionStats_CameraGraph_CameraEdge::mutable_vendor_data() {
  std::string* _s = _internal_mutable_vendor_data();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraEdge.vendor_data)
  return _s;
}
inline const std::string& AndroidCameraSessionStats_CameraGraph_CameraEdge::_internal_vendor_data() const {
  return _impl_.vendor_data_.Get();
}
inline void AndroidCameraSessionStats_CameraGraph_CameraEdge::_internal_set_vendor_data(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.vendor_data_.Set(value, GetArenaForAllocation());
}
inline std::string* AndroidCameraSessionStats_CameraGraph_CameraEdge::_internal_mutable_vendor_data() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.vendor_data_.Mutable( GetArenaForAllocation());
}
inline std::string* AndroidCameraSessionStats_CameraGraph_CameraEdge::release_vendor_data() {
  // @@protoc_insertion_point(field_release:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraEdge.vendor_data)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.vendor_data_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.vendor_data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void AndroidCameraSessionStats_CameraGraph_CameraEdge::set_allocated_vendor_data(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.vendor_data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.vendor_data_.IsDefault()) {
          _impl_.vendor_data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraEdge.vendor_data)
}

// -------------------------------------------------------------------

// AndroidCameraSessionStats_CameraGraph

// repeated .perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraNode nodes = 1;
inline int AndroidCameraSessionStats_CameraGraph::_internal_nodes_size() const {
  return _impl_.nodes_.size();
}
inline int AndroidCameraSessionStats_CameraGraph::nodes_size() const {
  return _internal_nodes_size();
}
inline void AndroidCameraSessionStats_CameraGraph::clear_nodes() {
  _internal_mutable_nodes()->Clear();
}
inline ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraNode* AndroidCameraSessionStats_CameraGraph::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.AndroidCameraSessionStats.CameraGraph.nodes)
  return _internal_mutable_nodes()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraNode >*
AndroidCameraSessionStats_CameraGraph::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.AndroidCameraSessionStats.CameraGraph.nodes)
  return _internal_mutable_nodes();
}
inline const ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraNode& AndroidCameraSessionStats_CameraGraph::_internal_nodes(int index) const {
  return _internal_nodes().Get(index);
}
inline const ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraNode& AndroidCameraSessionStats_CameraGraph::nodes(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraSessionStats.CameraGraph.nodes)
  return _internal_nodes(index);
}
inline ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraNode* AndroidCameraSessionStats_CameraGraph::_internal_add_nodes() {
  return _internal_mutable_nodes()->Add();
}
inline ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraNode* AndroidCameraSessionStats_CameraGraph::add_nodes() {
  ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraNode* _add = _internal_add_nodes();
  // @@protoc_insertion_point(field_add:perfetto.protos.AndroidCameraSessionStats.CameraGraph.nodes)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraNode >&
AndroidCameraSessionStats_CameraGraph::nodes() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.AndroidCameraSessionStats.CameraGraph.nodes)
  return _internal_nodes();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraNode>&
AndroidCameraSessionStats_CameraGraph::_internal_nodes() const {
  return _impl_.nodes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraNode>*
AndroidCameraSessionStats_CameraGraph::_internal_mutable_nodes() {
  return &_impl_.nodes_;
}

// repeated .perfetto.protos.AndroidCameraSessionStats.CameraGraph.CameraEdge edges = 2;
inline int AndroidCameraSessionStats_CameraGraph::_internal_edges_size() const {
  return _impl_.edges_.size();
}
inline int AndroidCameraSessionStats_CameraGraph::edges_size() const {
  return _internal_edges_size();
}
inline void AndroidCameraSessionStats_CameraGraph::clear_edges() {
  _internal_mutable_edges()->Clear();
}
inline ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraEdge* AndroidCameraSessionStats_CameraGraph::mutable_edges(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.AndroidCameraSessionStats.CameraGraph.edges)
  return _internal_mutable_edges()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraEdge >*
AndroidCameraSessionStats_CameraGraph::mutable_edges() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.AndroidCameraSessionStats.CameraGraph.edges)
  return _internal_mutable_edges();
}
inline const ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraEdge& AndroidCameraSessionStats_CameraGraph::_internal_edges(int index) const {
  return _internal_edges().Get(index);
}
inline const ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraEdge& AndroidCameraSessionStats_CameraGraph::edges(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraSessionStats.CameraGraph.edges)
  return _internal_edges(index);
}
inline ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraEdge* AndroidCameraSessionStats_CameraGraph::_internal_add_edges() {
  return _internal_mutable_edges()->Add();
}
inline ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraEdge* AndroidCameraSessionStats_CameraGraph::add_edges() {
  ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraEdge* _add = _internal_add_edges();
  // @@protoc_insertion_point(field_add:perfetto.protos.AndroidCameraSessionStats.CameraGraph.edges)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraEdge >&
AndroidCameraSessionStats_CameraGraph::edges() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.AndroidCameraSessionStats.CameraGraph.edges)
  return _internal_edges();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraEdge>&
AndroidCameraSessionStats_CameraGraph::_internal_edges() const {
  return _impl_.edges_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::AndroidCameraSessionStats_CameraGraph_CameraEdge>*
AndroidCameraSessionStats_CameraGraph::_internal_mutable_edges() {
  return &_impl_.edges_;
}

// -------------------------------------------------------------------

// AndroidCameraSessionStats

// optional uint64 session_id = 1;
inline bool AndroidCameraSessionStats::has_session_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void AndroidCameraSessionStats::clear_session_id() {
  _impl_.session_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t AndroidCameraSessionStats::session_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraSessionStats.session_id)
  return _internal_session_id();
}
inline void AndroidCameraSessionStats::set_session_id(::uint64_t value) {
  _internal_set_session_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.AndroidCameraSessionStats.session_id)
}
inline ::uint64_t AndroidCameraSessionStats::_internal_session_id() const {
  return _impl_.session_id_;
}
inline void AndroidCameraSessionStats::_internal_set_session_id(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.session_id_ = value;
}

// optional .perfetto.protos.AndroidCameraSessionStats.CameraGraph graph = 2;
inline bool AndroidCameraSessionStats::has_graph() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.graph_ != nullptr);
  return value;
}
inline void AndroidCameraSessionStats::clear_graph() {
  if (_impl_.graph_ != nullptr) _impl_.graph_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::perfetto::protos::AndroidCameraSessionStats_CameraGraph& AndroidCameraSessionStats::_internal_graph() const {
  const ::perfetto::protos::AndroidCameraSessionStats_CameraGraph* p = _impl_.graph_;
  return p != nullptr ? *p : reinterpret_cast<const ::perfetto::protos::AndroidCameraSessionStats_CameraGraph&>(
      ::perfetto::protos::_AndroidCameraSessionStats_CameraGraph_default_instance_);
}
inline const ::perfetto::protos::AndroidCameraSessionStats_CameraGraph& AndroidCameraSessionStats::graph() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.AndroidCameraSessionStats.graph)
  return _internal_graph();
}
inline void AndroidCameraSessionStats::unsafe_arena_set_allocated_graph(
    ::perfetto::protos::AndroidCameraSessionStats_CameraGraph* graph) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.graph_);
  }
  _impl_.graph_ = graph;
  if (graph) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:perfetto.protos.AndroidCameraSessionStats.graph)
}
inline ::perfetto::protos::AndroidCameraSessionStats_CameraGraph* AndroidCameraSessionStats::release_graph() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::perfetto::protos::AndroidCameraSessionStats_CameraGraph* temp = _impl_.graph_;
  _impl_.graph_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::perfetto::protos::AndroidCameraSessionStats_CameraGraph* AndroidCameraSessionStats::unsafe_arena_release_graph() {
  // @@protoc_insertion_point(field_release:perfetto.protos.AndroidCameraSessionStats.graph)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::perfetto::protos::AndroidCameraSessionStats_CameraGraph* temp = _impl_.graph_;
  _impl_.graph_ = nullptr;
  return temp;
}
inline ::perfetto::protos::AndroidCameraSessionStats_CameraGraph* AndroidCameraSessionStats::_internal_mutable_graph() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.graph_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::AndroidCameraSessionStats_CameraGraph>(GetArenaForAllocation());
    _impl_.graph_ = p;
  }
  return _impl_.graph_;
}
inline ::perfetto::protos::AndroidCameraSessionStats_CameraGraph* AndroidCameraSessionStats::mutable_graph() {
  ::perfetto::protos::AndroidCameraSessionStats_CameraGraph* _msg = _internal_mutable_graph();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.AndroidCameraSessionStats.graph)
  return _msg;
}
inline void AndroidCameraSessionStats::set_allocated_graph(::perfetto::protos::AndroidCameraSessionStats_CameraGraph* graph) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.graph_;
  }
  if (graph) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(graph);
    if (message_arena != submessage_arena) {
      graph = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, graph, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.graph_ = graph;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.AndroidCameraSessionStats.graph)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto


PROTOBUF_NAMESPACE_OPEN

template <>
struct is_proto_enum<::perfetto::protos::AndroidCameraFrameEvent_CaptureResultStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::perfetto::protos::AndroidCameraFrameEvent_CaptureResultStatus>() {
  return ::perfetto::protos::AndroidCameraFrameEvent_CaptureResultStatus_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fandroid_2fcamera_5fevent_2eproto_2epb_2eh
