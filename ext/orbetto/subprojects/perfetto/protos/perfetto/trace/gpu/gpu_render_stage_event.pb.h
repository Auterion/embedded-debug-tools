// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/gpu/gpu_render_stage_event.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto;
namespace perfetto {
namespace protos {
class GpuRenderStageEvent;
struct GpuRenderStageEventDefaultTypeInternal;
extern GpuRenderStageEventDefaultTypeInternal _GpuRenderStageEvent_default_instance_;
class GpuRenderStageEvent_ExtraData;
struct GpuRenderStageEvent_ExtraDataDefaultTypeInternal;
extern GpuRenderStageEvent_ExtraDataDefaultTypeInternal _GpuRenderStageEvent_ExtraData_default_instance_;
class GpuRenderStageEvent_Specifications;
struct GpuRenderStageEvent_SpecificationsDefaultTypeInternal;
extern GpuRenderStageEvent_SpecificationsDefaultTypeInternal _GpuRenderStageEvent_Specifications_default_instance_;
class GpuRenderStageEvent_Specifications_ContextSpec;
struct GpuRenderStageEvent_Specifications_ContextSpecDefaultTypeInternal;
extern GpuRenderStageEvent_Specifications_ContextSpecDefaultTypeInternal _GpuRenderStageEvent_Specifications_ContextSpec_default_instance_;
class GpuRenderStageEvent_Specifications_Description;
struct GpuRenderStageEvent_Specifications_DescriptionDefaultTypeInternal;
extern GpuRenderStageEvent_Specifications_DescriptionDefaultTypeInternal _GpuRenderStageEvent_Specifications_Description_default_instance_;
class InternedGpuRenderStageSpecification;
struct InternedGpuRenderStageSpecificationDefaultTypeInternal;
extern InternedGpuRenderStageSpecificationDefaultTypeInternal _InternedGpuRenderStageSpecification_default_instance_;
class InternedGraphicsContext;
struct InternedGraphicsContextDefaultTypeInternal;
extern InternedGraphicsContextDefaultTypeInternal _InternedGraphicsContext_default_instance_;
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template <>
::perfetto::protos::GpuRenderStageEvent* Arena::CreateMaybeMessage<::perfetto::protos::GpuRenderStageEvent>(Arena*);
template <>
::perfetto::protos::GpuRenderStageEvent_ExtraData* Arena::CreateMaybeMessage<::perfetto::protos::GpuRenderStageEvent_ExtraData>(Arena*);
template <>
::perfetto::protos::GpuRenderStageEvent_Specifications* Arena::CreateMaybeMessage<::perfetto::protos::GpuRenderStageEvent_Specifications>(Arena*);
template <>
::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* Arena::CreateMaybeMessage<::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec>(Arena*);
template <>
::perfetto::protos::GpuRenderStageEvent_Specifications_Description* Arena::CreateMaybeMessage<::perfetto::protos::GpuRenderStageEvent_Specifications_Description>(Arena*);
template <>
::perfetto::protos::InternedGpuRenderStageSpecification* Arena::CreateMaybeMessage<::perfetto::protos::InternedGpuRenderStageSpecification>(Arena*);
template <>
::perfetto::protos::InternedGraphicsContext* Arena::CreateMaybeMessage<::perfetto::protos::InternedGraphicsContext>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace perfetto {
namespace protos {
enum InternedGraphicsContext_Api : int {
  InternedGraphicsContext_Api_UNDEFINED = 0,
  InternedGraphicsContext_Api_OPEN_GL = 1,
  InternedGraphicsContext_Api_VULKAN = 2,
  InternedGraphicsContext_Api_OPEN_CL = 3,
};

bool InternedGraphicsContext_Api_IsValid(int value);
constexpr InternedGraphicsContext_Api InternedGraphicsContext_Api_Api_MIN = static_cast<InternedGraphicsContext_Api>(0);
constexpr InternedGraphicsContext_Api InternedGraphicsContext_Api_Api_MAX = static_cast<InternedGraphicsContext_Api>(3);
constexpr int InternedGraphicsContext_Api_Api_ARRAYSIZE = 3 + 1;
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
InternedGraphicsContext_Api_descriptor();
template <typename T>
const std::string& InternedGraphicsContext_Api_Name(T value) {
  static_assert(std::is_same<T, InternedGraphicsContext_Api>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Api_Name().");
  return InternedGraphicsContext_Api_Name(static_cast<InternedGraphicsContext_Api>(value));
}
template <>
inline const std::string& InternedGraphicsContext_Api_Name(InternedGraphicsContext_Api value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfDenseEnum<InternedGraphicsContext_Api_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool InternedGraphicsContext_Api_Parse(absl::string_view name, InternedGraphicsContext_Api* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<InternedGraphicsContext_Api>(
      InternedGraphicsContext_Api_descriptor(), name, value);
}
enum InternedGpuRenderStageSpecification_RenderStageCategory : int {
  InternedGpuRenderStageSpecification_RenderStageCategory_OTHER = 0,
  InternedGpuRenderStageSpecification_RenderStageCategory_GRAPHICS = 1,
  InternedGpuRenderStageSpecification_RenderStageCategory_COMPUTE = 2,
};

bool InternedGpuRenderStageSpecification_RenderStageCategory_IsValid(int value);
constexpr InternedGpuRenderStageSpecification_RenderStageCategory InternedGpuRenderStageSpecification_RenderStageCategory_RenderStageCategory_MIN = static_cast<InternedGpuRenderStageSpecification_RenderStageCategory>(0);
constexpr InternedGpuRenderStageSpecification_RenderStageCategory InternedGpuRenderStageSpecification_RenderStageCategory_RenderStageCategory_MAX = static_cast<InternedGpuRenderStageSpecification_RenderStageCategory>(2);
constexpr int InternedGpuRenderStageSpecification_RenderStageCategory_RenderStageCategory_ARRAYSIZE = 2 + 1;
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
InternedGpuRenderStageSpecification_RenderStageCategory_descriptor();
template <typename T>
const std::string& InternedGpuRenderStageSpecification_RenderStageCategory_Name(T value) {
  static_assert(std::is_same<T, InternedGpuRenderStageSpecification_RenderStageCategory>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to RenderStageCategory_Name().");
  return InternedGpuRenderStageSpecification_RenderStageCategory_Name(static_cast<InternedGpuRenderStageSpecification_RenderStageCategory>(value));
}
template <>
inline const std::string& InternedGpuRenderStageSpecification_RenderStageCategory_Name(InternedGpuRenderStageSpecification_RenderStageCategory value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfDenseEnum<InternedGpuRenderStageSpecification_RenderStageCategory_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool InternedGpuRenderStageSpecification_RenderStageCategory_Parse(absl::string_view name, InternedGpuRenderStageSpecification_RenderStageCategory* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<InternedGpuRenderStageSpecification_RenderStageCategory>(
      InternedGpuRenderStageSpecification_RenderStageCategory_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class GpuRenderStageEvent_ExtraData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.GpuRenderStageEvent.ExtraData) */ {
 public:
  inline GpuRenderStageEvent_ExtraData() : GpuRenderStageEvent_ExtraData(nullptr) {}
  ~GpuRenderStageEvent_ExtraData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GpuRenderStageEvent_ExtraData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GpuRenderStageEvent_ExtraData(const GpuRenderStageEvent_ExtraData& from);
  GpuRenderStageEvent_ExtraData(GpuRenderStageEvent_ExtraData&& from) noexcept
    : GpuRenderStageEvent_ExtraData() {
    *this = ::std::move(from);
  }

  inline GpuRenderStageEvent_ExtraData& operator=(const GpuRenderStageEvent_ExtraData& from) {
    CopyFrom(from);
    return *this;
  }
  inline GpuRenderStageEvent_ExtraData& operator=(GpuRenderStageEvent_ExtraData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GpuRenderStageEvent_ExtraData& default_instance() {
    return *internal_default_instance();
  }
  static inline const GpuRenderStageEvent_ExtraData* internal_default_instance() {
    return reinterpret_cast<const GpuRenderStageEvent_ExtraData*>(
               &_GpuRenderStageEvent_ExtraData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GpuRenderStageEvent_ExtraData& a, GpuRenderStageEvent_ExtraData& b) {
    a.Swap(&b);
  }
  inline void Swap(GpuRenderStageEvent_ExtraData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GpuRenderStageEvent_ExtraData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GpuRenderStageEvent_ExtraData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GpuRenderStageEvent_ExtraData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GpuRenderStageEvent_ExtraData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GpuRenderStageEvent_ExtraData& from) {
    GpuRenderStageEvent_ExtraData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GpuRenderStageEvent_ExtraData* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.GpuRenderStageEvent.ExtraData";
  }
  protected:
  explicit GpuRenderStageEvent_ExtraData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // optional string name = 1;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional string value = 2;
  bool has_value() const;
  void clear_value() ;
  const std::string& value() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* ptr);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.GpuRenderStageEvent.ExtraData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto;
};// -------------------------------------------------------------------

class GpuRenderStageEvent_Specifications_ContextSpec final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec) */ {
 public:
  inline GpuRenderStageEvent_Specifications_ContextSpec() : GpuRenderStageEvent_Specifications_ContextSpec(nullptr) {}
  ~GpuRenderStageEvent_Specifications_ContextSpec() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GpuRenderStageEvent_Specifications_ContextSpec(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GpuRenderStageEvent_Specifications_ContextSpec(const GpuRenderStageEvent_Specifications_ContextSpec& from);
  GpuRenderStageEvent_Specifications_ContextSpec(GpuRenderStageEvent_Specifications_ContextSpec&& from) noexcept
    : GpuRenderStageEvent_Specifications_ContextSpec() {
    *this = ::std::move(from);
  }

  inline GpuRenderStageEvent_Specifications_ContextSpec& operator=(const GpuRenderStageEvent_Specifications_ContextSpec& from) {
    CopyFrom(from);
    return *this;
  }
  inline GpuRenderStageEvent_Specifications_ContextSpec& operator=(GpuRenderStageEvent_Specifications_ContextSpec&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GpuRenderStageEvent_Specifications_ContextSpec& default_instance() {
    return *internal_default_instance();
  }
  static inline const GpuRenderStageEvent_Specifications_ContextSpec* internal_default_instance() {
    return reinterpret_cast<const GpuRenderStageEvent_Specifications_ContextSpec*>(
               &_GpuRenderStageEvent_Specifications_ContextSpec_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GpuRenderStageEvent_Specifications_ContextSpec& a, GpuRenderStageEvent_Specifications_ContextSpec& b) {
    a.Swap(&b);
  }
  inline void Swap(GpuRenderStageEvent_Specifications_ContextSpec* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GpuRenderStageEvent_Specifications_ContextSpec* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GpuRenderStageEvent_Specifications_ContextSpec* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GpuRenderStageEvent_Specifications_ContextSpec>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GpuRenderStageEvent_Specifications_ContextSpec& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GpuRenderStageEvent_Specifications_ContextSpec& from) {
    GpuRenderStageEvent_Specifications_ContextSpec::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GpuRenderStageEvent_Specifications_ContextSpec* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec";
  }
  protected:
  explicit GpuRenderStageEvent_Specifications_ContextSpec(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextFieldNumber = 1,
    kPidFieldNumber = 2,
  };
  // optional uint64 context = 1;
  bool has_context() const;
  void clear_context() ;
  ::uint64_t context() const;
  void set_context(::uint64_t value);

  private:
  ::uint64_t _internal_context() const;
  void _internal_set_context(::uint64_t value);

  public:
  // optional int32 pid = 2;
  bool has_pid() const;
  void clear_pid() ;
  ::int32_t pid() const;
  void set_pid(::int32_t value);

  private:
  ::int32_t _internal_pid() const;
  void _internal_set_pid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::uint64_t context_;
    ::int32_t pid_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto;
};// -------------------------------------------------------------------

class GpuRenderStageEvent_Specifications_Description final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.GpuRenderStageEvent.Specifications.Description) */ {
 public:
  inline GpuRenderStageEvent_Specifications_Description() : GpuRenderStageEvent_Specifications_Description(nullptr) {}
  ~GpuRenderStageEvent_Specifications_Description() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GpuRenderStageEvent_Specifications_Description(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GpuRenderStageEvent_Specifications_Description(const GpuRenderStageEvent_Specifications_Description& from);
  GpuRenderStageEvent_Specifications_Description(GpuRenderStageEvent_Specifications_Description&& from) noexcept
    : GpuRenderStageEvent_Specifications_Description() {
    *this = ::std::move(from);
  }

  inline GpuRenderStageEvent_Specifications_Description& operator=(const GpuRenderStageEvent_Specifications_Description& from) {
    CopyFrom(from);
    return *this;
  }
  inline GpuRenderStageEvent_Specifications_Description& operator=(GpuRenderStageEvent_Specifications_Description&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GpuRenderStageEvent_Specifications_Description& default_instance() {
    return *internal_default_instance();
  }
  static inline const GpuRenderStageEvent_Specifications_Description* internal_default_instance() {
    return reinterpret_cast<const GpuRenderStageEvent_Specifications_Description*>(
               &_GpuRenderStageEvent_Specifications_Description_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GpuRenderStageEvent_Specifications_Description& a, GpuRenderStageEvent_Specifications_Description& b) {
    a.Swap(&b);
  }
  inline void Swap(GpuRenderStageEvent_Specifications_Description* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GpuRenderStageEvent_Specifications_Description* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GpuRenderStageEvent_Specifications_Description* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GpuRenderStageEvent_Specifications_Description>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GpuRenderStageEvent_Specifications_Description& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GpuRenderStageEvent_Specifications_Description& from) {
    GpuRenderStageEvent_Specifications_Description::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GpuRenderStageEvent_Specifications_Description* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.GpuRenderStageEvent.Specifications.Description";
  }
  protected:
  explicit GpuRenderStageEvent_Specifications_Description(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kDescriptionFieldNumber = 2,
  };
  // optional string name = 1;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional string description = 2;
  bool has_description() const;
  void clear_description() ;
  const std::string& description() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* ptr);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.GpuRenderStageEvent.Specifications.Description)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto;
};// -------------------------------------------------------------------

class GpuRenderStageEvent_Specifications final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.GpuRenderStageEvent.Specifications) */ {
 public:
  inline GpuRenderStageEvent_Specifications() : GpuRenderStageEvent_Specifications(nullptr) {}
  ~GpuRenderStageEvent_Specifications() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GpuRenderStageEvent_Specifications(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GpuRenderStageEvent_Specifications(const GpuRenderStageEvent_Specifications& from);
  GpuRenderStageEvent_Specifications(GpuRenderStageEvent_Specifications&& from) noexcept
    : GpuRenderStageEvent_Specifications() {
    *this = ::std::move(from);
  }

  inline GpuRenderStageEvent_Specifications& operator=(const GpuRenderStageEvent_Specifications& from) {
    CopyFrom(from);
    return *this;
  }
  inline GpuRenderStageEvent_Specifications& operator=(GpuRenderStageEvent_Specifications&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GpuRenderStageEvent_Specifications& default_instance() {
    return *internal_default_instance();
  }
  static inline const GpuRenderStageEvent_Specifications* internal_default_instance() {
    return reinterpret_cast<const GpuRenderStageEvent_Specifications*>(
               &_GpuRenderStageEvent_Specifications_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GpuRenderStageEvent_Specifications& a, GpuRenderStageEvent_Specifications& b) {
    a.Swap(&b);
  }
  inline void Swap(GpuRenderStageEvent_Specifications* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GpuRenderStageEvent_Specifications* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GpuRenderStageEvent_Specifications* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GpuRenderStageEvent_Specifications>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GpuRenderStageEvent_Specifications& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GpuRenderStageEvent_Specifications& from) {
    GpuRenderStageEvent_Specifications::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GpuRenderStageEvent_Specifications* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.GpuRenderStageEvent.Specifications";
  }
  protected:
  explicit GpuRenderStageEvent_Specifications(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GpuRenderStageEvent_Specifications_ContextSpec ContextSpec;
  typedef GpuRenderStageEvent_Specifications_Description Description;

  // accessors -------------------------------------------------------

  enum : int {
    kHwQueueFieldNumber = 2,
    kStageFieldNumber = 3,
    kContextSpecFieldNumber = 1,
  };
  // repeated .perfetto.protos.GpuRenderStageEvent.Specifications.Description hw_queue = 2;
  int hw_queue_size() const;
  private:
  int _internal_hw_queue_size() const;

  public:
  void clear_hw_queue() ;
  ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* mutable_hw_queue(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description >*
      mutable_hw_queue();
  private:
  const ::perfetto::protos::GpuRenderStageEvent_Specifications_Description& _internal_hw_queue(int index) const;
  ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* _internal_add_hw_queue();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::GpuRenderStageEvent_Specifications_Description>& _internal_hw_queue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::GpuRenderStageEvent_Specifications_Description>* _internal_mutable_hw_queue();
  public:
  const ::perfetto::protos::GpuRenderStageEvent_Specifications_Description& hw_queue(int index) const;
  ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* add_hw_queue();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description >&
      hw_queue() const;
  // repeated .perfetto.protos.GpuRenderStageEvent.Specifications.Description stage = 3;
  int stage_size() const;
  private:
  int _internal_stage_size() const;

  public:
  void clear_stage() ;
  ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* mutable_stage(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description >*
      mutable_stage();
  private:
  const ::perfetto::protos::GpuRenderStageEvent_Specifications_Description& _internal_stage(int index) const;
  ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* _internal_add_stage();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::GpuRenderStageEvent_Specifications_Description>& _internal_stage() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::GpuRenderStageEvent_Specifications_Description>* _internal_mutable_stage();
  public:
  const ::perfetto::protos::GpuRenderStageEvent_Specifications_Description& stage(int index) const;
  ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* add_stage();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description >&
      stage() const;
  // optional .perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec context_spec = 1;
  bool has_context_spec() const;
  void clear_context_spec() ;
  const ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec& context_spec() const;
  PROTOBUF_NODISCARD ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* release_context_spec();
  ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* mutable_context_spec();
  void set_allocated_context_spec(::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* context_spec);
  private:
  const ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec& _internal_context_spec() const;
  ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* _internal_mutable_context_spec();
  public:
  void unsafe_arena_set_allocated_context_spec(
      ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* context_spec);
  ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* unsafe_arena_release_context_spec();
  // @@protoc_insertion_point(class_scope:perfetto.protos.GpuRenderStageEvent.Specifications)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description > hw_queue_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description > stage_;
    ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* context_spec_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto;
};// -------------------------------------------------------------------

class GpuRenderStageEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.GpuRenderStageEvent) */ {
 public:
  inline GpuRenderStageEvent() : GpuRenderStageEvent(nullptr) {}
  ~GpuRenderStageEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GpuRenderStageEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GpuRenderStageEvent(const GpuRenderStageEvent& from);
  GpuRenderStageEvent(GpuRenderStageEvent&& from) noexcept
    : GpuRenderStageEvent() {
    *this = ::std::move(from);
  }

  inline GpuRenderStageEvent& operator=(const GpuRenderStageEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline GpuRenderStageEvent& operator=(GpuRenderStageEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GpuRenderStageEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const GpuRenderStageEvent* internal_default_instance() {
    return reinterpret_cast<const GpuRenderStageEvent*>(
               &_GpuRenderStageEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GpuRenderStageEvent& a, GpuRenderStageEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(GpuRenderStageEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GpuRenderStageEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GpuRenderStageEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GpuRenderStageEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GpuRenderStageEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GpuRenderStageEvent& from) {
    GpuRenderStageEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GpuRenderStageEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.GpuRenderStageEvent";
  }
  protected:
  explicit GpuRenderStageEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GpuRenderStageEvent_ExtraData ExtraData;
  typedef GpuRenderStageEvent_Specifications Specifications;

  // accessors -------------------------------------------------------

  enum : int {
    kExtraDataFieldNumber = 6,
    kRenderSubpassIndexMaskFieldNumber = 15,
    kSpecificationsFieldNumber = 7,
    kEventIdFieldNumber = 1,
    kDurationFieldNumber = 2,
    kHwQueueIdFieldNumber = 3,
    kStageIdFieldNumber = 4,
    kContextFieldNumber = 5,
    kRenderTargetHandleFieldNumber = 8,
    kRenderPassHandleFieldNumber = 9,
    kSubmissionIdFieldNumber = 10,
    kGpuIdFieldNumber = 11,
    kCommandBufferHandleFieldNumber = 12,
    kHwQueueIidFieldNumber = 13,
    kStageIidFieldNumber = 14,
  };
  // repeated .perfetto.protos.GpuRenderStageEvent.ExtraData extra_data = 6;
  int extra_data_size() const;
  private:
  int _internal_extra_data_size() const;

  public:
  void clear_extra_data() ;
  ::perfetto::protos::GpuRenderStageEvent_ExtraData* mutable_extra_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_ExtraData >*
      mutable_extra_data();
  private:
  const ::perfetto::protos::GpuRenderStageEvent_ExtraData& _internal_extra_data(int index) const;
  ::perfetto::protos::GpuRenderStageEvent_ExtraData* _internal_add_extra_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::GpuRenderStageEvent_ExtraData>& _internal_extra_data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::GpuRenderStageEvent_ExtraData>* _internal_mutable_extra_data();
  public:
  const ::perfetto::protos::GpuRenderStageEvent_ExtraData& extra_data(int index) const;
  ::perfetto::protos::GpuRenderStageEvent_ExtraData* add_extra_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_ExtraData >&
      extra_data() const;
  // repeated uint64 render_subpass_index_mask = 15;
  int render_subpass_index_mask_size() const;
  private:
  int _internal_render_subpass_index_mask_size() const;

  public:
  void clear_render_subpass_index_mask() ;
  ::uint64_t render_subpass_index_mask(int index) const;
  void set_render_subpass_index_mask(int index, ::uint64_t value);
  void add_render_subpass_index_mask(::uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>& render_subpass_index_mask() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>* mutable_render_subpass_index_mask();

  private:
  ::uint64_t _internal_render_subpass_index_mask(int index) const;
  void _internal_add_render_subpass_index_mask(::uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>& _internal_render_subpass_index_mask() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>* _internal_mutable_render_subpass_index_mask();

  public:
  // optional .perfetto.protos.GpuRenderStageEvent.Specifications specifications = 7 [deprecated = true];
  [[deprecated]]  bool has_specifications() const;
  [[deprecated]]  void clear_specifications() ;
  [[deprecated]] const ::perfetto::protos::GpuRenderStageEvent_Specifications& specifications() const;
  [[deprecated]] PROTOBUF_NODISCARD ::perfetto::protos::GpuRenderStageEvent_Specifications* release_specifications();
  [[deprecated]] ::perfetto::protos::GpuRenderStageEvent_Specifications* mutable_specifications();
  [[deprecated]] void set_allocated_specifications(::perfetto::protos::GpuRenderStageEvent_Specifications* specifications);
  private:
  const ::perfetto::protos::GpuRenderStageEvent_Specifications& _internal_specifications() const;
  ::perfetto::protos::GpuRenderStageEvent_Specifications* _internal_mutable_specifications();
  public:
  [[deprecated]] void unsafe_arena_set_allocated_specifications(
      ::perfetto::protos::GpuRenderStageEvent_Specifications* specifications);
  [[deprecated]] ::perfetto::protos::GpuRenderStageEvent_Specifications* unsafe_arena_release_specifications();
  // optional uint64 event_id = 1;
  bool has_event_id() const;
  void clear_event_id() ;
  ::uint64_t event_id() const;
  void set_event_id(::uint64_t value);

  private:
  ::uint64_t _internal_event_id() const;
  void _internal_set_event_id(::uint64_t value);

  public:
  // optional uint64 duration = 2;
  bool has_duration() const;
  void clear_duration() ;
  ::uint64_t duration() const;
  void set_duration(::uint64_t value);

  private:
  ::uint64_t _internal_duration() const;
  void _internal_set_duration(::uint64_t value);

  public:
  // optional int32 hw_queue_id = 3 [deprecated = true];
  [[deprecated]]  bool has_hw_queue_id() const;
  [[deprecated]]  void clear_hw_queue_id() ;
  [[deprecated]] ::int32_t hw_queue_id() const;
  [[deprecated]] void set_hw_queue_id(::int32_t value);

  private:
  ::int32_t _internal_hw_queue_id() const;
  void _internal_set_hw_queue_id(::int32_t value);

  public:
  // optional int32 stage_id = 4 [deprecated = true];
  [[deprecated]]  bool has_stage_id() const;
  [[deprecated]]  void clear_stage_id() ;
  [[deprecated]] ::int32_t stage_id() const;
  [[deprecated]] void set_stage_id(::int32_t value);

  private:
  ::int32_t _internal_stage_id() const;
  void _internal_set_stage_id(::int32_t value);

  public:
  // optional uint64 context = 5;
  bool has_context() const;
  void clear_context() ;
  ::uint64_t context() const;
  void set_context(::uint64_t value);

  private:
  ::uint64_t _internal_context() const;
  void _internal_set_context(::uint64_t value);

  public:
  // optional uint64 render_target_handle = 8;
  bool has_render_target_handle() const;
  void clear_render_target_handle() ;
  ::uint64_t render_target_handle() const;
  void set_render_target_handle(::uint64_t value);

  private:
  ::uint64_t _internal_render_target_handle() const;
  void _internal_set_render_target_handle(::uint64_t value);

  public:
  // optional uint64 render_pass_handle = 9;
  bool has_render_pass_handle() const;
  void clear_render_pass_handle() ;
  ::uint64_t render_pass_handle() const;
  void set_render_pass_handle(::uint64_t value);

  private:
  ::uint64_t _internal_render_pass_handle() const;
  void _internal_set_render_pass_handle(::uint64_t value);

  public:
  // optional uint32 submission_id = 10;
  bool has_submission_id() const;
  void clear_submission_id() ;
  ::uint32_t submission_id() const;
  void set_submission_id(::uint32_t value);

  private:
  ::uint32_t _internal_submission_id() const;
  void _internal_set_submission_id(::uint32_t value);

  public:
  // optional int32 gpu_id = 11;
  bool has_gpu_id() const;
  void clear_gpu_id() ;
  ::int32_t gpu_id() const;
  void set_gpu_id(::int32_t value);

  private:
  ::int32_t _internal_gpu_id() const;
  void _internal_set_gpu_id(::int32_t value);

  public:
  // optional uint64 command_buffer_handle = 12;
  bool has_command_buffer_handle() const;
  void clear_command_buffer_handle() ;
  ::uint64_t command_buffer_handle() const;
  void set_command_buffer_handle(::uint64_t value);

  private:
  ::uint64_t _internal_command_buffer_handle() const;
  void _internal_set_command_buffer_handle(::uint64_t value);

  public:
  // optional uint64 hw_queue_iid = 13;
  bool has_hw_queue_iid() const;
  void clear_hw_queue_iid() ;
  ::uint64_t hw_queue_iid() const;
  void set_hw_queue_iid(::uint64_t value);

  private:
  ::uint64_t _internal_hw_queue_iid() const;
  void _internal_set_hw_queue_iid(::uint64_t value);

  public:
  // optional uint64 stage_iid = 14;
  bool has_stage_iid() const;
  void clear_stage_iid() ;
  ::uint64_t stage_iid() const;
  void set_stage_iid(::uint64_t value);

  private:
  ::uint64_t _internal_stage_iid() const;
  void _internal_set_stage_iid(::uint64_t value);

  public:
  template <typename _proto_TypeTraits, ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline bool HasExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<GpuRenderStageEvent, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits, ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<GpuRenderStageEvent, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    _impl_._extensions_.ClearExtension(id.number());
  }

  template <typename _proto_TypeTraits, ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline int ExtensionSize(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<GpuRenderStageEvent, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits, ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<GpuRenderStageEvent, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<GpuRenderStageEvent, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Mutable(id.number(), _field_type, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<GpuRenderStageEvent, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<GpuRenderStageEvent, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<GpuRenderStageEvent, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<GpuRenderStageEvent, _proto_TypeTraits,
                                           _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Release(id.number(), _field_type, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<GpuRenderStageEvent, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<GpuRenderStageEvent, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<GpuRenderStageEvent, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) {
    return _proto_TypeTraits::Mutable(id.number(), index, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<GpuRenderStageEvent, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<GpuRenderStageEvent, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_impl_._extensions_);
    return to_add;
  }

  template <typename _proto_TypeTraits, ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<GpuRenderStageEvent, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<GpuRenderStageEvent, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::GetRepeated(id.number(), _impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<GpuRenderStageEvent, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_impl_._extensions_);
  }
  // @@protoc_insertion_point(class_scope:perfetto.protos.GpuRenderStageEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ExtensionSet _extensions_;

    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_ExtraData > extra_data_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t> render_subpass_index_mask_;
    ::perfetto::protos::GpuRenderStageEvent_Specifications* specifications_;
    ::uint64_t event_id_;
    ::uint64_t duration_;
    ::int32_t hw_queue_id_;
    ::int32_t stage_id_;
    ::uint64_t context_;
    ::uint64_t render_target_handle_;
    ::uint64_t render_pass_handle_;
    ::uint32_t submission_id_;
    ::int32_t gpu_id_;
    ::uint64_t command_buffer_handle_;
    ::uint64_t hw_queue_iid_;
    ::uint64_t stage_iid_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto;
};// -------------------------------------------------------------------

class InternedGraphicsContext final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.InternedGraphicsContext) */ {
 public:
  inline InternedGraphicsContext() : InternedGraphicsContext(nullptr) {}
  ~InternedGraphicsContext() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR InternedGraphicsContext(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InternedGraphicsContext(const InternedGraphicsContext& from);
  InternedGraphicsContext(InternedGraphicsContext&& from) noexcept
    : InternedGraphicsContext() {
    *this = ::std::move(from);
  }

  inline InternedGraphicsContext& operator=(const InternedGraphicsContext& from) {
    CopyFrom(from);
    return *this;
  }
  inline InternedGraphicsContext& operator=(InternedGraphicsContext&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InternedGraphicsContext& default_instance() {
    return *internal_default_instance();
  }
  static inline const InternedGraphicsContext* internal_default_instance() {
    return reinterpret_cast<const InternedGraphicsContext*>(
               &_InternedGraphicsContext_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(InternedGraphicsContext& a, InternedGraphicsContext& b) {
    a.Swap(&b);
  }
  inline void Swap(InternedGraphicsContext* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InternedGraphicsContext* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InternedGraphicsContext* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InternedGraphicsContext>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const InternedGraphicsContext& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const InternedGraphicsContext& from) {
    InternedGraphicsContext::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InternedGraphicsContext* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.InternedGraphicsContext";
  }
  protected:
  explicit InternedGraphicsContext(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Api = InternedGraphicsContext_Api;
  static constexpr Api UNDEFINED = InternedGraphicsContext_Api_UNDEFINED;
  static constexpr Api OPEN_GL = InternedGraphicsContext_Api_OPEN_GL;
  static constexpr Api VULKAN = InternedGraphicsContext_Api_VULKAN;
  static constexpr Api OPEN_CL = InternedGraphicsContext_Api_OPEN_CL;
  static inline bool Api_IsValid(int value) {
    return InternedGraphicsContext_Api_IsValid(value);
  }
  static constexpr Api Api_MIN = InternedGraphicsContext_Api_Api_MIN;
  static constexpr Api Api_MAX = InternedGraphicsContext_Api_Api_MAX;
  static constexpr int Api_ARRAYSIZE = InternedGraphicsContext_Api_Api_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Api_descriptor() {
    return InternedGraphicsContext_Api_descriptor();
  }
  template <typename T>
  static inline const std::string& Api_Name(T value) {
    return InternedGraphicsContext_Api_Name(value);
  }
  static inline bool Api_Parse(absl::string_view name, Api* value) {
    return InternedGraphicsContext_Api_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kIidFieldNumber = 1,
    kPidFieldNumber = 2,
    kApiFieldNumber = 3,
  };
  // optional uint64 iid = 1;
  bool has_iid() const;
  void clear_iid() ;
  ::uint64_t iid() const;
  void set_iid(::uint64_t value);

  private:
  ::uint64_t _internal_iid() const;
  void _internal_set_iid(::uint64_t value);

  public:
  // optional int32 pid = 2;
  bool has_pid() const;
  void clear_pid() ;
  ::int32_t pid() const;
  void set_pid(::int32_t value);

  private:
  ::int32_t _internal_pid() const;
  void _internal_set_pid(::int32_t value);

  public:
  // optional .perfetto.protos.InternedGraphicsContext.Api api = 3;
  bool has_api() const;
  void clear_api() ;
  ::perfetto::protos::InternedGraphicsContext_Api api() const;
  void set_api(::perfetto::protos::InternedGraphicsContext_Api value);

  private:
  ::perfetto::protos::InternedGraphicsContext_Api _internal_api() const;
  void _internal_set_api(::perfetto::protos::InternedGraphicsContext_Api value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.InternedGraphicsContext)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::uint64_t iid_;
    ::int32_t pid_;
    int api_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto;
};// -------------------------------------------------------------------

class InternedGpuRenderStageSpecification final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.InternedGpuRenderStageSpecification) */ {
 public:
  inline InternedGpuRenderStageSpecification() : InternedGpuRenderStageSpecification(nullptr) {}
  ~InternedGpuRenderStageSpecification() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR InternedGpuRenderStageSpecification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InternedGpuRenderStageSpecification(const InternedGpuRenderStageSpecification& from);
  InternedGpuRenderStageSpecification(InternedGpuRenderStageSpecification&& from) noexcept
    : InternedGpuRenderStageSpecification() {
    *this = ::std::move(from);
  }

  inline InternedGpuRenderStageSpecification& operator=(const InternedGpuRenderStageSpecification& from) {
    CopyFrom(from);
    return *this;
  }
  inline InternedGpuRenderStageSpecification& operator=(InternedGpuRenderStageSpecification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InternedGpuRenderStageSpecification& default_instance() {
    return *internal_default_instance();
  }
  static inline const InternedGpuRenderStageSpecification* internal_default_instance() {
    return reinterpret_cast<const InternedGpuRenderStageSpecification*>(
               &_InternedGpuRenderStageSpecification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(InternedGpuRenderStageSpecification& a, InternedGpuRenderStageSpecification& b) {
    a.Swap(&b);
  }
  inline void Swap(InternedGpuRenderStageSpecification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InternedGpuRenderStageSpecification* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InternedGpuRenderStageSpecification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InternedGpuRenderStageSpecification>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const InternedGpuRenderStageSpecification& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const InternedGpuRenderStageSpecification& from) {
    InternedGpuRenderStageSpecification::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InternedGpuRenderStageSpecification* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.InternedGpuRenderStageSpecification";
  }
  protected:
  explicit InternedGpuRenderStageSpecification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using RenderStageCategory = InternedGpuRenderStageSpecification_RenderStageCategory;
  static constexpr RenderStageCategory OTHER = InternedGpuRenderStageSpecification_RenderStageCategory_OTHER;
  static constexpr RenderStageCategory GRAPHICS = InternedGpuRenderStageSpecification_RenderStageCategory_GRAPHICS;
  static constexpr RenderStageCategory COMPUTE = InternedGpuRenderStageSpecification_RenderStageCategory_COMPUTE;
  static inline bool RenderStageCategory_IsValid(int value) {
    return InternedGpuRenderStageSpecification_RenderStageCategory_IsValid(value);
  }
  static constexpr RenderStageCategory RenderStageCategory_MIN = InternedGpuRenderStageSpecification_RenderStageCategory_RenderStageCategory_MIN;
  static constexpr RenderStageCategory RenderStageCategory_MAX = InternedGpuRenderStageSpecification_RenderStageCategory_RenderStageCategory_MAX;
  static constexpr int RenderStageCategory_ARRAYSIZE = InternedGpuRenderStageSpecification_RenderStageCategory_RenderStageCategory_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RenderStageCategory_descriptor() {
    return InternedGpuRenderStageSpecification_RenderStageCategory_descriptor();
  }
  template <typename T>
  static inline const std::string& RenderStageCategory_Name(T value) {
    return InternedGpuRenderStageSpecification_RenderStageCategory_Name(value);
  }
  static inline bool RenderStageCategory_Parse(absl::string_view name, RenderStageCategory* value) {
    return InternedGpuRenderStageSpecification_RenderStageCategory_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kIidFieldNumber = 1,
    kCategoryFieldNumber = 4,
  };
  // optional string name = 2;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional string description = 3;
  bool has_description() const;
  void clear_description() ;
  const std::string& description() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* ptr);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // optional uint64 iid = 1;
  bool has_iid() const;
  void clear_iid() ;
  ::uint64_t iid() const;
  void set_iid(::uint64_t value);

  private:
  ::uint64_t _internal_iid() const;
  void _internal_set_iid(::uint64_t value);

  public:
  // optional .perfetto.protos.InternedGpuRenderStageSpecification.RenderStageCategory category = 4;
  bool has_category() const;
  void clear_category() ;
  ::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory category() const;
  void set_category(::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory value);

  private:
  ::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory _internal_category() const;
  void _internal_set_category(::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.InternedGpuRenderStageSpecification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
    ::uint64_t iid_;
    int category_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GpuRenderStageEvent_ExtraData

// optional string name = 1;
inline bool GpuRenderStageEvent_ExtraData::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void GpuRenderStageEvent_ExtraData::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GpuRenderStageEvent_ExtraData::name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.ExtraData.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GpuRenderStageEvent_ExtraData::set_name(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.ExtraData.name)
}
inline std::string* GpuRenderStageEvent_ExtraData::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.GpuRenderStageEvent.ExtraData.name)
  return _s;
}
inline const std::string& GpuRenderStageEvent_ExtraData::_internal_name() const {
  return _impl_.name_.Get();
}
inline void GpuRenderStageEvent_ExtraData::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* GpuRenderStageEvent_ExtraData::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* GpuRenderStageEvent_ExtraData::release_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.GpuRenderStageEvent.ExtraData.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void GpuRenderStageEvent_ExtraData::set_allocated_name(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.GpuRenderStageEvent.ExtraData.name)
}

// optional string value = 2;
inline bool GpuRenderStageEvent_ExtraData::has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void GpuRenderStageEvent_ExtraData::clear_value() {
  _impl_.value_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& GpuRenderStageEvent_ExtraData::value() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.ExtraData.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GpuRenderStageEvent_ExtraData::set_value(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.ExtraData.value)
}
inline std::string* GpuRenderStageEvent_ExtraData::mutable_value() {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.GpuRenderStageEvent.ExtraData.value)
  return _s;
}
inline const std::string& GpuRenderStageEvent_ExtraData::_internal_value() const {
  return _impl_.value_.Get();
}
inline void GpuRenderStageEvent_ExtraData::_internal_set_value(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;


  _impl_.value_.Set(value, GetArenaForAllocation());
}
inline std::string* GpuRenderStageEvent_ExtraData::_internal_mutable_value() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.value_.Mutable( GetArenaForAllocation());
}
inline std::string* GpuRenderStageEvent_ExtraData::release_value() {
  // @@protoc_insertion_point(field_release:perfetto.protos.GpuRenderStageEvent.ExtraData.value)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.value_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void GpuRenderStageEvent_ExtraData::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.value_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.GpuRenderStageEvent.ExtraData.value)
}

// -------------------------------------------------------------------

// GpuRenderStageEvent_Specifications_ContextSpec

// optional uint64 context = 1;
inline bool GpuRenderStageEvent_Specifications_ContextSpec::has_context() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void GpuRenderStageEvent_Specifications_ContextSpec::clear_context() {
  _impl_.context_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t GpuRenderStageEvent_Specifications_ContextSpec::context() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec.context)
  return _internal_context();
}
inline void GpuRenderStageEvent_Specifications_ContextSpec::set_context(::uint64_t value) {
  _internal_set_context(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec.context)
}
inline ::uint64_t GpuRenderStageEvent_Specifications_ContextSpec::_internal_context() const {
  return _impl_.context_;
}
inline void GpuRenderStageEvent_Specifications_ContextSpec::_internal_set_context(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.context_ = value;
}

// optional int32 pid = 2;
inline bool GpuRenderStageEvent_Specifications_ContextSpec::has_pid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void GpuRenderStageEvent_Specifications_ContextSpec::clear_pid() {
  _impl_.pid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t GpuRenderStageEvent_Specifications_ContextSpec::pid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec.pid)
  return _internal_pid();
}
inline void GpuRenderStageEvent_Specifications_ContextSpec::set_pid(::int32_t value) {
  _internal_set_pid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec.pid)
}
inline ::int32_t GpuRenderStageEvent_Specifications_ContextSpec::_internal_pid() const {
  return _impl_.pid_;
}
inline void GpuRenderStageEvent_Specifications_ContextSpec::_internal_set_pid(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.pid_ = value;
}

// -------------------------------------------------------------------

// GpuRenderStageEvent_Specifications_Description

// optional string name = 1;
inline bool GpuRenderStageEvent_Specifications_Description::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void GpuRenderStageEvent_Specifications_Description::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GpuRenderStageEvent_Specifications_Description::name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.Specifications.Description.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GpuRenderStageEvent_Specifications_Description::set_name(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.Specifications.Description.name)
}
inline std::string* GpuRenderStageEvent_Specifications_Description::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.GpuRenderStageEvent.Specifications.Description.name)
  return _s;
}
inline const std::string& GpuRenderStageEvent_Specifications_Description::_internal_name() const {
  return _impl_.name_.Get();
}
inline void GpuRenderStageEvent_Specifications_Description::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* GpuRenderStageEvent_Specifications_Description::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* GpuRenderStageEvent_Specifications_Description::release_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.GpuRenderStageEvent.Specifications.Description.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void GpuRenderStageEvent_Specifications_Description::set_allocated_name(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.GpuRenderStageEvent.Specifications.Description.name)
}

// optional string description = 2;
inline bool GpuRenderStageEvent_Specifications_Description::has_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void GpuRenderStageEvent_Specifications_Description::clear_description() {
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& GpuRenderStageEvent_Specifications_Description::description() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.Specifications.Description.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GpuRenderStageEvent_Specifications_Description::set_description(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.Specifications.Description.description)
}
inline std::string* GpuRenderStageEvent_Specifications_Description::mutable_description() {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.GpuRenderStageEvent.Specifications.Description.description)
  return _s;
}
inline const std::string& GpuRenderStageEvent_Specifications_Description::_internal_description() const {
  return _impl_.description_.Get();
}
inline void GpuRenderStageEvent_Specifications_Description::_internal_set_description(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;


  _impl_.description_.Set(value, GetArenaForAllocation());
}
inline std::string* GpuRenderStageEvent_Specifications_Description::_internal_mutable_description() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.description_.Mutable( GetArenaForAllocation());
}
inline std::string* GpuRenderStageEvent_Specifications_Description::release_description() {
  // @@protoc_insertion_point(field_release:perfetto.protos.GpuRenderStageEvent.Specifications.Description.description)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.description_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void GpuRenderStageEvent_Specifications_Description::set_allocated_description(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.description_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.GpuRenderStageEvent.Specifications.Description.description)
}

// -------------------------------------------------------------------

// GpuRenderStageEvent_Specifications

// optional .perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec context_spec = 1;
inline bool GpuRenderStageEvent_Specifications::has_context_spec() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.context_spec_ != nullptr);
  return value;
}
inline void GpuRenderStageEvent_Specifications::clear_context_spec() {
  if (_impl_.context_spec_ != nullptr) _impl_.context_spec_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec& GpuRenderStageEvent_Specifications::_internal_context_spec() const {
  const ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* p = _impl_.context_spec_;
  return p != nullptr ? *p : reinterpret_cast<const ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec&>(
      ::perfetto::protos::_GpuRenderStageEvent_Specifications_ContextSpec_default_instance_);
}
inline const ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec& GpuRenderStageEvent_Specifications::context_spec() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.Specifications.context_spec)
  return _internal_context_spec();
}
inline void GpuRenderStageEvent_Specifications::unsafe_arena_set_allocated_context_spec(
    ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* context_spec) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.context_spec_);
  }
  _impl_.context_spec_ = context_spec;
  if (context_spec) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:perfetto.protos.GpuRenderStageEvent.Specifications.context_spec)
}
inline ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* GpuRenderStageEvent_Specifications::release_context_spec() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* temp = _impl_.context_spec_;
  _impl_.context_spec_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* GpuRenderStageEvent_Specifications::unsafe_arena_release_context_spec() {
  // @@protoc_insertion_point(field_release:perfetto.protos.GpuRenderStageEvent.Specifications.context_spec)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* temp = _impl_.context_spec_;
  _impl_.context_spec_ = nullptr;
  return temp;
}
inline ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* GpuRenderStageEvent_Specifications::_internal_mutable_context_spec() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.context_spec_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec>(GetArenaForAllocation());
    _impl_.context_spec_ = p;
  }
  return _impl_.context_spec_;
}
inline ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* GpuRenderStageEvent_Specifications::mutable_context_spec() {
  ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* _msg = _internal_mutable_context_spec();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.GpuRenderStageEvent.Specifications.context_spec)
  return _msg;
}
inline void GpuRenderStageEvent_Specifications::set_allocated_context_spec(::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* context_spec) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.context_spec_;
  }
  if (context_spec) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(context_spec);
    if (message_arena != submessage_arena) {
      context_spec = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, context_spec, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.context_spec_ = context_spec;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.GpuRenderStageEvent.Specifications.context_spec)
}

// repeated .perfetto.protos.GpuRenderStageEvent.Specifications.Description hw_queue = 2;
inline int GpuRenderStageEvent_Specifications::_internal_hw_queue_size() const {
  return _impl_.hw_queue_.size();
}
inline int GpuRenderStageEvent_Specifications::hw_queue_size() const {
  return _internal_hw_queue_size();
}
inline void GpuRenderStageEvent_Specifications::clear_hw_queue() {
  _internal_mutable_hw_queue()->Clear();
}
inline ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* GpuRenderStageEvent_Specifications::mutable_hw_queue(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.GpuRenderStageEvent.Specifications.hw_queue)
  return _internal_mutable_hw_queue()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description >*
GpuRenderStageEvent_Specifications::mutable_hw_queue() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.GpuRenderStageEvent.Specifications.hw_queue)
  return _internal_mutable_hw_queue();
}
inline const ::perfetto::protos::GpuRenderStageEvent_Specifications_Description& GpuRenderStageEvent_Specifications::_internal_hw_queue(int index) const {
  return _internal_hw_queue().Get(index);
}
inline const ::perfetto::protos::GpuRenderStageEvent_Specifications_Description& GpuRenderStageEvent_Specifications::hw_queue(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.Specifications.hw_queue)
  return _internal_hw_queue(index);
}
inline ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* GpuRenderStageEvent_Specifications::_internal_add_hw_queue() {
  return _internal_mutable_hw_queue()->Add();
}
inline ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* GpuRenderStageEvent_Specifications::add_hw_queue() {
  ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* _add = _internal_add_hw_queue();
  // @@protoc_insertion_point(field_add:perfetto.protos.GpuRenderStageEvent.Specifications.hw_queue)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description >&
GpuRenderStageEvent_Specifications::hw_queue() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.GpuRenderStageEvent.Specifications.hw_queue)
  return _internal_hw_queue();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::GpuRenderStageEvent_Specifications_Description>&
GpuRenderStageEvent_Specifications::_internal_hw_queue() const {
  return _impl_.hw_queue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::GpuRenderStageEvent_Specifications_Description>*
GpuRenderStageEvent_Specifications::_internal_mutable_hw_queue() {
  return &_impl_.hw_queue_;
}

// repeated .perfetto.protos.GpuRenderStageEvent.Specifications.Description stage = 3;
inline int GpuRenderStageEvent_Specifications::_internal_stage_size() const {
  return _impl_.stage_.size();
}
inline int GpuRenderStageEvent_Specifications::stage_size() const {
  return _internal_stage_size();
}
inline void GpuRenderStageEvent_Specifications::clear_stage() {
  _internal_mutable_stage()->Clear();
}
inline ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* GpuRenderStageEvent_Specifications::mutable_stage(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.GpuRenderStageEvent.Specifications.stage)
  return _internal_mutable_stage()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description >*
GpuRenderStageEvent_Specifications::mutable_stage() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.GpuRenderStageEvent.Specifications.stage)
  return _internal_mutable_stage();
}
inline const ::perfetto::protos::GpuRenderStageEvent_Specifications_Description& GpuRenderStageEvent_Specifications::_internal_stage(int index) const {
  return _internal_stage().Get(index);
}
inline const ::perfetto::protos::GpuRenderStageEvent_Specifications_Description& GpuRenderStageEvent_Specifications::stage(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.Specifications.stage)
  return _internal_stage(index);
}
inline ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* GpuRenderStageEvent_Specifications::_internal_add_stage() {
  return _internal_mutable_stage()->Add();
}
inline ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* GpuRenderStageEvent_Specifications::add_stage() {
  ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* _add = _internal_add_stage();
  // @@protoc_insertion_point(field_add:perfetto.protos.GpuRenderStageEvent.Specifications.stage)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description >&
GpuRenderStageEvent_Specifications::stage() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.GpuRenderStageEvent.Specifications.stage)
  return _internal_stage();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::GpuRenderStageEvent_Specifications_Description>&
GpuRenderStageEvent_Specifications::_internal_stage() const {
  return _impl_.stage_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::GpuRenderStageEvent_Specifications_Description>*
GpuRenderStageEvent_Specifications::_internal_mutable_stage() {
  return &_impl_.stage_;
}

// -------------------------------------------------------------------

// GpuRenderStageEvent

// optional uint64 event_id = 1;
inline bool GpuRenderStageEvent::has_event_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void GpuRenderStageEvent::clear_event_id() {
  _impl_.event_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t GpuRenderStageEvent::event_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.event_id)
  return _internal_event_id();
}
inline void GpuRenderStageEvent::set_event_id(::uint64_t value) {
  _internal_set_event_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.event_id)
}
inline ::uint64_t GpuRenderStageEvent::_internal_event_id() const {
  return _impl_.event_id_;
}
inline void GpuRenderStageEvent::_internal_set_event_id(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.event_id_ = value;
}

// optional uint64 duration = 2;
inline bool GpuRenderStageEvent::has_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void GpuRenderStageEvent::clear_duration() {
  _impl_.duration_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t GpuRenderStageEvent::duration() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.duration)
  return _internal_duration();
}
inline void GpuRenderStageEvent::set_duration(::uint64_t value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.duration)
}
inline ::uint64_t GpuRenderStageEvent::_internal_duration() const {
  return _impl_.duration_;
}
inline void GpuRenderStageEvent::_internal_set_duration(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.duration_ = value;
}

// optional uint64 hw_queue_iid = 13;
inline bool GpuRenderStageEvent::has_hw_queue_iid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void GpuRenderStageEvent::clear_hw_queue_iid() {
  _impl_.hw_queue_iid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::uint64_t GpuRenderStageEvent::hw_queue_iid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.hw_queue_iid)
  return _internal_hw_queue_iid();
}
inline void GpuRenderStageEvent::set_hw_queue_iid(::uint64_t value) {
  _internal_set_hw_queue_iid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.hw_queue_iid)
}
inline ::uint64_t GpuRenderStageEvent::_internal_hw_queue_iid() const {
  return _impl_.hw_queue_iid_;
}
inline void GpuRenderStageEvent::_internal_set_hw_queue_iid(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.hw_queue_iid_ = value;
}

// optional uint64 stage_iid = 14;
inline bool GpuRenderStageEvent::has_stage_iid() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void GpuRenderStageEvent::clear_stage_iid() {
  _impl_.stage_iid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::uint64_t GpuRenderStageEvent::stage_iid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.stage_iid)
  return _internal_stage_iid();
}
inline void GpuRenderStageEvent::set_stage_iid(::uint64_t value) {
  _internal_set_stage_iid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.stage_iid)
}
inline ::uint64_t GpuRenderStageEvent::_internal_stage_iid() const {
  return _impl_.stage_iid_;
}
inline void GpuRenderStageEvent::_internal_set_stage_iid(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.stage_iid_ = value;
}

// optional int32 gpu_id = 11;
inline bool GpuRenderStageEvent::has_gpu_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void GpuRenderStageEvent::clear_gpu_id() {
  _impl_.gpu_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::int32_t GpuRenderStageEvent::gpu_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.gpu_id)
  return _internal_gpu_id();
}
inline void GpuRenderStageEvent::set_gpu_id(::int32_t value) {
  _internal_set_gpu_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.gpu_id)
}
inline ::int32_t GpuRenderStageEvent::_internal_gpu_id() const {
  return _impl_.gpu_id_;
}
inline void GpuRenderStageEvent::_internal_set_gpu_id(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.gpu_id_ = value;
}

// optional uint64 context = 5;
inline bool GpuRenderStageEvent::has_context() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void GpuRenderStageEvent::clear_context() {
  _impl_.context_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint64_t GpuRenderStageEvent::context() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.context)
  return _internal_context();
}
inline void GpuRenderStageEvent::set_context(::uint64_t value) {
  _internal_set_context(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.context)
}
inline ::uint64_t GpuRenderStageEvent::_internal_context() const {
  return _impl_.context_;
}
inline void GpuRenderStageEvent::_internal_set_context(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.context_ = value;
}

// optional uint64 render_target_handle = 8;
inline bool GpuRenderStageEvent::has_render_target_handle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void GpuRenderStageEvent::clear_render_target_handle() {
  _impl_.render_target_handle_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint64_t GpuRenderStageEvent::render_target_handle() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.render_target_handle)
  return _internal_render_target_handle();
}
inline void GpuRenderStageEvent::set_render_target_handle(::uint64_t value) {
  _internal_set_render_target_handle(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.render_target_handle)
}
inline ::uint64_t GpuRenderStageEvent::_internal_render_target_handle() const {
  return _impl_.render_target_handle_;
}
inline void GpuRenderStageEvent::_internal_set_render_target_handle(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.render_target_handle_ = value;
}

// optional uint32 submission_id = 10;
inline bool GpuRenderStageEvent::has_submission_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void GpuRenderStageEvent::clear_submission_id() {
  _impl_.submission_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t GpuRenderStageEvent::submission_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.submission_id)
  return _internal_submission_id();
}
inline void GpuRenderStageEvent::set_submission_id(::uint32_t value) {
  _internal_set_submission_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.submission_id)
}
inline ::uint32_t GpuRenderStageEvent::_internal_submission_id() const {
  return _impl_.submission_id_;
}
inline void GpuRenderStageEvent::_internal_set_submission_id(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.submission_id_ = value;
}

// repeated .perfetto.protos.GpuRenderStageEvent.ExtraData extra_data = 6;
inline int GpuRenderStageEvent::_internal_extra_data_size() const {
  return _impl_.extra_data_.size();
}
inline int GpuRenderStageEvent::extra_data_size() const {
  return _internal_extra_data_size();
}
inline void GpuRenderStageEvent::clear_extra_data() {
  _internal_mutable_extra_data()->Clear();
}
inline ::perfetto::protos::GpuRenderStageEvent_ExtraData* GpuRenderStageEvent::mutable_extra_data(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.GpuRenderStageEvent.extra_data)
  return _internal_mutable_extra_data()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_ExtraData >*
GpuRenderStageEvent::mutable_extra_data() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.GpuRenderStageEvent.extra_data)
  return _internal_mutable_extra_data();
}
inline const ::perfetto::protos::GpuRenderStageEvent_ExtraData& GpuRenderStageEvent::_internal_extra_data(int index) const {
  return _internal_extra_data().Get(index);
}
inline const ::perfetto::protos::GpuRenderStageEvent_ExtraData& GpuRenderStageEvent::extra_data(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.extra_data)
  return _internal_extra_data(index);
}
inline ::perfetto::protos::GpuRenderStageEvent_ExtraData* GpuRenderStageEvent::_internal_add_extra_data() {
  return _internal_mutable_extra_data()->Add();
}
inline ::perfetto::protos::GpuRenderStageEvent_ExtraData* GpuRenderStageEvent::add_extra_data() {
  ::perfetto::protos::GpuRenderStageEvent_ExtraData* _add = _internal_add_extra_data();
  // @@protoc_insertion_point(field_add:perfetto.protos.GpuRenderStageEvent.extra_data)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::GpuRenderStageEvent_ExtraData >&
GpuRenderStageEvent::extra_data() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.GpuRenderStageEvent.extra_data)
  return _internal_extra_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::GpuRenderStageEvent_ExtraData>&
GpuRenderStageEvent::_internal_extra_data() const {
  return _impl_.extra_data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::perfetto::protos::GpuRenderStageEvent_ExtraData>*
GpuRenderStageEvent::_internal_mutable_extra_data() {
  return &_impl_.extra_data_;
}

// optional uint64 render_pass_handle = 9;
inline bool GpuRenderStageEvent::has_render_pass_handle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void GpuRenderStageEvent::clear_render_pass_handle() {
  _impl_.render_pass_handle_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint64_t GpuRenderStageEvent::render_pass_handle() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.render_pass_handle)
  return _internal_render_pass_handle();
}
inline void GpuRenderStageEvent::set_render_pass_handle(::uint64_t value) {
  _internal_set_render_pass_handle(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.render_pass_handle)
}
inline ::uint64_t GpuRenderStageEvent::_internal_render_pass_handle() const {
  return _impl_.render_pass_handle_;
}
inline void GpuRenderStageEvent::_internal_set_render_pass_handle(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.render_pass_handle_ = value;
}

// repeated uint64 render_subpass_index_mask = 15;
inline int GpuRenderStageEvent::_internal_render_subpass_index_mask_size() const {
  return _impl_.render_subpass_index_mask_.size();
}
inline int GpuRenderStageEvent::render_subpass_index_mask_size() const {
  return _internal_render_subpass_index_mask_size();
}
inline void GpuRenderStageEvent::clear_render_subpass_index_mask() {
  _internal_mutable_render_subpass_index_mask()->Clear();
}
inline ::uint64_t GpuRenderStageEvent::render_subpass_index_mask(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.render_subpass_index_mask)
  return _internal_render_subpass_index_mask(index);
}
inline void GpuRenderStageEvent::set_render_subpass_index_mask(int index, ::uint64_t value) {
  _internal_mutable_render_subpass_index_mask()->Set(index, value);
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.render_subpass_index_mask)
}
inline void GpuRenderStageEvent::add_render_subpass_index_mask(::uint64_t value) {
  _internal_add_render_subpass_index_mask(value);
  // @@protoc_insertion_point(field_add:perfetto.protos.GpuRenderStageEvent.render_subpass_index_mask)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>& GpuRenderStageEvent::render_subpass_index_mask() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.GpuRenderStageEvent.render_subpass_index_mask)
  return _internal_render_subpass_index_mask();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>* GpuRenderStageEvent::mutable_render_subpass_index_mask() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.GpuRenderStageEvent.render_subpass_index_mask)
  return _internal_mutable_render_subpass_index_mask();
}

inline ::uint64_t GpuRenderStageEvent::_internal_render_subpass_index_mask(int index) const {
  return _internal_render_subpass_index_mask().Get(index);
}
inline void GpuRenderStageEvent::_internal_add_render_subpass_index_mask(::uint64_t value) {
  _internal_mutable_render_subpass_index_mask()->Add(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>& GpuRenderStageEvent::_internal_render_subpass_index_mask() const {
  return _impl_.render_subpass_index_mask_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>* GpuRenderStageEvent::_internal_mutable_render_subpass_index_mask() {
  return &_impl_.render_subpass_index_mask_;
}

// optional uint64 command_buffer_handle = 12;
inline bool GpuRenderStageEvent::has_command_buffer_handle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void GpuRenderStageEvent::clear_command_buffer_handle() {
  _impl_.command_buffer_handle_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint64_t GpuRenderStageEvent::command_buffer_handle() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.command_buffer_handle)
  return _internal_command_buffer_handle();
}
inline void GpuRenderStageEvent::set_command_buffer_handle(::uint64_t value) {
  _internal_set_command_buffer_handle(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.command_buffer_handle)
}
inline ::uint64_t GpuRenderStageEvent::_internal_command_buffer_handle() const {
  return _impl_.command_buffer_handle_;
}
inline void GpuRenderStageEvent::_internal_set_command_buffer_handle(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.command_buffer_handle_ = value;
}

// optional .perfetto.protos.GpuRenderStageEvent.Specifications specifications = 7 [deprecated = true];
inline bool GpuRenderStageEvent::has_specifications() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.specifications_ != nullptr);
  return value;
}
inline void GpuRenderStageEvent::clear_specifications() {
  if (_impl_.specifications_ != nullptr) _impl_.specifications_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::perfetto::protos::GpuRenderStageEvent_Specifications& GpuRenderStageEvent::_internal_specifications() const {
  const ::perfetto::protos::GpuRenderStageEvent_Specifications* p = _impl_.specifications_;
  return p != nullptr ? *p : reinterpret_cast<const ::perfetto::protos::GpuRenderStageEvent_Specifications&>(
      ::perfetto::protos::_GpuRenderStageEvent_Specifications_default_instance_);
}
inline const ::perfetto::protos::GpuRenderStageEvent_Specifications& GpuRenderStageEvent::specifications() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.specifications)
  return _internal_specifications();
}
inline void GpuRenderStageEvent::unsafe_arena_set_allocated_specifications(
    ::perfetto::protos::GpuRenderStageEvent_Specifications* specifications) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.specifications_);
  }
  _impl_.specifications_ = specifications;
  if (specifications) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:perfetto.protos.GpuRenderStageEvent.specifications)
}
inline ::perfetto::protos::GpuRenderStageEvent_Specifications* GpuRenderStageEvent::release_specifications() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::perfetto::protos::GpuRenderStageEvent_Specifications* temp = _impl_.specifications_;
  _impl_.specifications_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::perfetto::protos::GpuRenderStageEvent_Specifications* GpuRenderStageEvent::unsafe_arena_release_specifications() {
  // @@protoc_insertion_point(field_release:perfetto.protos.GpuRenderStageEvent.specifications)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::perfetto::protos::GpuRenderStageEvent_Specifications* temp = _impl_.specifications_;
  _impl_.specifications_ = nullptr;
  return temp;
}
inline ::perfetto::protos::GpuRenderStageEvent_Specifications* GpuRenderStageEvent::_internal_mutable_specifications() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.specifications_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::GpuRenderStageEvent_Specifications>(GetArenaForAllocation());
    _impl_.specifications_ = p;
  }
  return _impl_.specifications_;
}
inline ::perfetto::protos::GpuRenderStageEvent_Specifications* GpuRenderStageEvent::mutable_specifications() {
  ::perfetto::protos::GpuRenderStageEvent_Specifications* _msg = _internal_mutable_specifications();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.GpuRenderStageEvent.specifications)
  return _msg;
}
inline void GpuRenderStageEvent::set_allocated_specifications(::perfetto::protos::GpuRenderStageEvent_Specifications* specifications) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.specifications_;
  }
  if (specifications) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(specifications);
    if (message_arena != submessage_arena) {
      specifications = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, specifications, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.specifications_ = specifications;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.GpuRenderStageEvent.specifications)
}

// optional int32 hw_queue_id = 3 [deprecated = true];
inline bool GpuRenderStageEvent::has_hw_queue_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void GpuRenderStageEvent::clear_hw_queue_id() {
  _impl_.hw_queue_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t GpuRenderStageEvent::hw_queue_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.hw_queue_id)
  return _internal_hw_queue_id();
}
inline void GpuRenderStageEvent::set_hw_queue_id(::int32_t value) {
  _internal_set_hw_queue_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.hw_queue_id)
}
inline ::int32_t GpuRenderStageEvent::_internal_hw_queue_id() const {
  return _impl_.hw_queue_id_;
}
inline void GpuRenderStageEvent::_internal_set_hw_queue_id(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.hw_queue_id_ = value;
}

// optional int32 stage_id = 4 [deprecated = true];
inline bool GpuRenderStageEvent::has_stage_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void GpuRenderStageEvent::clear_stage_id() {
  _impl_.stage_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t GpuRenderStageEvent::stage_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.GpuRenderStageEvent.stage_id)
  return _internal_stage_id();
}
inline void GpuRenderStageEvent::set_stage_id(::int32_t value) {
  _internal_set_stage_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.GpuRenderStageEvent.stage_id)
}
inline ::int32_t GpuRenderStageEvent::_internal_stage_id() const {
  return _impl_.stage_id_;
}
inline void GpuRenderStageEvent::_internal_set_stage_id(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.stage_id_ = value;
}

// -------------------------------------------------------------------

// InternedGraphicsContext

// optional uint64 iid = 1;
inline bool InternedGraphicsContext::has_iid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void InternedGraphicsContext::clear_iid() {
  _impl_.iid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t InternedGraphicsContext::iid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.InternedGraphicsContext.iid)
  return _internal_iid();
}
inline void InternedGraphicsContext::set_iid(::uint64_t value) {
  _internal_set_iid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.InternedGraphicsContext.iid)
}
inline ::uint64_t InternedGraphicsContext::_internal_iid() const {
  return _impl_.iid_;
}
inline void InternedGraphicsContext::_internal_set_iid(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.iid_ = value;
}

// optional int32 pid = 2;
inline bool InternedGraphicsContext::has_pid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void InternedGraphicsContext::clear_pid() {
  _impl_.pid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t InternedGraphicsContext::pid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.InternedGraphicsContext.pid)
  return _internal_pid();
}
inline void InternedGraphicsContext::set_pid(::int32_t value) {
  _internal_set_pid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.InternedGraphicsContext.pid)
}
inline ::int32_t InternedGraphicsContext::_internal_pid() const {
  return _impl_.pid_;
}
inline void InternedGraphicsContext::_internal_set_pid(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.pid_ = value;
}

// optional .perfetto.protos.InternedGraphicsContext.Api api = 3;
inline bool InternedGraphicsContext::has_api() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void InternedGraphicsContext::clear_api() {
  _impl_.api_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::perfetto::protos::InternedGraphicsContext_Api InternedGraphicsContext::api() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.InternedGraphicsContext.api)
  return _internal_api();
}
inline void InternedGraphicsContext::set_api(::perfetto::protos::InternedGraphicsContext_Api value) {
   _internal_set_api(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.InternedGraphicsContext.api)
}
inline ::perfetto::protos::InternedGraphicsContext_Api InternedGraphicsContext::_internal_api() const {
  return static_cast<::perfetto::protos::InternedGraphicsContext_Api>(_impl_.api_);
}
inline void InternedGraphicsContext::_internal_set_api(::perfetto::protos::InternedGraphicsContext_Api value) {
  assert(::perfetto::protos::InternedGraphicsContext_Api_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.api_ = value;
}

// -------------------------------------------------------------------

// InternedGpuRenderStageSpecification

// optional uint64 iid = 1;
inline bool InternedGpuRenderStageSpecification::has_iid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void InternedGpuRenderStageSpecification::clear_iid() {
  _impl_.iid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t InternedGpuRenderStageSpecification::iid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.InternedGpuRenderStageSpecification.iid)
  return _internal_iid();
}
inline void InternedGpuRenderStageSpecification::set_iid(::uint64_t value) {
  _internal_set_iid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.InternedGpuRenderStageSpecification.iid)
}
inline ::uint64_t InternedGpuRenderStageSpecification::_internal_iid() const {
  return _impl_.iid_;
}
inline void InternedGpuRenderStageSpecification::_internal_set_iid(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.iid_ = value;
}

// optional string name = 2;
inline bool InternedGpuRenderStageSpecification::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void InternedGpuRenderStageSpecification::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& InternedGpuRenderStageSpecification::name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.InternedGpuRenderStageSpecification.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InternedGpuRenderStageSpecification::set_name(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:perfetto.protos.InternedGpuRenderStageSpecification.name)
}
inline std::string* InternedGpuRenderStageSpecification::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.InternedGpuRenderStageSpecification.name)
  return _s;
}
inline const std::string& InternedGpuRenderStageSpecification::_internal_name() const {
  return _impl_.name_.Get();
}
inline void InternedGpuRenderStageSpecification::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* InternedGpuRenderStageSpecification::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* InternedGpuRenderStageSpecification::release_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.InternedGpuRenderStageSpecification.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void InternedGpuRenderStageSpecification::set_allocated_name(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.InternedGpuRenderStageSpecification.name)
}

// optional string description = 3;
inline bool InternedGpuRenderStageSpecification::has_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void InternedGpuRenderStageSpecification::clear_description() {
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& InternedGpuRenderStageSpecification::description() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.InternedGpuRenderStageSpecification.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InternedGpuRenderStageSpecification::set_description(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:perfetto.protos.InternedGpuRenderStageSpecification.description)
}
inline std::string* InternedGpuRenderStageSpecification::mutable_description() {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.InternedGpuRenderStageSpecification.description)
  return _s;
}
inline const std::string& InternedGpuRenderStageSpecification::_internal_description() const {
  return _impl_.description_.Get();
}
inline void InternedGpuRenderStageSpecification::_internal_set_description(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;


  _impl_.description_.Set(value, GetArenaForAllocation());
}
inline std::string* InternedGpuRenderStageSpecification::_internal_mutable_description() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.description_.Mutable( GetArenaForAllocation());
}
inline std::string* InternedGpuRenderStageSpecification::release_description() {
  // @@protoc_insertion_point(field_release:perfetto.protos.InternedGpuRenderStageSpecification.description)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.description_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void InternedGpuRenderStageSpecification::set_allocated_description(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.description_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.InternedGpuRenderStageSpecification.description)
}

// optional .perfetto.protos.InternedGpuRenderStageSpecification.RenderStageCategory category = 4;
inline bool InternedGpuRenderStageSpecification::has_category() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void InternedGpuRenderStageSpecification::clear_category() {
  _impl_.category_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory InternedGpuRenderStageSpecification::category() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.InternedGpuRenderStageSpecification.category)
  return _internal_category();
}
inline void InternedGpuRenderStageSpecification::set_category(::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory value) {
   _internal_set_category(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.InternedGpuRenderStageSpecification.category)
}
inline ::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory InternedGpuRenderStageSpecification::_internal_category() const {
  return static_cast<::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory>(_impl_.category_);
}
inline void InternedGpuRenderStageSpecification::_internal_set_category(::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory value) {
  assert(::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.category_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto


PROTOBUF_NAMESPACE_OPEN

template <>
struct is_proto_enum<::perfetto::protos::InternedGraphicsContext_Api> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::perfetto::protos::InternedGraphicsContext_Api>() {
  return ::perfetto::protos::InternedGraphicsContext_Api_descriptor();
}
template <>
struct is_proto_enum<::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory>() {
  return ::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto_2epb_2eh
