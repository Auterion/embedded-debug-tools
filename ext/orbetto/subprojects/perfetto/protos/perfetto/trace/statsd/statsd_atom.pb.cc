// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/statsd/statsd_atom.proto

#include "protos/perfetto/trace/statsd/statsd_atom.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace perfetto {
namespace protos {
template <typename>
PROTOBUF_CONSTEXPR Atom::Atom(
    ::_pbi::ConstantInitialized) {}
struct AtomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AtomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AtomDefaultTypeInternal() {}
  union {
    Atom _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AtomDefaultTypeInternal _Atom_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR StatsdAtom::StatsdAtom(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.atom_)*/{}
  , /*decltype(_impl_.timestamp_nanos_)*/ {}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StatsdAtomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatsdAtomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatsdAtomDefaultTypeInternal() {}
  union {
    StatsdAtom _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatsdAtomDefaultTypeInternal _StatsdAtom_default_instance_;
}  // namespace protos
}  // namespace perfetto
static ::_pb::Metadata file_level_metadata_protos_2fperfetto_2ftrace_2fstatsd_2fstatsd_5fatom_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_protos_2fperfetto_2ftrace_2fstatsd_2fstatsd_5fatom_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_protos_2fperfetto_2ftrace_2fstatsd_2fstatsd_5fatom_2eproto = nullptr;
const ::uint32_t TableStruct_protos_2fperfetto_2ftrace_2fstatsd_2fstatsd_5fatom_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::Atom, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::StatsdAtom, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::StatsdAtom, _impl_.atom_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::StatsdAtom, _impl_.timestamp_nanos_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::perfetto::protos::Atom)},
        { 8, -1, -1, sizeof(::perfetto::protos::StatsdAtom)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::perfetto::protos::_Atom_default_instance_._instance,
    &::perfetto::protos::_StatsdAtom_default_instance_._instance,
};
const char descriptor_table_protodef_protos_2fperfetto_2ftrace_2fstatsd_2fstatsd_5fatom_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n.protos/perfetto/trace/statsd/statsd_at"
    "om.proto\022\017perfetto.protos\"\006\n\004Atom\"J\n\nSta"
    "tsdAtom\022#\n\004atom\030\001 \003(\0132\025.perfetto.protos."
    "Atom\022\027\n\017timestamp_nanos\030\002 \003(\003"
};
static ::absl::once_flag descriptor_table_protos_2fperfetto_2ftrace_2fstatsd_2fstatsd_5fatom_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_protos_2fperfetto_2ftrace_2fstatsd_2fstatsd_5fatom_2eproto = {
    false,
    false,
    149,
    descriptor_table_protodef_protos_2fperfetto_2ftrace_2fstatsd_2fstatsd_5fatom_2eproto,
    "protos/perfetto/trace/statsd/statsd_atom.proto",
    &descriptor_table_protos_2fperfetto_2ftrace_2fstatsd_2fstatsd_5fatom_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_protos_2fperfetto_2ftrace_2fstatsd_2fstatsd_5fatom_2eproto::offsets,
    file_level_metadata_protos_2fperfetto_2ftrace_2fstatsd_2fstatsd_5fatom_2eproto,
    file_level_enum_descriptors_protos_2fperfetto_2ftrace_2fstatsd_2fstatsd_5fatom_2eproto,
    file_level_service_descriptors_protos_2fperfetto_2ftrace_2fstatsd_2fstatsd_5fatom_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_protos_2fperfetto_2ftrace_2fstatsd_2fstatsd_5fatom_2eproto_getter() {
  return &descriptor_table_protos_2fperfetto_2ftrace_2fstatsd_2fstatsd_5fatom_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_protos_2fperfetto_2ftrace_2fstatsd_2fstatsd_5fatom_2eproto(&descriptor_table_protos_2fperfetto_2ftrace_2fstatsd_2fstatsd_5fatom_2eproto);
namespace perfetto {
namespace protos {
// ===================================================================

class Atom::_Internal {
 public:
};

Atom::Atom(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.Atom)
}
Atom::Atom(const Atom& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  Atom* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.Atom)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Atom::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Atom::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Atom::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fperfetto_2ftrace_2fstatsd_2fstatsd_5fatom_2eproto_getter, &descriptor_table_protos_2fperfetto_2ftrace_2fstatsd_2fstatsd_5fatom_2eproto_once,
      file_level_metadata_protos_2fperfetto_2ftrace_2fstatsd_2fstatsd_5fatom_2eproto[0]);
}
// ===================================================================

class StatsdAtom::_Internal {
 public:
};

StatsdAtom::StatsdAtom(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.StatsdAtom)
}
StatsdAtom::StatsdAtom(const StatsdAtom& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StatsdAtom* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.atom_){from._impl_.atom_}
    , decltype(_impl_.timestamp_nanos_) { from._impl_.timestamp_nanos_ }

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.StatsdAtom)
}

inline void StatsdAtom::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.atom_){arena}
    , decltype(_impl_.timestamp_nanos_) { arena }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StatsdAtom::~StatsdAtom() {
  // @@protoc_insertion_point(destructor:perfetto.protos.StatsdAtom)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StatsdAtom::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_atom()->~RepeatedPtrField();
  _impl_.timestamp_nanos_.~RepeatedField();
}

void StatsdAtom::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StatsdAtom::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.StatsdAtom)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_atom()->Clear();
  _internal_mutable_timestamp_nanos()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatsdAtom::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .perfetto.protos.Atom atom = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_atom(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated int64 timestamp_nanos = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_timestamp_nanos(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<16>(ptr));
        } else if (static_cast<::uint8_t>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_timestamp_nanos(), ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* StatsdAtom::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.StatsdAtom)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .perfetto.protos.Atom atom = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_atom_size()); i < n; i++) {
    const auto& repfield = this->_internal_atom(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated int64 timestamp_nanos = 2;
  for (int i = 0, n = this->_internal_timestamp_nanos_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        2, this->_internal_timestamp_nanos(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.StatsdAtom)
  return target;
}

::size_t StatsdAtom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.StatsdAtom)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .perfetto.protos.Atom atom = 1;
  total_size += 1UL * this->_internal_atom_size();
  for (const auto& msg : this->_internal_atom()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated int64 timestamp_nanos = 2;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_timestamp_nanos())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_timestamp_nanos_size());
    ;
    total_size += tag_size + data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StatsdAtom::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StatsdAtom::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StatsdAtom::GetClassData() const { return &_class_data_; }


void StatsdAtom::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StatsdAtom*>(&to_msg);
  auto& from = static_cast<const StatsdAtom&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.StatsdAtom)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_atom()->MergeFrom(from._internal_atom());
  _this->_impl_.timestamp_nanos_.MergeFrom(from._impl_.timestamp_nanos_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StatsdAtom::CopyFrom(const StatsdAtom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.StatsdAtom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatsdAtom::IsInitialized() const {
  return true;
}

void StatsdAtom::InternalSwap(StatsdAtom* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_atom()->InternalSwap(other->_internal_mutable_atom());
  _impl_.timestamp_nanos_.InternalSwap(&other->_impl_.timestamp_nanos_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StatsdAtom::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fperfetto_2ftrace_2fstatsd_2fstatsd_5fatom_2eproto_getter, &descriptor_table_protos_2fperfetto_2ftrace_2fstatsd_2fstatsd_5fatom_2eproto_once,
      file_level_metadata_protos_2fperfetto_2ftrace_2fstatsd_2fstatsd_5fatom_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::perfetto::protos::Atom*
Arena::CreateMaybeMessage< ::perfetto::protos::Atom >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::Atom >(arena);
}
template<> PROTOBUF_NOINLINE ::perfetto::protos::StatsdAtom*
Arena::CreateMaybeMessage< ::perfetto::protos::StatsdAtom >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::StatsdAtom >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
