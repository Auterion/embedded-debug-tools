// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/ftrace/mali.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fftrace_2fmali_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fftrace_2fmali_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2ftrace_2fftrace_2fmali_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fmali_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_protos_2fperfetto_2ftrace_2fftrace_2fmali_2eproto;
namespace perfetto {
namespace protos {
class MaliMaliCSFINTERRUPTENDFtraceEvent;
struct MaliMaliCSFINTERRUPTENDFtraceEventDefaultTypeInternal;
extern MaliMaliCSFINTERRUPTENDFtraceEventDefaultTypeInternal _MaliMaliCSFINTERRUPTENDFtraceEvent_default_instance_;
class MaliMaliCSFINTERRUPTSTARTFtraceEvent;
struct MaliMaliCSFINTERRUPTSTARTFtraceEventDefaultTypeInternal;
extern MaliMaliCSFINTERRUPTSTARTFtraceEventDefaultTypeInternal _MaliMaliCSFINTERRUPTSTARTFtraceEvent_default_instance_;
class MaliMaliKCPUCQSSETFtraceEvent;
struct MaliMaliKCPUCQSSETFtraceEventDefaultTypeInternal;
extern MaliMaliKCPUCQSSETFtraceEventDefaultTypeInternal _MaliMaliKCPUCQSSETFtraceEvent_default_instance_;
class MaliMaliKCPUCQSWAITENDFtraceEvent;
struct MaliMaliKCPUCQSWAITENDFtraceEventDefaultTypeInternal;
extern MaliMaliKCPUCQSWAITENDFtraceEventDefaultTypeInternal _MaliMaliKCPUCQSWAITENDFtraceEvent_default_instance_;
class MaliMaliKCPUCQSWAITSTARTFtraceEvent;
struct MaliMaliKCPUCQSWAITSTARTFtraceEventDefaultTypeInternal;
extern MaliMaliKCPUCQSWAITSTARTFtraceEventDefaultTypeInternal _MaliMaliKCPUCQSWAITSTARTFtraceEvent_default_instance_;
class MaliMaliKCPUFENCESIGNALFtraceEvent;
struct MaliMaliKCPUFENCESIGNALFtraceEventDefaultTypeInternal;
extern MaliMaliKCPUFENCESIGNALFtraceEventDefaultTypeInternal _MaliMaliKCPUFENCESIGNALFtraceEvent_default_instance_;
class MaliMaliKCPUFENCEWAITENDFtraceEvent;
struct MaliMaliKCPUFENCEWAITENDFtraceEventDefaultTypeInternal;
extern MaliMaliKCPUFENCEWAITENDFtraceEventDefaultTypeInternal _MaliMaliKCPUFENCEWAITENDFtraceEvent_default_instance_;
class MaliMaliKCPUFENCEWAITSTARTFtraceEvent;
struct MaliMaliKCPUFENCEWAITSTARTFtraceEventDefaultTypeInternal;
extern MaliMaliKCPUFENCEWAITSTARTFtraceEventDefaultTypeInternal _MaliMaliKCPUFENCEWAITSTARTFtraceEvent_default_instance_;
class MaliTracingMarkWriteFtraceEvent;
struct MaliTracingMarkWriteFtraceEventDefaultTypeInternal;
extern MaliTracingMarkWriteFtraceEventDefaultTypeInternal _MaliTracingMarkWriteFtraceEvent_default_instance_;
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template <>
::perfetto::protos::MaliMaliCSFINTERRUPTENDFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::MaliMaliCSFINTERRUPTENDFtraceEvent>(Arena*);
template <>
::perfetto::protos::MaliMaliCSFINTERRUPTSTARTFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::MaliMaliCSFINTERRUPTSTARTFtraceEvent>(Arena*);
template <>
::perfetto::protos::MaliMaliKCPUCQSSETFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::MaliMaliKCPUCQSSETFtraceEvent>(Arena*);
template <>
::perfetto::protos::MaliMaliKCPUCQSWAITENDFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::MaliMaliKCPUCQSWAITENDFtraceEvent>(Arena*);
template <>
::perfetto::protos::MaliMaliKCPUCQSWAITSTARTFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::MaliMaliKCPUCQSWAITSTARTFtraceEvent>(Arena*);
template <>
::perfetto::protos::MaliMaliKCPUFENCESIGNALFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::MaliMaliKCPUFENCESIGNALFtraceEvent>(Arena*);
template <>
::perfetto::protos::MaliMaliKCPUFENCEWAITENDFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::MaliMaliKCPUFENCEWAITENDFtraceEvent>(Arena*);
template <>
::perfetto::protos::MaliMaliKCPUFENCEWAITSTARTFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::MaliMaliKCPUFENCEWAITSTARTFtraceEvent>(Arena*);
template <>
::perfetto::protos::MaliTracingMarkWriteFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::MaliTracingMarkWriteFtraceEvent>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace perfetto {
namespace protos {

// ===================================================================


// -------------------------------------------------------------------

class MaliTracingMarkWriteFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.MaliTracingMarkWriteFtraceEvent) */ {
 public:
  inline MaliTracingMarkWriteFtraceEvent() : MaliTracingMarkWriteFtraceEvent(nullptr) {}
  ~MaliTracingMarkWriteFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MaliTracingMarkWriteFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MaliTracingMarkWriteFtraceEvent(const MaliTracingMarkWriteFtraceEvent& from);
  MaliTracingMarkWriteFtraceEvent(MaliTracingMarkWriteFtraceEvent&& from) noexcept
    : MaliTracingMarkWriteFtraceEvent() {
    *this = ::std::move(from);
  }

  inline MaliTracingMarkWriteFtraceEvent& operator=(const MaliTracingMarkWriteFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MaliTracingMarkWriteFtraceEvent& operator=(MaliTracingMarkWriteFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MaliTracingMarkWriteFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MaliTracingMarkWriteFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const MaliTracingMarkWriteFtraceEvent*>(
               &_MaliTracingMarkWriteFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MaliTracingMarkWriteFtraceEvent& a, MaliTracingMarkWriteFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MaliTracingMarkWriteFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MaliTracingMarkWriteFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MaliTracingMarkWriteFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MaliTracingMarkWriteFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MaliTracingMarkWriteFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MaliTracingMarkWriteFtraceEvent& from) {
    MaliTracingMarkWriteFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MaliTracingMarkWriteFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.MaliTracingMarkWriteFtraceEvent";
  }
  protected:
  explicit MaliTracingMarkWriteFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kPidFieldNumber = 2,
    kTypeFieldNumber = 3,
    kValueFieldNumber = 4,
  };
  // optional string name = 1;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional int32 pid = 2;
  bool has_pid() const;
  void clear_pid() ;
  ::int32_t pid() const;
  void set_pid(::int32_t value);

  private:
  ::int32_t _internal_pid() const;
  void _internal_set_pid(::int32_t value);

  public:
  // optional uint32 type = 3;
  bool has_type() const;
  void clear_type() ;
  ::uint32_t type() const;
  void set_type(::uint32_t value);

  private:
  ::uint32_t _internal_type() const;
  void _internal_set_type(::uint32_t value);

  public:
  // optional int32 value = 4;
  bool has_value() const;
  void clear_value() ;
  ::int32_t value() const;
  void set_value(::int32_t value);

  private:
  ::int32_t _internal_value() const;
  void _internal_set_value(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.MaliTracingMarkWriteFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::int32_t pid_;
    ::uint32_t type_;
    ::int32_t value_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fmali_2eproto;
};// -------------------------------------------------------------------

class MaliMaliKCPUCQSSETFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.MaliMaliKCPUCQSSETFtraceEvent) */ {
 public:
  inline MaliMaliKCPUCQSSETFtraceEvent() : MaliMaliKCPUCQSSETFtraceEvent(nullptr) {}
  ~MaliMaliKCPUCQSSETFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MaliMaliKCPUCQSSETFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MaliMaliKCPUCQSSETFtraceEvent(const MaliMaliKCPUCQSSETFtraceEvent& from);
  MaliMaliKCPUCQSSETFtraceEvent(MaliMaliKCPUCQSSETFtraceEvent&& from) noexcept
    : MaliMaliKCPUCQSSETFtraceEvent() {
    *this = ::std::move(from);
  }

  inline MaliMaliKCPUCQSSETFtraceEvent& operator=(const MaliMaliKCPUCQSSETFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MaliMaliKCPUCQSSETFtraceEvent& operator=(MaliMaliKCPUCQSSETFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MaliMaliKCPUCQSSETFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MaliMaliKCPUCQSSETFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const MaliMaliKCPUCQSSETFtraceEvent*>(
               &_MaliMaliKCPUCQSSETFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MaliMaliKCPUCQSSETFtraceEvent& a, MaliMaliKCPUCQSSETFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MaliMaliKCPUCQSSETFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MaliMaliKCPUCQSSETFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MaliMaliKCPUCQSSETFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MaliMaliKCPUCQSSETFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MaliMaliKCPUCQSSETFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MaliMaliKCPUCQSSETFtraceEvent& from) {
    MaliMaliKCPUCQSSETFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MaliMaliKCPUCQSSETFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.MaliMaliKCPUCQSSETFtraceEvent";
  }
  protected:
  explicit MaliMaliKCPUCQSSETFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoVal1FieldNumber = 2,
    kIdFieldNumber = 1,
    kKctxIdFieldNumber = 4,
    kInfoVal2FieldNumber = 3,
    kKctxTgidFieldNumber = 5,
  };
  // optional uint64 info_val1 = 2;
  bool has_info_val1() const;
  void clear_info_val1() ;
  ::uint64_t info_val1() const;
  void set_info_val1(::uint64_t value);

  private:
  ::uint64_t _internal_info_val1() const;
  void _internal_set_info_val1(::uint64_t value);

  public:
  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // optional uint32 kctx_id = 4;
  bool has_kctx_id() const;
  void clear_kctx_id() ;
  ::uint32_t kctx_id() const;
  void set_kctx_id(::uint32_t value);

  private:
  ::uint32_t _internal_kctx_id() const;
  void _internal_set_kctx_id(::uint32_t value);

  public:
  // optional uint64 info_val2 = 3;
  bool has_info_val2() const;
  void clear_info_val2() ;
  ::uint64_t info_val2() const;
  void set_info_val2(::uint64_t value);

  private:
  ::uint64_t _internal_info_val2() const;
  void _internal_set_info_val2(::uint64_t value);

  public:
  // optional int32 kctx_tgid = 5;
  bool has_kctx_tgid() const;
  void clear_kctx_tgid() ;
  ::int32_t kctx_tgid() const;
  void set_kctx_tgid(::int32_t value);

  private:
  ::int32_t _internal_kctx_tgid() const;
  void _internal_set_kctx_tgid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.MaliMaliKCPUCQSSETFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::uint64_t info_val1_;
    ::uint32_t id_;
    ::uint32_t kctx_id_;
    ::uint64_t info_val2_;
    ::int32_t kctx_tgid_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fmali_2eproto;
};// -------------------------------------------------------------------

class MaliMaliKCPUCQSWAITSTARTFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.MaliMaliKCPUCQSWAITSTARTFtraceEvent) */ {
 public:
  inline MaliMaliKCPUCQSWAITSTARTFtraceEvent() : MaliMaliKCPUCQSWAITSTARTFtraceEvent(nullptr) {}
  ~MaliMaliKCPUCQSWAITSTARTFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MaliMaliKCPUCQSWAITSTARTFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MaliMaliKCPUCQSWAITSTARTFtraceEvent(const MaliMaliKCPUCQSWAITSTARTFtraceEvent& from);
  MaliMaliKCPUCQSWAITSTARTFtraceEvent(MaliMaliKCPUCQSWAITSTARTFtraceEvent&& from) noexcept
    : MaliMaliKCPUCQSWAITSTARTFtraceEvent() {
    *this = ::std::move(from);
  }

  inline MaliMaliKCPUCQSWAITSTARTFtraceEvent& operator=(const MaliMaliKCPUCQSWAITSTARTFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MaliMaliKCPUCQSWAITSTARTFtraceEvent& operator=(MaliMaliKCPUCQSWAITSTARTFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MaliMaliKCPUCQSWAITSTARTFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MaliMaliKCPUCQSWAITSTARTFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const MaliMaliKCPUCQSWAITSTARTFtraceEvent*>(
               &_MaliMaliKCPUCQSWAITSTARTFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MaliMaliKCPUCQSWAITSTARTFtraceEvent& a, MaliMaliKCPUCQSWAITSTARTFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MaliMaliKCPUCQSWAITSTARTFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MaliMaliKCPUCQSWAITSTARTFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MaliMaliKCPUCQSWAITSTARTFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MaliMaliKCPUCQSWAITSTARTFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MaliMaliKCPUCQSWAITSTARTFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MaliMaliKCPUCQSWAITSTARTFtraceEvent& from) {
    MaliMaliKCPUCQSWAITSTARTFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MaliMaliKCPUCQSWAITSTARTFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.MaliMaliKCPUCQSWAITSTARTFtraceEvent";
  }
  protected:
  explicit MaliMaliKCPUCQSWAITSTARTFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoVal1FieldNumber = 2,
    kIdFieldNumber = 1,
    kKctxIdFieldNumber = 4,
    kInfoVal2FieldNumber = 3,
    kKctxTgidFieldNumber = 5,
  };
  // optional uint64 info_val1 = 2;
  bool has_info_val1() const;
  void clear_info_val1() ;
  ::uint64_t info_val1() const;
  void set_info_val1(::uint64_t value);

  private:
  ::uint64_t _internal_info_val1() const;
  void _internal_set_info_val1(::uint64_t value);

  public:
  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // optional uint32 kctx_id = 4;
  bool has_kctx_id() const;
  void clear_kctx_id() ;
  ::uint32_t kctx_id() const;
  void set_kctx_id(::uint32_t value);

  private:
  ::uint32_t _internal_kctx_id() const;
  void _internal_set_kctx_id(::uint32_t value);

  public:
  // optional uint64 info_val2 = 3;
  bool has_info_val2() const;
  void clear_info_val2() ;
  ::uint64_t info_val2() const;
  void set_info_val2(::uint64_t value);

  private:
  ::uint64_t _internal_info_val2() const;
  void _internal_set_info_val2(::uint64_t value);

  public:
  // optional int32 kctx_tgid = 5;
  bool has_kctx_tgid() const;
  void clear_kctx_tgid() ;
  ::int32_t kctx_tgid() const;
  void set_kctx_tgid(::int32_t value);

  private:
  ::int32_t _internal_kctx_tgid() const;
  void _internal_set_kctx_tgid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.MaliMaliKCPUCQSWAITSTARTFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::uint64_t info_val1_;
    ::uint32_t id_;
    ::uint32_t kctx_id_;
    ::uint64_t info_val2_;
    ::int32_t kctx_tgid_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fmali_2eproto;
};// -------------------------------------------------------------------

class MaliMaliKCPUCQSWAITENDFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.MaliMaliKCPUCQSWAITENDFtraceEvent) */ {
 public:
  inline MaliMaliKCPUCQSWAITENDFtraceEvent() : MaliMaliKCPUCQSWAITENDFtraceEvent(nullptr) {}
  ~MaliMaliKCPUCQSWAITENDFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MaliMaliKCPUCQSWAITENDFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MaliMaliKCPUCQSWAITENDFtraceEvent(const MaliMaliKCPUCQSWAITENDFtraceEvent& from);
  MaliMaliKCPUCQSWAITENDFtraceEvent(MaliMaliKCPUCQSWAITENDFtraceEvent&& from) noexcept
    : MaliMaliKCPUCQSWAITENDFtraceEvent() {
    *this = ::std::move(from);
  }

  inline MaliMaliKCPUCQSWAITENDFtraceEvent& operator=(const MaliMaliKCPUCQSWAITENDFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MaliMaliKCPUCQSWAITENDFtraceEvent& operator=(MaliMaliKCPUCQSWAITENDFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MaliMaliKCPUCQSWAITENDFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MaliMaliKCPUCQSWAITENDFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const MaliMaliKCPUCQSWAITENDFtraceEvent*>(
               &_MaliMaliKCPUCQSWAITENDFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MaliMaliKCPUCQSWAITENDFtraceEvent& a, MaliMaliKCPUCQSWAITENDFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MaliMaliKCPUCQSWAITENDFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MaliMaliKCPUCQSWAITENDFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MaliMaliKCPUCQSWAITENDFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MaliMaliKCPUCQSWAITENDFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MaliMaliKCPUCQSWAITENDFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MaliMaliKCPUCQSWAITENDFtraceEvent& from) {
    MaliMaliKCPUCQSWAITENDFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MaliMaliKCPUCQSWAITENDFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.MaliMaliKCPUCQSWAITENDFtraceEvent";
  }
  protected:
  explicit MaliMaliKCPUCQSWAITENDFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoVal1FieldNumber = 2,
    kIdFieldNumber = 1,
    kKctxIdFieldNumber = 4,
    kInfoVal2FieldNumber = 3,
    kKctxTgidFieldNumber = 5,
  };
  // optional uint64 info_val1 = 2;
  bool has_info_val1() const;
  void clear_info_val1() ;
  ::uint64_t info_val1() const;
  void set_info_val1(::uint64_t value);

  private:
  ::uint64_t _internal_info_val1() const;
  void _internal_set_info_val1(::uint64_t value);

  public:
  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // optional uint32 kctx_id = 4;
  bool has_kctx_id() const;
  void clear_kctx_id() ;
  ::uint32_t kctx_id() const;
  void set_kctx_id(::uint32_t value);

  private:
  ::uint32_t _internal_kctx_id() const;
  void _internal_set_kctx_id(::uint32_t value);

  public:
  // optional uint64 info_val2 = 3;
  bool has_info_val2() const;
  void clear_info_val2() ;
  ::uint64_t info_val2() const;
  void set_info_val2(::uint64_t value);

  private:
  ::uint64_t _internal_info_val2() const;
  void _internal_set_info_val2(::uint64_t value);

  public:
  // optional int32 kctx_tgid = 5;
  bool has_kctx_tgid() const;
  void clear_kctx_tgid() ;
  ::int32_t kctx_tgid() const;
  void set_kctx_tgid(::int32_t value);

  private:
  ::int32_t _internal_kctx_tgid() const;
  void _internal_set_kctx_tgid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.MaliMaliKCPUCQSWAITENDFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::uint64_t info_val1_;
    ::uint32_t id_;
    ::uint32_t kctx_id_;
    ::uint64_t info_val2_;
    ::int32_t kctx_tgid_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fmali_2eproto;
};// -------------------------------------------------------------------

class MaliMaliKCPUFENCESIGNALFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.MaliMaliKCPUFENCESIGNALFtraceEvent) */ {
 public:
  inline MaliMaliKCPUFENCESIGNALFtraceEvent() : MaliMaliKCPUFENCESIGNALFtraceEvent(nullptr) {}
  ~MaliMaliKCPUFENCESIGNALFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MaliMaliKCPUFENCESIGNALFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MaliMaliKCPUFENCESIGNALFtraceEvent(const MaliMaliKCPUFENCESIGNALFtraceEvent& from);
  MaliMaliKCPUFENCESIGNALFtraceEvent(MaliMaliKCPUFENCESIGNALFtraceEvent&& from) noexcept
    : MaliMaliKCPUFENCESIGNALFtraceEvent() {
    *this = ::std::move(from);
  }

  inline MaliMaliKCPUFENCESIGNALFtraceEvent& operator=(const MaliMaliKCPUFENCESIGNALFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MaliMaliKCPUFENCESIGNALFtraceEvent& operator=(MaliMaliKCPUFENCESIGNALFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MaliMaliKCPUFENCESIGNALFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MaliMaliKCPUFENCESIGNALFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const MaliMaliKCPUFENCESIGNALFtraceEvent*>(
               &_MaliMaliKCPUFENCESIGNALFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MaliMaliKCPUFENCESIGNALFtraceEvent& a, MaliMaliKCPUFENCESIGNALFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MaliMaliKCPUFENCESIGNALFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MaliMaliKCPUFENCESIGNALFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MaliMaliKCPUFENCESIGNALFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MaliMaliKCPUFENCESIGNALFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MaliMaliKCPUFENCESIGNALFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MaliMaliKCPUFENCESIGNALFtraceEvent& from) {
    MaliMaliKCPUFENCESIGNALFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MaliMaliKCPUFENCESIGNALFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.MaliMaliKCPUFENCESIGNALFtraceEvent";
  }
  protected:
  explicit MaliMaliKCPUFENCESIGNALFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoVal1FieldNumber = 1,
    kInfoVal2FieldNumber = 2,
    kKctxTgidFieldNumber = 3,
    kKctxIdFieldNumber = 4,
    kIdFieldNumber = 5,
  };
  // optional uint64 info_val1 = 1;
  bool has_info_val1() const;
  void clear_info_val1() ;
  ::uint64_t info_val1() const;
  void set_info_val1(::uint64_t value);

  private:
  ::uint64_t _internal_info_val1() const;
  void _internal_set_info_val1(::uint64_t value);

  public:
  // optional uint64 info_val2 = 2;
  bool has_info_val2() const;
  void clear_info_val2() ;
  ::uint64_t info_val2() const;
  void set_info_val2(::uint64_t value);

  private:
  ::uint64_t _internal_info_val2() const;
  void _internal_set_info_val2(::uint64_t value);

  public:
  // optional int32 kctx_tgid = 3;
  bool has_kctx_tgid() const;
  void clear_kctx_tgid() ;
  ::int32_t kctx_tgid() const;
  void set_kctx_tgid(::int32_t value);

  private:
  ::int32_t _internal_kctx_tgid() const;
  void _internal_set_kctx_tgid(::int32_t value);

  public:
  // optional uint32 kctx_id = 4;
  bool has_kctx_id() const;
  void clear_kctx_id() ;
  ::uint32_t kctx_id() const;
  void set_kctx_id(::uint32_t value);

  private:
  ::uint32_t _internal_kctx_id() const;
  void _internal_set_kctx_id(::uint32_t value);

  public:
  // optional uint32 id = 5;
  bool has_id() const;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.MaliMaliKCPUFENCESIGNALFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::uint64_t info_val1_;
    ::uint64_t info_val2_;
    ::int32_t kctx_tgid_;
    ::uint32_t kctx_id_;
    ::uint32_t id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fmali_2eproto;
};// -------------------------------------------------------------------

class MaliMaliKCPUFENCEWAITSTARTFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.MaliMaliKCPUFENCEWAITSTARTFtraceEvent) */ {
 public:
  inline MaliMaliKCPUFENCEWAITSTARTFtraceEvent() : MaliMaliKCPUFENCEWAITSTARTFtraceEvent(nullptr) {}
  ~MaliMaliKCPUFENCEWAITSTARTFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MaliMaliKCPUFENCEWAITSTARTFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MaliMaliKCPUFENCEWAITSTARTFtraceEvent(const MaliMaliKCPUFENCEWAITSTARTFtraceEvent& from);
  MaliMaliKCPUFENCEWAITSTARTFtraceEvent(MaliMaliKCPUFENCEWAITSTARTFtraceEvent&& from) noexcept
    : MaliMaliKCPUFENCEWAITSTARTFtraceEvent() {
    *this = ::std::move(from);
  }

  inline MaliMaliKCPUFENCEWAITSTARTFtraceEvent& operator=(const MaliMaliKCPUFENCEWAITSTARTFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MaliMaliKCPUFENCEWAITSTARTFtraceEvent& operator=(MaliMaliKCPUFENCEWAITSTARTFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MaliMaliKCPUFENCEWAITSTARTFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MaliMaliKCPUFENCEWAITSTARTFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const MaliMaliKCPUFENCEWAITSTARTFtraceEvent*>(
               &_MaliMaliKCPUFENCEWAITSTARTFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MaliMaliKCPUFENCEWAITSTARTFtraceEvent& a, MaliMaliKCPUFENCEWAITSTARTFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MaliMaliKCPUFENCEWAITSTARTFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MaliMaliKCPUFENCEWAITSTARTFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MaliMaliKCPUFENCEWAITSTARTFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MaliMaliKCPUFENCEWAITSTARTFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MaliMaliKCPUFENCEWAITSTARTFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MaliMaliKCPUFENCEWAITSTARTFtraceEvent& from) {
    MaliMaliKCPUFENCEWAITSTARTFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MaliMaliKCPUFENCEWAITSTARTFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.MaliMaliKCPUFENCEWAITSTARTFtraceEvent";
  }
  protected:
  explicit MaliMaliKCPUFENCEWAITSTARTFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoVal1FieldNumber = 1,
    kInfoVal2FieldNumber = 2,
    kKctxTgidFieldNumber = 3,
    kKctxIdFieldNumber = 4,
    kIdFieldNumber = 5,
  };
  // optional uint64 info_val1 = 1;
  bool has_info_val1() const;
  void clear_info_val1() ;
  ::uint64_t info_val1() const;
  void set_info_val1(::uint64_t value);

  private:
  ::uint64_t _internal_info_val1() const;
  void _internal_set_info_val1(::uint64_t value);

  public:
  // optional uint64 info_val2 = 2;
  bool has_info_val2() const;
  void clear_info_val2() ;
  ::uint64_t info_val2() const;
  void set_info_val2(::uint64_t value);

  private:
  ::uint64_t _internal_info_val2() const;
  void _internal_set_info_val2(::uint64_t value);

  public:
  // optional int32 kctx_tgid = 3;
  bool has_kctx_tgid() const;
  void clear_kctx_tgid() ;
  ::int32_t kctx_tgid() const;
  void set_kctx_tgid(::int32_t value);

  private:
  ::int32_t _internal_kctx_tgid() const;
  void _internal_set_kctx_tgid(::int32_t value);

  public:
  // optional uint32 kctx_id = 4;
  bool has_kctx_id() const;
  void clear_kctx_id() ;
  ::uint32_t kctx_id() const;
  void set_kctx_id(::uint32_t value);

  private:
  ::uint32_t _internal_kctx_id() const;
  void _internal_set_kctx_id(::uint32_t value);

  public:
  // optional uint32 id = 5;
  bool has_id() const;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.MaliMaliKCPUFENCEWAITSTARTFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::uint64_t info_val1_;
    ::uint64_t info_val2_;
    ::int32_t kctx_tgid_;
    ::uint32_t kctx_id_;
    ::uint32_t id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fmali_2eproto;
};// -------------------------------------------------------------------

class MaliMaliKCPUFENCEWAITENDFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.MaliMaliKCPUFENCEWAITENDFtraceEvent) */ {
 public:
  inline MaliMaliKCPUFENCEWAITENDFtraceEvent() : MaliMaliKCPUFENCEWAITENDFtraceEvent(nullptr) {}
  ~MaliMaliKCPUFENCEWAITENDFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MaliMaliKCPUFENCEWAITENDFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MaliMaliKCPUFENCEWAITENDFtraceEvent(const MaliMaliKCPUFENCEWAITENDFtraceEvent& from);
  MaliMaliKCPUFENCEWAITENDFtraceEvent(MaliMaliKCPUFENCEWAITENDFtraceEvent&& from) noexcept
    : MaliMaliKCPUFENCEWAITENDFtraceEvent() {
    *this = ::std::move(from);
  }

  inline MaliMaliKCPUFENCEWAITENDFtraceEvent& operator=(const MaliMaliKCPUFENCEWAITENDFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MaliMaliKCPUFENCEWAITENDFtraceEvent& operator=(MaliMaliKCPUFENCEWAITENDFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MaliMaliKCPUFENCEWAITENDFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MaliMaliKCPUFENCEWAITENDFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const MaliMaliKCPUFENCEWAITENDFtraceEvent*>(
               &_MaliMaliKCPUFENCEWAITENDFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MaliMaliKCPUFENCEWAITENDFtraceEvent& a, MaliMaliKCPUFENCEWAITENDFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MaliMaliKCPUFENCEWAITENDFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MaliMaliKCPUFENCEWAITENDFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MaliMaliKCPUFENCEWAITENDFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MaliMaliKCPUFENCEWAITENDFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MaliMaliKCPUFENCEWAITENDFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MaliMaliKCPUFENCEWAITENDFtraceEvent& from) {
    MaliMaliKCPUFENCEWAITENDFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MaliMaliKCPUFENCEWAITENDFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.MaliMaliKCPUFENCEWAITENDFtraceEvent";
  }
  protected:
  explicit MaliMaliKCPUFENCEWAITENDFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoVal1FieldNumber = 1,
    kInfoVal2FieldNumber = 2,
    kKctxTgidFieldNumber = 3,
    kKctxIdFieldNumber = 4,
    kIdFieldNumber = 5,
  };
  // optional uint64 info_val1 = 1;
  bool has_info_val1() const;
  void clear_info_val1() ;
  ::uint64_t info_val1() const;
  void set_info_val1(::uint64_t value);

  private:
  ::uint64_t _internal_info_val1() const;
  void _internal_set_info_val1(::uint64_t value);

  public:
  // optional uint64 info_val2 = 2;
  bool has_info_val2() const;
  void clear_info_val2() ;
  ::uint64_t info_val2() const;
  void set_info_val2(::uint64_t value);

  private:
  ::uint64_t _internal_info_val2() const;
  void _internal_set_info_val2(::uint64_t value);

  public:
  // optional int32 kctx_tgid = 3;
  bool has_kctx_tgid() const;
  void clear_kctx_tgid() ;
  ::int32_t kctx_tgid() const;
  void set_kctx_tgid(::int32_t value);

  private:
  ::int32_t _internal_kctx_tgid() const;
  void _internal_set_kctx_tgid(::int32_t value);

  public:
  // optional uint32 kctx_id = 4;
  bool has_kctx_id() const;
  void clear_kctx_id() ;
  ::uint32_t kctx_id() const;
  void set_kctx_id(::uint32_t value);

  private:
  ::uint32_t _internal_kctx_id() const;
  void _internal_set_kctx_id(::uint32_t value);

  public:
  // optional uint32 id = 5;
  bool has_id() const;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.MaliMaliKCPUFENCEWAITENDFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::uint64_t info_val1_;
    ::uint64_t info_val2_;
    ::int32_t kctx_tgid_;
    ::uint32_t kctx_id_;
    ::uint32_t id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fmali_2eproto;
};// -------------------------------------------------------------------

class MaliMaliCSFINTERRUPTSTARTFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.MaliMaliCSFINTERRUPTSTARTFtraceEvent) */ {
 public:
  inline MaliMaliCSFINTERRUPTSTARTFtraceEvent() : MaliMaliCSFINTERRUPTSTARTFtraceEvent(nullptr) {}
  ~MaliMaliCSFINTERRUPTSTARTFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MaliMaliCSFINTERRUPTSTARTFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MaliMaliCSFINTERRUPTSTARTFtraceEvent(const MaliMaliCSFINTERRUPTSTARTFtraceEvent& from);
  MaliMaliCSFINTERRUPTSTARTFtraceEvent(MaliMaliCSFINTERRUPTSTARTFtraceEvent&& from) noexcept
    : MaliMaliCSFINTERRUPTSTARTFtraceEvent() {
    *this = ::std::move(from);
  }

  inline MaliMaliCSFINTERRUPTSTARTFtraceEvent& operator=(const MaliMaliCSFINTERRUPTSTARTFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MaliMaliCSFINTERRUPTSTARTFtraceEvent& operator=(MaliMaliCSFINTERRUPTSTARTFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MaliMaliCSFINTERRUPTSTARTFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MaliMaliCSFINTERRUPTSTARTFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const MaliMaliCSFINTERRUPTSTARTFtraceEvent*>(
               &_MaliMaliCSFINTERRUPTSTARTFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MaliMaliCSFINTERRUPTSTARTFtraceEvent& a, MaliMaliCSFINTERRUPTSTARTFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MaliMaliCSFINTERRUPTSTARTFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MaliMaliCSFINTERRUPTSTARTFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MaliMaliCSFINTERRUPTSTARTFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MaliMaliCSFINTERRUPTSTARTFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MaliMaliCSFINTERRUPTSTARTFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MaliMaliCSFINTERRUPTSTARTFtraceEvent& from) {
    MaliMaliCSFINTERRUPTSTARTFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MaliMaliCSFINTERRUPTSTARTFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.MaliMaliCSFINTERRUPTSTARTFtraceEvent";
  }
  protected:
  explicit MaliMaliCSFINTERRUPTSTARTFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKctxTgidFieldNumber = 1,
    kKctxIdFieldNumber = 2,
    kInfoValFieldNumber = 3,
  };
  // optional int32 kctx_tgid = 1;
  bool has_kctx_tgid() const;
  void clear_kctx_tgid() ;
  ::int32_t kctx_tgid() const;
  void set_kctx_tgid(::int32_t value);

  private:
  ::int32_t _internal_kctx_tgid() const;
  void _internal_set_kctx_tgid(::int32_t value);

  public:
  // optional uint32 kctx_id = 2;
  bool has_kctx_id() const;
  void clear_kctx_id() ;
  ::uint32_t kctx_id() const;
  void set_kctx_id(::uint32_t value);

  private:
  ::uint32_t _internal_kctx_id() const;
  void _internal_set_kctx_id(::uint32_t value);

  public:
  // optional uint64 info_val = 3;
  bool has_info_val() const;
  void clear_info_val() ;
  ::uint64_t info_val() const;
  void set_info_val(::uint64_t value);

  private:
  ::uint64_t _internal_info_val() const;
  void _internal_set_info_val(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.MaliMaliCSFINTERRUPTSTARTFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::int32_t kctx_tgid_;
    ::uint32_t kctx_id_;
    ::uint64_t info_val_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fmali_2eproto;
};// -------------------------------------------------------------------

class MaliMaliCSFINTERRUPTENDFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.MaliMaliCSFINTERRUPTENDFtraceEvent) */ {
 public:
  inline MaliMaliCSFINTERRUPTENDFtraceEvent() : MaliMaliCSFINTERRUPTENDFtraceEvent(nullptr) {}
  ~MaliMaliCSFINTERRUPTENDFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MaliMaliCSFINTERRUPTENDFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MaliMaliCSFINTERRUPTENDFtraceEvent(const MaliMaliCSFINTERRUPTENDFtraceEvent& from);
  MaliMaliCSFINTERRUPTENDFtraceEvent(MaliMaliCSFINTERRUPTENDFtraceEvent&& from) noexcept
    : MaliMaliCSFINTERRUPTENDFtraceEvent() {
    *this = ::std::move(from);
  }

  inline MaliMaliCSFINTERRUPTENDFtraceEvent& operator=(const MaliMaliCSFINTERRUPTENDFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MaliMaliCSFINTERRUPTENDFtraceEvent& operator=(MaliMaliCSFINTERRUPTENDFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MaliMaliCSFINTERRUPTENDFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MaliMaliCSFINTERRUPTENDFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const MaliMaliCSFINTERRUPTENDFtraceEvent*>(
               &_MaliMaliCSFINTERRUPTENDFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MaliMaliCSFINTERRUPTENDFtraceEvent& a, MaliMaliCSFINTERRUPTENDFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MaliMaliCSFINTERRUPTENDFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MaliMaliCSFINTERRUPTENDFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MaliMaliCSFINTERRUPTENDFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MaliMaliCSFINTERRUPTENDFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MaliMaliCSFINTERRUPTENDFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MaliMaliCSFINTERRUPTENDFtraceEvent& from) {
    MaliMaliCSFINTERRUPTENDFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MaliMaliCSFINTERRUPTENDFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.MaliMaliCSFINTERRUPTENDFtraceEvent";
  }
  protected:
  explicit MaliMaliCSFINTERRUPTENDFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKctxTgidFieldNumber = 1,
    kKctxIdFieldNumber = 2,
    kInfoValFieldNumber = 3,
  };
  // optional int32 kctx_tgid = 1;
  bool has_kctx_tgid() const;
  void clear_kctx_tgid() ;
  ::int32_t kctx_tgid() const;
  void set_kctx_tgid(::int32_t value);

  private:
  ::int32_t _internal_kctx_tgid() const;
  void _internal_set_kctx_tgid(::int32_t value);

  public:
  // optional uint32 kctx_id = 2;
  bool has_kctx_id() const;
  void clear_kctx_id() ;
  ::uint32_t kctx_id() const;
  void set_kctx_id(::uint32_t value);

  private:
  ::uint32_t _internal_kctx_id() const;
  void _internal_set_kctx_id(::uint32_t value);

  public:
  // optional uint64 info_val = 3;
  bool has_info_val() const;
  void clear_info_val() ;
  ::uint64_t info_val() const;
  void set_info_val(::uint64_t value);

  private:
  ::uint64_t _internal_info_val() const;
  void _internal_set_info_val(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.MaliMaliCSFINTERRUPTENDFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::int32_t kctx_tgid_;
    ::uint32_t kctx_id_;
    ::uint64_t info_val_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fmali_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MaliTracingMarkWriteFtraceEvent

// optional string name = 1;
inline bool MaliTracingMarkWriteFtraceEvent::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MaliTracingMarkWriteFtraceEvent::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MaliTracingMarkWriteFtraceEvent::name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliTracingMarkWriteFtraceEvent.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MaliTracingMarkWriteFtraceEvent::set_name(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliTracingMarkWriteFtraceEvent.name)
}
inline std::string* MaliTracingMarkWriteFtraceEvent::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.MaliTracingMarkWriteFtraceEvent.name)
  return _s;
}
inline const std::string& MaliTracingMarkWriteFtraceEvent::_internal_name() const {
  return _impl_.name_.Get();
}
inline void MaliTracingMarkWriteFtraceEvent::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* MaliTracingMarkWriteFtraceEvent::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* MaliTracingMarkWriteFtraceEvent::release_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.MaliTracingMarkWriteFtraceEvent.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void MaliTracingMarkWriteFtraceEvent::set_allocated_name(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.MaliTracingMarkWriteFtraceEvent.name)
}

// optional int32 pid = 2;
inline bool MaliTracingMarkWriteFtraceEvent::has_pid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MaliTracingMarkWriteFtraceEvent::clear_pid() {
  _impl_.pid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t MaliTracingMarkWriteFtraceEvent::pid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliTracingMarkWriteFtraceEvent.pid)
  return _internal_pid();
}
inline void MaliTracingMarkWriteFtraceEvent::set_pid(::int32_t value) {
  _internal_set_pid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliTracingMarkWriteFtraceEvent.pid)
}
inline ::int32_t MaliTracingMarkWriteFtraceEvent::_internal_pid() const {
  return _impl_.pid_;
}
inline void MaliTracingMarkWriteFtraceEvent::_internal_set_pid(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.pid_ = value;
}

// optional uint32 type = 3;
inline bool MaliTracingMarkWriteFtraceEvent::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void MaliTracingMarkWriteFtraceEvent::clear_type() {
  _impl_.type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t MaliTracingMarkWriteFtraceEvent::type() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliTracingMarkWriteFtraceEvent.type)
  return _internal_type();
}
inline void MaliTracingMarkWriteFtraceEvent::set_type(::uint32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliTracingMarkWriteFtraceEvent.type)
}
inline ::uint32_t MaliTracingMarkWriteFtraceEvent::_internal_type() const {
  return _impl_.type_;
}
inline void MaliTracingMarkWriteFtraceEvent::_internal_set_type(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.type_ = value;
}

// optional int32 value = 4;
inline bool MaliTracingMarkWriteFtraceEvent::has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void MaliTracingMarkWriteFtraceEvent::clear_value() {
  _impl_.value_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t MaliTracingMarkWriteFtraceEvent::value() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliTracingMarkWriteFtraceEvent.value)
  return _internal_value();
}
inline void MaliTracingMarkWriteFtraceEvent::set_value(::int32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliTracingMarkWriteFtraceEvent.value)
}
inline ::int32_t MaliTracingMarkWriteFtraceEvent::_internal_value() const {
  return _impl_.value_;
}
inline void MaliTracingMarkWriteFtraceEvent::_internal_set_value(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// MaliMaliKCPUCQSSETFtraceEvent

// optional uint32 id = 1;
inline bool MaliMaliKCPUCQSSETFtraceEvent::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MaliMaliKCPUCQSSETFtraceEvent::clear_id() {
  _impl_.id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t MaliMaliKCPUCQSSETFtraceEvent::id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUCQSSETFtraceEvent.id)
  return _internal_id();
}
inline void MaliMaliKCPUCQSSETFtraceEvent::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUCQSSETFtraceEvent.id)
}
inline ::uint32_t MaliMaliKCPUCQSSETFtraceEvent::_internal_id() const {
  return _impl_.id_;
}
inline void MaliMaliKCPUCQSSETFtraceEvent::_internal_set_id(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.id_ = value;
}

// optional uint64 info_val1 = 2;
inline bool MaliMaliKCPUCQSSETFtraceEvent::has_info_val1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MaliMaliKCPUCQSSETFtraceEvent::clear_info_val1() {
  _impl_.info_val1_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t MaliMaliKCPUCQSSETFtraceEvent::info_val1() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUCQSSETFtraceEvent.info_val1)
  return _internal_info_val1();
}
inline void MaliMaliKCPUCQSSETFtraceEvent::set_info_val1(::uint64_t value) {
  _internal_set_info_val1(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUCQSSETFtraceEvent.info_val1)
}
inline ::uint64_t MaliMaliKCPUCQSSETFtraceEvent::_internal_info_val1() const {
  return _impl_.info_val1_;
}
inline void MaliMaliKCPUCQSSETFtraceEvent::_internal_set_info_val1(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.info_val1_ = value;
}

// optional uint64 info_val2 = 3;
inline bool MaliMaliKCPUCQSSETFtraceEvent::has_info_val2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void MaliMaliKCPUCQSSETFtraceEvent::clear_info_val2() {
  _impl_.info_val2_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint64_t MaliMaliKCPUCQSSETFtraceEvent::info_val2() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUCQSSETFtraceEvent.info_val2)
  return _internal_info_val2();
}
inline void MaliMaliKCPUCQSSETFtraceEvent::set_info_val2(::uint64_t value) {
  _internal_set_info_val2(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUCQSSETFtraceEvent.info_val2)
}
inline ::uint64_t MaliMaliKCPUCQSSETFtraceEvent::_internal_info_val2() const {
  return _impl_.info_val2_;
}
inline void MaliMaliKCPUCQSSETFtraceEvent::_internal_set_info_val2(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.info_val2_ = value;
}

// optional uint32 kctx_id = 4;
inline bool MaliMaliKCPUCQSSETFtraceEvent::has_kctx_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void MaliMaliKCPUCQSSETFtraceEvent::clear_kctx_id() {
  _impl_.kctx_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t MaliMaliKCPUCQSSETFtraceEvent::kctx_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUCQSSETFtraceEvent.kctx_id)
  return _internal_kctx_id();
}
inline void MaliMaliKCPUCQSSETFtraceEvent::set_kctx_id(::uint32_t value) {
  _internal_set_kctx_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUCQSSETFtraceEvent.kctx_id)
}
inline ::uint32_t MaliMaliKCPUCQSSETFtraceEvent::_internal_kctx_id() const {
  return _impl_.kctx_id_;
}
inline void MaliMaliKCPUCQSSETFtraceEvent::_internal_set_kctx_id(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.kctx_id_ = value;
}

// optional int32 kctx_tgid = 5;
inline bool MaliMaliKCPUCQSSETFtraceEvent::has_kctx_tgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void MaliMaliKCPUCQSSETFtraceEvent::clear_kctx_tgid() {
  _impl_.kctx_tgid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t MaliMaliKCPUCQSSETFtraceEvent::kctx_tgid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUCQSSETFtraceEvent.kctx_tgid)
  return _internal_kctx_tgid();
}
inline void MaliMaliKCPUCQSSETFtraceEvent::set_kctx_tgid(::int32_t value) {
  _internal_set_kctx_tgid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUCQSSETFtraceEvent.kctx_tgid)
}
inline ::int32_t MaliMaliKCPUCQSSETFtraceEvent::_internal_kctx_tgid() const {
  return _impl_.kctx_tgid_;
}
inline void MaliMaliKCPUCQSSETFtraceEvent::_internal_set_kctx_tgid(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.kctx_tgid_ = value;
}

// -------------------------------------------------------------------

// MaliMaliKCPUCQSWAITSTARTFtraceEvent

// optional uint32 id = 1;
inline bool MaliMaliKCPUCQSWAITSTARTFtraceEvent::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MaliMaliKCPUCQSWAITSTARTFtraceEvent::clear_id() {
  _impl_.id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t MaliMaliKCPUCQSWAITSTARTFtraceEvent::id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUCQSWAITSTARTFtraceEvent.id)
  return _internal_id();
}
inline void MaliMaliKCPUCQSWAITSTARTFtraceEvent::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUCQSWAITSTARTFtraceEvent.id)
}
inline ::uint32_t MaliMaliKCPUCQSWAITSTARTFtraceEvent::_internal_id() const {
  return _impl_.id_;
}
inline void MaliMaliKCPUCQSWAITSTARTFtraceEvent::_internal_set_id(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.id_ = value;
}

// optional uint64 info_val1 = 2;
inline bool MaliMaliKCPUCQSWAITSTARTFtraceEvent::has_info_val1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MaliMaliKCPUCQSWAITSTARTFtraceEvent::clear_info_val1() {
  _impl_.info_val1_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t MaliMaliKCPUCQSWAITSTARTFtraceEvent::info_val1() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUCQSWAITSTARTFtraceEvent.info_val1)
  return _internal_info_val1();
}
inline void MaliMaliKCPUCQSWAITSTARTFtraceEvent::set_info_val1(::uint64_t value) {
  _internal_set_info_val1(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUCQSWAITSTARTFtraceEvent.info_val1)
}
inline ::uint64_t MaliMaliKCPUCQSWAITSTARTFtraceEvent::_internal_info_val1() const {
  return _impl_.info_val1_;
}
inline void MaliMaliKCPUCQSWAITSTARTFtraceEvent::_internal_set_info_val1(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.info_val1_ = value;
}

// optional uint64 info_val2 = 3;
inline bool MaliMaliKCPUCQSWAITSTARTFtraceEvent::has_info_val2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void MaliMaliKCPUCQSWAITSTARTFtraceEvent::clear_info_val2() {
  _impl_.info_val2_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint64_t MaliMaliKCPUCQSWAITSTARTFtraceEvent::info_val2() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUCQSWAITSTARTFtraceEvent.info_val2)
  return _internal_info_val2();
}
inline void MaliMaliKCPUCQSWAITSTARTFtraceEvent::set_info_val2(::uint64_t value) {
  _internal_set_info_val2(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUCQSWAITSTARTFtraceEvent.info_val2)
}
inline ::uint64_t MaliMaliKCPUCQSWAITSTARTFtraceEvent::_internal_info_val2() const {
  return _impl_.info_val2_;
}
inline void MaliMaliKCPUCQSWAITSTARTFtraceEvent::_internal_set_info_val2(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.info_val2_ = value;
}

// optional uint32 kctx_id = 4;
inline bool MaliMaliKCPUCQSWAITSTARTFtraceEvent::has_kctx_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void MaliMaliKCPUCQSWAITSTARTFtraceEvent::clear_kctx_id() {
  _impl_.kctx_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t MaliMaliKCPUCQSWAITSTARTFtraceEvent::kctx_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUCQSWAITSTARTFtraceEvent.kctx_id)
  return _internal_kctx_id();
}
inline void MaliMaliKCPUCQSWAITSTARTFtraceEvent::set_kctx_id(::uint32_t value) {
  _internal_set_kctx_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUCQSWAITSTARTFtraceEvent.kctx_id)
}
inline ::uint32_t MaliMaliKCPUCQSWAITSTARTFtraceEvent::_internal_kctx_id() const {
  return _impl_.kctx_id_;
}
inline void MaliMaliKCPUCQSWAITSTARTFtraceEvent::_internal_set_kctx_id(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.kctx_id_ = value;
}

// optional int32 kctx_tgid = 5;
inline bool MaliMaliKCPUCQSWAITSTARTFtraceEvent::has_kctx_tgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void MaliMaliKCPUCQSWAITSTARTFtraceEvent::clear_kctx_tgid() {
  _impl_.kctx_tgid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t MaliMaliKCPUCQSWAITSTARTFtraceEvent::kctx_tgid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUCQSWAITSTARTFtraceEvent.kctx_tgid)
  return _internal_kctx_tgid();
}
inline void MaliMaliKCPUCQSWAITSTARTFtraceEvent::set_kctx_tgid(::int32_t value) {
  _internal_set_kctx_tgid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUCQSWAITSTARTFtraceEvent.kctx_tgid)
}
inline ::int32_t MaliMaliKCPUCQSWAITSTARTFtraceEvent::_internal_kctx_tgid() const {
  return _impl_.kctx_tgid_;
}
inline void MaliMaliKCPUCQSWAITSTARTFtraceEvent::_internal_set_kctx_tgid(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.kctx_tgid_ = value;
}

// -------------------------------------------------------------------

// MaliMaliKCPUCQSWAITENDFtraceEvent

// optional uint32 id = 1;
inline bool MaliMaliKCPUCQSWAITENDFtraceEvent::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MaliMaliKCPUCQSWAITENDFtraceEvent::clear_id() {
  _impl_.id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t MaliMaliKCPUCQSWAITENDFtraceEvent::id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUCQSWAITENDFtraceEvent.id)
  return _internal_id();
}
inline void MaliMaliKCPUCQSWAITENDFtraceEvent::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUCQSWAITENDFtraceEvent.id)
}
inline ::uint32_t MaliMaliKCPUCQSWAITENDFtraceEvent::_internal_id() const {
  return _impl_.id_;
}
inline void MaliMaliKCPUCQSWAITENDFtraceEvent::_internal_set_id(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.id_ = value;
}

// optional uint64 info_val1 = 2;
inline bool MaliMaliKCPUCQSWAITENDFtraceEvent::has_info_val1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MaliMaliKCPUCQSWAITENDFtraceEvent::clear_info_val1() {
  _impl_.info_val1_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t MaliMaliKCPUCQSWAITENDFtraceEvent::info_val1() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUCQSWAITENDFtraceEvent.info_val1)
  return _internal_info_val1();
}
inline void MaliMaliKCPUCQSWAITENDFtraceEvent::set_info_val1(::uint64_t value) {
  _internal_set_info_val1(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUCQSWAITENDFtraceEvent.info_val1)
}
inline ::uint64_t MaliMaliKCPUCQSWAITENDFtraceEvent::_internal_info_val1() const {
  return _impl_.info_val1_;
}
inline void MaliMaliKCPUCQSWAITENDFtraceEvent::_internal_set_info_val1(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.info_val1_ = value;
}

// optional uint64 info_val2 = 3;
inline bool MaliMaliKCPUCQSWAITENDFtraceEvent::has_info_val2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void MaliMaliKCPUCQSWAITENDFtraceEvent::clear_info_val2() {
  _impl_.info_val2_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint64_t MaliMaliKCPUCQSWAITENDFtraceEvent::info_val2() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUCQSWAITENDFtraceEvent.info_val2)
  return _internal_info_val2();
}
inline void MaliMaliKCPUCQSWAITENDFtraceEvent::set_info_val2(::uint64_t value) {
  _internal_set_info_val2(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUCQSWAITENDFtraceEvent.info_val2)
}
inline ::uint64_t MaliMaliKCPUCQSWAITENDFtraceEvent::_internal_info_val2() const {
  return _impl_.info_val2_;
}
inline void MaliMaliKCPUCQSWAITENDFtraceEvent::_internal_set_info_val2(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.info_val2_ = value;
}

// optional uint32 kctx_id = 4;
inline bool MaliMaliKCPUCQSWAITENDFtraceEvent::has_kctx_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void MaliMaliKCPUCQSWAITENDFtraceEvent::clear_kctx_id() {
  _impl_.kctx_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t MaliMaliKCPUCQSWAITENDFtraceEvent::kctx_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUCQSWAITENDFtraceEvent.kctx_id)
  return _internal_kctx_id();
}
inline void MaliMaliKCPUCQSWAITENDFtraceEvent::set_kctx_id(::uint32_t value) {
  _internal_set_kctx_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUCQSWAITENDFtraceEvent.kctx_id)
}
inline ::uint32_t MaliMaliKCPUCQSWAITENDFtraceEvent::_internal_kctx_id() const {
  return _impl_.kctx_id_;
}
inline void MaliMaliKCPUCQSWAITENDFtraceEvent::_internal_set_kctx_id(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.kctx_id_ = value;
}

// optional int32 kctx_tgid = 5;
inline bool MaliMaliKCPUCQSWAITENDFtraceEvent::has_kctx_tgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void MaliMaliKCPUCQSWAITENDFtraceEvent::clear_kctx_tgid() {
  _impl_.kctx_tgid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t MaliMaliKCPUCQSWAITENDFtraceEvent::kctx_tgid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUCQSWAITENDFtraceEvent.kctx_tgid)
  return _internal_kctx_tgid();
}
inline void MaliMaliKCPUCQSWAITENDFtraceEvent::set_kctx_tgid(::int32_t value) {
  _internal_set_kctx_tgid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUCQSWAITENDFtraceEvent.kctx_tgid)
}
inline ::int32_t MaliMaliKCPUCQSWAITENDFtraceEvent::_internal_kctx_tgid() const {
  return _impl_.kctx_tgid_;
}
inline void MaliMaliKCPUCQSWAITENDFtraceEvent::_internal_set_kctx_tgid(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.kctx_tgid_ = value;
}

// -------------------------------------------------------------------

// MaliMaliKCPUFENCESIGNALFtraceEvent

// optional uint64 info_val1 = 1;
inline bool MaliMaliKCPUFENCESIGNALFtraceEvent::has_info_val1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MaliMaliKCPUFENCESIGNALFtraceEvent::clear_info_val1() {
  _impl_.info_val1_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t MaliMaliKCPUFENCESIGNALFtraceEvent::info_val1() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUFENCESIGNALFtraceEvent.info_val1)
  return _internal_info_val1();
}
inline void MaliMaliKCPUFENCESIGNALFtraceEvent::set_info_val1(::uint64_t value) {
  _internal_set_info_val1(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUFENCESIGNALFtraceEvent.info_val1)
}
inline ::uint64_t MaliMaliKCPUFENCESIGNALFtraceEvent::_internal_info_val1() const {
  return _impl_.info_val1_;
}
inline void MaliMaliKCPUFENCESIGNALFtraceEvent::_internal_set_info_val1(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.info_val1_ = value;
}

// optional uint64 info_val2 = 2;
inline bool MaliMaliKCPUFENCESIGNALFtraceEvent::has_info_val2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MaliMaliKCPUFENCESIGNALFtraceEvent::clear_info_val2() {
  _impl_.info_val2_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t MaliMaliKCPUFENCESIGNALFtraceEvent::info_val2() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUFENCESIGNALFtraceEvent.info_val2)
  return _internal_info_val2();
}
inline void MaliMaliKCPUFENCESIGNALFtraceEvent::set_info_val2(::uint64_t value) {
  _internal_set_info_val2(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUFENCESIGNALFtraceEvent.info_val2)
}
inline ::uint64_t MaliMaliKCPUFENCESIGNALFtraceEvent::_internal_info_val2() const {
  return _impl_.info_val2_;
}
inline void MaliMaliKCPUFENCESIGNALFtraceEvent::_internal_set_info_val2(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.info_val2_ = value;
}

// optional int32 kctx_tgid = 3;
inline bool MaliMaliKCPUFENCESIGNALFtraceEvent::has_kctx_tgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void MaliMaliKCPUFENCESIGNALFtraceEvent::clear_kctx_tgid() {
  _impl_.kctx_tgid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t MaliMaliKCPUFENCESIGNALFtraceEvent::kctx_tgid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUFENCESIGNALFtraceEvent.kctx_tgid)
  return _internal_kctx_tgid();
}
inline void MaliMaliKCPUFENCESIGNALFtraceEvent::set_kctx_tgid(::int32_t value) {
  _internal_set_kctx_tgid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUFENCESIGNALFtraceEvent.kctx_tgid)
}
inline ::int32_t MaliMaliKCPUFENCESIGNALFtraceEvent::_internal_kctx_tgid() const {
  return _impl_.kctx_tgid_;
}
inline void MaliMaliKCPUFENCESIGNALFtraceEvent::_internal_set_kctx_tgid(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.kctx_tgid_ = value;
}

// optional uint32 kctx_id = 4;
inline bool MaliMaliKCPUFENCESIGNALFtraceEvent::has_kctx_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void MaliMaliKCPUFENCESIGNALFtraceEvent::clear_kctx_id() {
  _impl_.kctx_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t MaliMaliKCPUFENCESIGNALFtraceEvent::kctx_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUFENCESIGNALFtraceEvent.kctx_id)
  return _internal_kctx_id();
}
inline void MaliMaliKCPUFENCESIGNALFtraceEvent::set_kctx_id(::uint32_t value) {
  _internal_set_kctx_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUFENCESIGNALFtraceEvent.kctx_id)
}
inline ::uint32_t MaliMaliKCPUFENCESIGNALFtraceEvent::_internal_kctx_id() const {
  return _impl_.kctx_id_;
}
inline void MaliMaliKCPUFENCESIGNALFtraceEvent::_internal_set_kctx_id(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.kctx_id_ = value;
}

// optional uint32 id = 5;
inline bool MaliMaliKCPUFENCESIGNALFtraceEvent::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void MaliMaliKCPUFENCESIGNALFtraceEvent::clear_id() {
  _impl_.id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t MaliMaliKCPUFENCESIGNALFtraceEvent::id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUFENCESIGNALFtraceEvent.id)
  return _internal_id();
}
inline void MaliMaliKCPUFENCESIGNALFtraceEvent::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUFENCESIGNALFtraceEvent.id)
}
inline ::uint32_t MaliMaliKCPUFENCESIGNALFtraceEvent::_internal_id() const {
  return _impl_.id_;
}
inline void MaliMaliKCPUFENCESIGNALFtraceEvent::_internal_set_id(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// MaliMaliKCPUFENCEWAITSTARTFtraceEvent

// optional uint64 info_val1 = 1;
inline bool MaliMaliKCPUFENCEWAITSTARTFtraceEvent::has_info_val1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MaliMaliKCPUFENCEWAITSTARTFtraceEvent::clear_info_val1() {
  _impl_.info_val1_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t MaliMaliKCPUFENCEWAITSTARTFtraceEvent::info_val1() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUFENCEWAITSTARTFtraceEvent.info_val1)
  return _internal_info_val1();
}
inline void MaliMaliKCPUFENCEWAITSTARTFtraceEvent::set_info_val1(::uint64_t value) {
  _internal_set_info_val1(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUFENCEWAITSTARTFtraceEvent.info_val1)
}
inline ::uint64_t MaliMaliKCPUFENCEWAITSTARTFtraceEvent::_internal_info_val1() const {
  return _impl_.info_val1_;
}
inline void MaliMaliKCPUFENCEWAITSTARTFtraceEvent::_internal_set_info_val1(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.info_val1_ = value;
}

// optional uint64 info_val2 = 2;
inline bool MaliMaliKCPUFENCEWAITSTARTFtraceEvent::has_info_val2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MaliMaliKCPUFENCEWAITSTARTFtraceEvent::clear_info_val2() {
  _impl_.info_val2_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t MaliMaliKCPUFENCEWAITSTARTFtraceEvent::info_val2() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUFENCEWAITSTARTFtraceEvent.info_val2)
  return _internal_info_val2();
}
inline void MaliMaliKCPUFENCEWAITSTARTFtraceEvent::set_info_val2(::uint64_t value) {
  _internal_set_info_val2(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUFENCEWAITSTARTFtraceEvent.info_val2)
}
inline ::uint64_t MaliMaliKCPUFENCEWAITSTARTFtraceEvent::_internal_info_val2() const {
  return _impl_.info_val2_;
}
inline void MaliMaliKCPUFENCEWAITSTARTFtraceEvent::_internal_set_info_val2(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.info_val2_ = value;
}

// optional int32 kctx_tgid = 3;
inline bool MaliMaliKCPUFENCEWAITSTARTFtraceEvent::has_kctx_tgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void MaliMaliKCPUFENCEWAITSTARTFtraceEvent::clear_kctx_tgid() {
  _impl_.kctx_tgid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t MaliMaliKCPUFENCEWAITSTARTFtraceEvent::kctx_tgid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUFENCEWAITSTARTFtraceEvent.kctx_tgid)
  return _internal_kctx_tgid();
}
inline void MaliMaliKCPUFENCEWAITSTARTFtraceEvent::set_kctx_tgid(::int32_t value) {
  _internal_set_kctx_tgid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUFENCEWAITSTARTFtraceEvent.kctx_tgid)
}
inline ::int32_t MaliMaliKCPUFENCEWAITSTARTFtraceEvent::_internal_kctx_tgid() const {
  return _impl_.kctx_tgid_;
}
inline void MaliMaliKCPUFENCEWAITSTARTFtraceEvent::_internal_set_kctx_tgid(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.kctx_tgid_ = value;
}

// optional uint32 kctx_id = 4;
inline bool MaliMaliKCPUFENCEWAITSTARTFtraceEvent::has_kctx_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void MaliMaliKCPUFENCEWAITSTARTFtraceEvent::clear_kctx_id() {
  _impl_.kctx_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t MaliMaliKCPUFENCEWAITSTARTFtraceEvent::kctx_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUFENCEWAITSTARTFtraceEvent.kctx_id)
  return _internal_kctx_id();
}
inline void MaliMaliKCPUFENCEWAITSTARTFtraceEvent::set_kctx_id(::uint32_t value) {
  _internal_set_kctx_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUFENCEWAITSTARTFtraceEvent.kctx_id)
}
inline ::uint32_t MaliMaliKCPUFENCEWAITSTARTFtraceEvent::_internal_kctx_id() const {
  return _impl_.kctx_id_;
}
inline void MaliMaliKCPUFENCEWAITSTARTFtraceEvent::_internal_set_kctx_id(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.kctx_id_ = value;
}

// optional uint32 id = 5;
inline bool MaliMaliKCPUFENCEWAITSTARTFtraceEvent::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void MaliMaliKCPUFENCEWAITSTARTFtraceEvent::clear_id() {
  _impl_.id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t MaliMaliKCPUFENCEWAITSTARTFtraceEvent::id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUFENCEWAITSTARTFtraceEvent.id)
  return _internal_id();
}
inline void MaliMaliKCPUFENCEWAITSTARTFtraceEvent::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUFENCEWAITSTARTFtraceEvent.id)
}
inline ::uint32_t MaliMaliKCPUFENCEWAITSTARTFtraceEvent::_internal_id() const {
  return _impl_.id_;
}
inline void MaliMaliKCPUFENCEWAITSTARTFtraceEvent::_internal_set_id(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// MaliMaliKCPUFENCEWAITENDFtraceEvent

// optional uint64 info_val1 = 1;
inline bool MaliMaliKCPUFENCEWAITENDFtraceEvent::has_info_val1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MaliMaliKCPUFENCEWAITENDFtraceEvent::clear_info_val1() {
  _impl_.info_val1_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t MaliMaliKCPUFENCEWAITENDFtraceEvent::info_val1() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUFENCEWAITENDFtraceEvent.info_val1)
  return _internal_info_val1();
}
inline void MaliMaliKCPUFENCEWAITENDFtraceEvent::set_info_val1(::uint64_t value) {
  _internal_set_info_val1(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUFENCEWAITENDFtraceEvent.info_val1)
}
inline ::uint64_t MaliMaliKCPUFENCEWAITENDFtraceEvent::_internal_info_val1() const {
  return _impl_.info_val1_;
}
inline void MaliMaliKCPUFENCEWAITENDFtraceEvent::_internal_set_info_val1(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.info_val1_ = value;
}

// optional uint64 info_val2 = 2;
inline bool MaliMaliKCPUFENCEWAITENDFtraceEvent::has_info_val2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MaliMaliKCPUFENCEWAITENDFtraceEvent::clear_info_val2() {
  _impl_.info_val2_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t MaliMaliKCPUFENCEWAITENDFtraceEvent::info_val2() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUFENCEWAITENDFtraceEvent.info_val2)
  return _internal_info_val2();
}
inline void MaliMaliKCPUFENCEWAITENDFtraceEvent::set_info_val2(::uint64_t value) {
  _internal_set_info_val2(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUFENCEWAITENDFtraceEvent.info_val2)
}
inline ::uint64_t MaliMaliKCPUFENCEWAITENDFtraceEvent::_internal_info_val2() const {
  return _impl_.info_val2_;
}
inline void MaliMaliKCPUFENCEWAITENDFtraceEvent::_internal_set_info_val2(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.info_val2_ = value;
}

// optional int32 kctx_tgid = 3;
inline bool MaliMaliKCPUFENCEWAITENDFtraceEvent::has_kctx_tgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void MaliMaliKCPUFENCEWAITENDFtraceEvent::clear_kctx_tgid() {
  _impl_.kctx_tgid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t MaliMaliKCPUFENCEWAITENDFtraceEvent::kctx_tgid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUFENCEWAITENDFtraceEvent.kctx_tgid)
  return _internal_kctx_tgid();
}
inline void MaliMaliKCPUFENCEWAITENDFtraceEvent::set_kctx_tgid(::int32_t value) {
  _internal_set_kctx_tgid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUFENCEWAITENDFtraceEvent.kctx_tgid)
}
inline ::int32_t MaliMaliKCPUFENCEWAITENDFtraceEvent::_internal_kctx_tgid() const {
  return _impl_.kctx_tgid_;
}
inline void MaliMaliKCPUFENCEWAITENDFtraceEvent::_internal_set_kctx_tgid(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.kctx_tgid_ = value;
}

// optional uint32 kctx_id = 4;
inline bool MaliMaliKCPUFENCEWAITENDFtraceEvent::has_kctx_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void MaliMaliKCPUFENCEWAITENDFtraceEvent::clear_kctx_id() {
  _impl_.kctx_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t MaliMaliKCPUFENCEWAITENDFtraceEvent::kctx_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUFENCEWAITENDFtraceEvent.kctx_id)
  return _internal_kctx_id();
}
inline void MaliMaliKCPUFENCEWAITENDFtraceEvent::set_kctx_id(::uint32_t value) {
  _internal_set_kctx_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUFENCEWAITENDFtraceEvent.kctx_id)
}
inline ::uint32_t MaliMaliKCPUFENCEWAITENDFtraceEvent::_internal_kctx_id() const {
  return _impl_.kctx_id_;
}
inline void MaliMaliKCPUFENCEWAITENDFtraceEvent::_internal_set_kctx_id(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.kctx_id_ = value;
}

// optional uint32 id = 5;
inline bool MaliMaliKCPUFENCEWAITENDFtraceEvent::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void MaliMaliKCPUFENCEWAITENDFtraceEvent::clear_id() {
  _impl_.id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t MaliMaliKCPUFENCEWAITENDFtraceEvent::id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliKCPUFENCEWAITENDFtraceEvent.id)
  return _internal_id();
}
inline void MaliMaliKCPUFENCEWAITENDFtraceEvent::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliKCPUFENCEWAITENDFtraceEvent.id)
}
inline ::uint32_t MaliMaliKCPUFENCEWAITENDFtraceEvent::_internal_id() const {
  return _impl_.id_;
}
inline void MaliMaliKCPUFENCEWAITENDFtraceEvent::_internal_set_id(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// MaliMaliCSFINTERRUPTSTARTFtraceEvent

// optional int32 kctx_tgid = 1;
inline bool MaliMaliCSFINTERRUPTSTARTFtraceEvent::has_kctx_tgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MaliMaliCSFINTERRUPTSTARTFtraceEvent::clear_kctx_tgid() {
  _impl_.kctx_tgid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t MaliMaliCSFINTERRUPTSTARTFtraceEvent::kctx_tgid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliCSFINTERRUPTSTARTFtraceEvent.kctx_tgid)
  return _internal_kctx_tgid();
}
inline void MaliMaliCSFINTERRUPTSTARTFtraceEvent::set_kctx_tgid(::int32_t value) {
  _internal_set_kctx_tgid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliCSFINTERRUPTSTARTFtraceEvent.kctx_tgid)
}
inline ::int32_t MaliMaliCSFINTERRUPTSTARTFtraceEvent::_internal_kctx_tgid() const {
  return _impl_.kctx_tgid_;
}
inline void MaliMaliCSFINTERRUPTSTARTFtraceEvent::_internal_set_kctx_tgid(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.kctx_tgid_ = value;
}

// optional uint32 kctx_id = 2;
inline bool MaliMaliCSFINTERRUPTSTARTFtraceEvent::has_kctx_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MaliMaliCSFINTERRUPTSTARTFtraceEvent::clear_kctx_id() {
  _impl_.kctx_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t MaliMaliCSFINTERRUPTSTARTFtraceEvent::kctx_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliCSFINTERRUPTSTARTFtraceEvent.kctx_id)
  return _internal_kctx_id();
}
inline void MaliMaliCSFINTERRUPTSTARTFtraceEvent::set_kctx_id(::uint32_t value) {
  _internal_set_kctx_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliCSFINTERRUPTSTARTFtraceEvent.kctx_id)
}
inline ::uint32_t MaliMaliCSFINTERRUPTSTARTFtraceEvent::_internal_kctx_id() const {
  return _impl_.kctx_id_;
}
inline void MaliMaliCSFINTERRUPTSTARTFtraceEvent::_internal_set_kctx_id(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.kctx_id_ = value;
}

// optional uint64 info_val = 3;
inline bool MaliMaliCSFINTERRUPTSTARTFtraceEvent::has_info_val() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void MaliMaliCSFINTERRUPTSTARTFtraceEvent::clear_info_val() {
  _impl_.info_val_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t MaliMaliCSFINTERRUPTSTARTFtraceEvent::info_val() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliCSFINTERRUPTSTARTFtraceEvent.info_val)
  return _internal_info_val();
}
inline void MaliMaliCSFINTERRUPTSTARTFtraceEvent::set_info_val(::uint64_t value) {
  _internal_set_info_val(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliCSFINTERRUPTSTARTFtraceEvent.info_val)
}
inline ::uint64_t MaliMaliCSFINTERRUPTSTARTFtraceEvent::_internal_info_val() const {
  return _impl_.info_val_;
}
inline void MaliMaliCSFINTERRUPTSTARTFtraceEvent::_internal_set_info_val(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.info_val_ = value;
}

// -------------------------------------------------------------------

// MaliMaliCSFINTERRUPTENDFtraceEvent

// optional int32 kctx_tgid = 1;
inline bool MaliMaliCSFINTERRUPTENDFtraceEvent::has_kctx_tgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MaliMaliCSFINTERRUPTENDFtraceEvent::clear_kctx_tgid() {
  _impl_.kctx_tgid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t MaliMaliCSFINTERRUPTENDFtraceEvent::kctx_tgid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliCSFINTERRUPTENDFtraceEvent.kctx_tgid)
  return _internal_kctx_tgid();
}
inline void MaliMaliCSFINTERRUPTENDFtraceEvent::set_kctx_tgid(::int32_t value) {
  _internal_set_kctx_tgid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliCSFINTERRUPTENDFtraceEvent.kctx_tgid)
}
inline ::int32_t MaliMaliCSFINTERRUPTENDFtraceEvent::_internal_kctx_tgid() const {
  return _impl_.kctx_tgid_;
}
inline void MaliMaliCSFINTERRUPTENDFtraceEvent::_internal_set_kctx_tgid(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.kctx_tgid_ = value;
}

// optional uint32 kctx_id = 2;
inline bool MaliMaliCSFINTERRUPTENDFtraceEvent::has_kctx_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MaliMaliCSFINTERRUPTENDFtraceEvent::clear_kctx_id() {
  _impl_.kctx_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t MaliMaliCSFINTERRUPTENDFtraceEvent::kctx_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliCSFINTERRUPTENDFtraceEvent.kctx_id)
  return _internal_kctx_id();
}
inline void MaliMaliCSFINTERRUPTENDFtraceEvent::set_kctx_id(::uint32_t value) {
  _internal_set_kctx_id(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliCSFINTERRUPTENDFtraceEvent.kctx_id)
}
inline ::uint32_t MaliMaliCSFINTERRUPTENDFtraceEvent::_internal_kctx_id() const {
  return _impl_.kctx_id_;
}
inline void MaliMaliCSFINTERRUPTENDFtraceEvent::_internal_set_kctx_id(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.kctx_id_ = value;
}

// optional uint64 info_val = 3;
inline bool MaliMaliCSFINTERRUPTENDFtraceEvent::has_info_val() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void MaliMaliCSFINTERRUPTENDFtraceEvent::clear_info_val() {
  _impl_.info_val_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t MaliMaliCSFINTERRUPTENDFtraceEvent::info_val() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MaliMaliCSFINTERRUPTENDFtraceEvent.info_val)
  return _internal_info_val();
}
inline void MaliMaliCSFINTERRUPTENDFtraceEvent::set_info_val(::uint64_t value) {
  _internal_set_info_val(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MaliMaliCSFINTERRUPTENDFtraceEvent.info_val)
}
inline ::uint64_t MaliMaliCSFINTERRUPTENDFtraceEvent::_internal_info_val() const {
  return _impl_.info_val_;
}
inline void MaliMaliCSFINTERRUPTENDFtraceEvent::_internal_set_info_val(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.info_val_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fftrace_2fmali_2eproto_2epb_2eh
