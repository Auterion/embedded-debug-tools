// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/ftrace/compaction.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fftrace_2fcompaction_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fftrace_2fcompaction_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2ftrace_2fftrace_2fcompaction_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fcompaction_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_protos_2fperfetto_2ftrace_2fftrace_2fcompaction_2eproto;
namespace perfetto {
namespace protos {
class MmCompactionBeginFtraceEvent;
struct MmCompactionBeginFtraceEventDefaultTypeInternal;
extern MmCompactionBeginFtraceEventDefaultTypeInternal _MmCompactionBeginFtraceEvent_default_instance_;
class MmCompactionDeferCompactionFtraceEvent;
struct MmCompactionDeferCompactionFtraceEventDefaultTypeInternal;
extern MmCompactionDeferCompactionFtraceEventDefaultTypeInternal _MmCompactionDeferCompactionFtraceEvent_default_instance_;
class MmCompactionDeferResetFtraceEvent;
struct MmCompactionDeferResetFtraceEventDefaultTypeInternal;
extern MmCompactionDeferResetFtraceEventDefaultTypeInternal _MmCompactionDeferResetFtraceEvent_default_instance_;
class MmCompactionDeferredFtraceEvent;
struct MmCompactionDeferredFtraceEventDefaultTypeInternal;
extern MmCompactionDeferredFtraceEventDefaultTypeInternal _MmCompactionDeferredFtraceEvent_default_instance_;
class MmCompactionEndFtraceEvent;
struct MmCompactionEndFtraceEventDefaultTypeInternal;
extern MmCompactionEndFtraceEventDefaultTypeInternal _MmCompactionEndFtraceEvent_default_instance_;
class MmCompactionFinishedFtraceEvent;
struct MmCompactionFinishedFtraceEventDefaultTypeInternal;
extern MmCompactionFinishedFtraceEventDefaultTypeInternal _MmCompactionFinishedFtraceEvent_default_instance_;
class MmCompactionIsolateFreepagesFtraceEvent;
struct MmCompactionIsolateFreepagesFtraceEventDefaultTypeInternal;
extern MmCompactionIsolateFreepagesFtraceEventDefaultTypeInternal _MmCompactionIsolateFreepagesFtraceEvent_default_instance_;
class MmCompactionIsolateMigratepagesFtraceEvent;
struct MmCompactionIsolateMigratepagesFtraceEventDefaultTypeInternal;
extern MmCompactionIsolateMigratepagesFtraceEventDefaultTypeInternal _MmCompactionIsolateMigratepagesFtraceEvent_default_instance_;
class MmCompactionKcompactdSleepFtraceEvent;
struct MmCompactionKcompactdSleepFtraceEventDefaultTypeInternal;
extern MmCompactionKcompactdSleepFtraceEventDefaultTypeInternal _MmCompactionKcompactdSleepFtraceEvent_default_instance_;
class MmCompactionKcompactdWakeFtraceEvent;
struct MmCompactionKcompactdWakeFtraceEventDefaultTypeInternal;
extern MmCompactionKcompactdWakeFtraceEventDefaultTypeInternal _MmCompactionKcompactdWakeFtraceEvent_default_instance_;
class MmCompactionMigratepagesFtraceEvent;
struct MmCompactionMigratepagesFtraceEventDefaultTypeInternal;
extern MmCompactionMigratepagesFtraceEventDefaultTypeInternal _MmCompactionMigratepagesFtraceEvent_default_instance_;
class MmCompactionSuitableFtraceEvent;
struct MmCompactionSuitableFtraceEventDefaultTypeInternal;
extern MmCompactionSuitableFtraceEventDefaultTypeInternal _MmCompactionSuitableFtraceEvent_default_instance_;
class MmCompactionTryToCompactPagesFtraceEvent;
struct MmCompactionTryToCompactPagesFtraceEventDefaultTypeInternal;
extern MmCompactionTryToCompactPagesFtraceEventDefaultTypeInternal _MmCompactionTryToCompactPagesFtraceEvent_default_instance_;
class MmCompactionWakeupKcompactdFtraceEvent;
struct MmCompactionWakeupKcompactdFtraceEventDefaultTypeInternal;
extern MmCompactionWakeupKcompactdFtraceEventDefaultTypeInternal _MmCompactionWakeupKcompactdFtraceEvent_default_instance_;
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template <>
::perfetto::protos::MmCompactionBeginFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::MmCompactionBeginFtraceEvent>(Arena*);
template <>
::perfetto::protos::MmCompactionDeferCompactionFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::MmCompactionDeferCompactionFtraceEvent>(Arena*);
template <>
::perfetto::protos::MmCompactionDeferResetFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::MmCompactionDeferResetFtraceEvent>(Arena*);
template <>
::perfetto::protos::MmCompactionDeferredFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::MmCompactionDeferredFtraceEvent>(Arena*);
template <>
::perfetto::protos::MmCompactionEndFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::MmCompactionEndFtraceEvent>(Arena*);
template <>
::perfetto::protos::MmCompactionFinishedFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::MmCompactionFinishedFtraceEvent>(Arena*);
template <>
::perfetto::protos::MmCompactionIsolateFreepagesFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::MmCompactionIsolateFreepagesFtraceEvent>(Arena*);
template <>
::perfetto::protos::MmCompactionIsolateMigratepagesFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::MmCompactionIsolateMigratepagesFtraceEvent>(Arena*);
template <>
::perfetto::protos::MmCompactionKcompactdSleepFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::MmCompactionKcompactdSleepFtraceEvent>(Arena*);
template <>
::perfetto::protos::MmCompactionKcompactdWakeFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::MmCompactionKcompactdWakeFtraceEvent>(Arena*);
template <>
::perfetto::protos::MmCompactionMigratepagesFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::MmCompactionMigratepagesFtraceEvent>(Arena*);
template <>
::perfetto::protos::MmCompactionSuitableFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::MmCompactionSuitableFtraceEvent>(Arena*);
template <>
::perfetto::protos::MmCompactionTryToCompactPagesFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::MmCompactionTryToCompactPagesFtraceEvent>(Arena*);
template <>
::perfetto::protos::MmCompactionWakeupKcompactdFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::MmCompactionWakeupKcompactdFtraceEvent>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace perfetto {
namespace protos {

// ===================================================================


// -------------------------------------------------------------------

class MmCompactionBeginFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.MmCompactionBeginFtraceEvent) */ {
 public:
  inline MmCompactionBeginFtraceEvent() : MmCompactionBeginFtraceEvent(nullptr) {}
  ~MmCompactionBeginFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MmCompactionBeginFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MmCompactionBeginFtraceEvent(const MmCompactionBeginFtraceEvent& from);
  MmCompactionBeginFtraceEvent(MmCompactionBeginFtraceEvent&& from) noexcept
    : MmCompactionBeginFtraceEvent() {
    *this = ::std::move(from);
  }

  inline MmCompactionBeginFtraceEvent& operator=(const MmCompactionBeginFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MmCompactionBeginFtraceEvent& operator=(MmCompactionBeginFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MmCompactionBeginFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MmCompactionBeginFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const MmCompactionBeginFtraceEvent*>(
               &_MmCompactionBeginFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MmCompactionBeginFtraceEvent& a, MmCompactionBeginFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MmCompactionBeginFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MmCompactionBeginFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MmCompactionBeginFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MmCompactionBeginFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MmCompactionBeginFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MmCompactionBeginFtraceEvent& from) {
    MmCompactionBeginFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MmCompactionBeginFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.MmCompactionBeginFtraceEvent";
  }
  protected:
  explicit MmCompactionBeginFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kZoneStartFieldNumber = 1,
    kMigratePfnFieldNumber = 2,
    kFreePfnFieldNumber = 3,
    kZoneEndFieldNumber = 4,
    kSyncFieldNumber = 5,
  };
  // optional uint64 zone_start = 1;
  bool has_zone_start() const;
  void clear_zone_start() ;
  ::uint64_t zone_start() const;
  void set_zone_start(::uint64_t value);

  private:
  ::uint64_t _internal_zone_start() const;
  void _internal_set_zone_start(::uint64_t value);

  public:
  // optional uint64 migrate_pfn = 2;
  bool has_migrate_pfn() const;
  void clear_migrate_pfn() ;
  ::uint64_t migrate_pfn() const;
  void set_migrate_pfn(::uint64_t value);

  private:
  ::uint64_t _internal_migrate_pfn() const;
  void _internal_set_migrate_pfn(::uint64_t value);

  public:
  // optional uint64 free_pfn = 3;
  bool has_free_pfn() const;
  void clear_free_pfn() ;
  ::uint64_t free_pfn() const;
  void set_free_pfn(::uint64_t value);

  private:
  ::uint64_t _internal_free_pfn() const;
  void _internal_set_free_pfn(::uint64_t value);

  public:
  // optional uint64 zone_end = 4;
  bool has_zone_end() const;
  void clear_zone_end() ;
  ::uint64_t zone_end() const;
  void set_zone_end(::uint64_t value);

  private:
  ::uint64_t _internal_zone_end() const;
  void _internal_set_zone_end(::uint64_t value);

  public:
  // optional uint32 sync = 5;
  bool has_sync() const;
  void clear_sync() ;
  ::uint32_t sync() const;
  void set_sync(::uint32_t value);

  private:
  ::uint32_t _internal_sync() const;
  void _internal_set_sync(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.MmCompactionBeginFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::uint64_t zone_start_;
    ::uint64_t migrate_pfn_;
    ::uint64_t free_pfn_;
    ::uint64_t zone_end_;
    ::uint32_t sync_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fcompaction_2eproto;
};// -------------------------------------------------------------------

class MmCompactionDeferCompactionFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.MmCompactionDeferCompactionFtraceEvent) */ {
 public:
  inline MmCompactionDeferCompactionFtraceEvent() : MmCompactionDeferCompactionFtraceEvent(nullptr) {}
  ~MmCompactionDeferCompactionFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MmCompactionDeferCompactionFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MmCompactionDeferCompactionFtraceEvent(const MmCompactionDeferCompactionFtraceEvent& from);
  MmCompactionDeferCompactionFtraceEvent(MmCompactionDeferCompactionFtraceEvent&& from) noexcept
    : MmCompactionDeferCompactionFtraceEvent() {
    *this = ::std::move(from);
  }

  inline MmCompactionDeferCompactionFtraceEvent& operator=(const MmCompactionDeferCompactionFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MmCompactionDeferCompactionFtraceEvent& operator=(MmCompactionDeferCompactionFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MmCompactionDeferCompactionFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MmCompactionDeferCompactionFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const MmCompactionDeferCompactionFtraceEvent*>(
               &_MmCompactionDeferCompactionFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MmCompactionDeferCompactionFtraceEvent& a, MmCompactionDeferCompactionFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MmCompactionDeferCompactionFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MmCompactionDeferCompactionFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MmCompactionDeferCompactionFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MmCompactionDeferCompactionFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MmCompactionDeferCompactionFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MmCompactionDeferCompactionFtraceEvent& from) {
    MmCompactionDeferCompactionFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MmCompactionDeferCompactionFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.MmCompactionDeferCompactionFtraceEvent";
  }
  protected:
  explicit MmCompactionDeferCompactionFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNidFieldNumber = 1,
    kIdxFieldNumber = 2,
    kOrderFieldNumber = 3,
    kConsideredFieldNumber = 4,
    kDeferShiftFieldNumber = 5,
    kOrderFailedFieldNumber = 6,
  };
  // optional int32 nid = 1;
  bool has_nid() const;
  void clear_nid() ;
  ::int32_t nid() const;
  void set_nid(::int32_t value);

  private:
  ::int32_t _internal_nid() const;
  void _internal_set_nid(::int32_t value);

  public:
  // optional uint32 idx = 2;
  bool has_idx() const;
  void clear_idx() ;
  ::uint32_t idx() const;
  void set_idx(::uint32_t value);

  private:
  ::uint32_t _internal_idx() const;
  void _internal_set_idx(::uint32_t value);

  public:
  // optional int32 order = 3;
  bool has_order() const;
  void clear_order() ;
  ::int32_t order() const;
  void set_order(::int32_t value);

  private:
  ::int32_t _internal_order() const;
  void _internal_set_order(::int32_t value);

  public:
  // optional uint32 considered = 4;
  bool has_considered() const;
  void clear_considered() ;
  ::uint32_t considered() const;
  void set_considered(::uint32_t value);

  private:
  ::uint32_t _internal_considered() const;
  void _internal_set_considered(::uint32_t value);

  public:
  // optional uint32 defer_shift = 5;
  bool has_defer_shift() const;
  void clear_defer_shift() ;
  ::uint32_t defer_shift() const;
  void set_defer_shift(::uint32_t value);

  private:
  ::uint32_t _internal_defer_shift() const;
  void _internal_set_defer_shift(::uint32_t value);

  public:
  // optional int32 order_failed = 6;
  bool has_order_failed() const;
  void clear_order_failed() ;
  ::int32_t order_failed() const;
  void set_order_failed(::int32_t value);

  private:
  ::int32_t _internal_order_failed() const;
  void _internal_set_order_failed(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.MmCompactionDeferCompactionFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::int32_t nid_;
    ::uint32_t idx_;
    ::int32_t order_;
    ::uint32_t considered_;
    ::uint32_t defer_shift_;
    ::int32_t order_failed_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fcompaction_2eproto;
};// -------------------------------------------------------------------

class MmCompactionDeferredFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.MmCompactionDeferredFtraceEvent) */ {
 public:
  inline MmCompactionDeferredFtraceEvent() : MmCompactionDeferredFtraceEvent(nullptr) {}
  ~MmCompactionDeferredFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MmCompactionDeferredFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MmCompactionDeferredFtraceEvent(const MmCompactionDeferredFtraceEvent& from);
  MmCompactionDeferredFtraceEvent(MmCompactionDeferredFtraceEvent&& from) noexcept
    : MmCompactionDeferredFtraceEvent() {
    *this = ::std::move(from);
  }

  inline MmCompactionDeferredFtraceEvent& operator=(const MmCompactionDeferredFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MmCompactionDeferredFtraceEvent& operator=(MmCompactionDeferredFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MmCompactionDeferredFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MmCompactionDeferredFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const MmCompactionDeferredFtraceEvent*>(
               &_MmCompactionDeferredFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MmCompactionDeferredFtraceEvent& a, MmCompactionDeferredFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MmCompactionDeferredFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MmCompactionDeferredFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MmCompactionDeferredFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MmCompactionDeferredFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MmCompactionDeferredFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MmCompactionDeferredFtraceEvent& from) {
    MmCompactionDeferredFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MmCompactionDeferredFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.MmCompactionDeferredFtraceEvent";
  }
  protected:
  explicit MmCompactionDeferredFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNidFieldNumber = 1,
    kIdxFieldNumber = 2,
    kOrderFieldNumber = 3,
    kConsideredFieldNumber = 4,
    kDeferShiftFieldNumber = 5,
    kOrderFailedFieldNumber = 6,
  };
  // optional int32 nid = 1;
  bool has_nid() const;
  void clear_nid() ;
  ::int32_t nid() const;
  void set_nid(::int32_t value);

  private:
  ::int32_t _internal_nid() const;
  void _internal_set_nid(::int32_t value);

  public:
  // optional uint32 idx = 2;
  bool has_idx() const;
  void clear_idx() ;
  ::uint32_t idx() const;
  void set_idx(::uint32_t value);

  private:
  ::uint32_t _internal_idx() const;
  void _internal_set_idx(::uint32_t value);

  public:
  // optional int32 order = 3;
  bool has_order() const;
  void clear_order() ;
  ::int32_t order() const;
  void set_order(::int32_t value);

  private:
  ::int32_t _internal_order() const;
  void _internal_set_order(::int32_t value);

  public:
  // optional uint32 considered = 4;
  bool has_considered() const;
  void clear_considered() ;
  ::uint32_t considered() const;
  void set_considered(::uint32_t value);

  private:
  ::uint32_t _internal_considered() const;
  void _internal_set_considered(::uint32_t value);

  public:
  // optional uint32 defer_shift = 5;
  bool has_defer_shift() const;
  void clear_defer_shift() ;
  ::uint32_t defer_shift() const;
  void set_defer_shift(::uint32_t value);

  private:
  ::uint32_t _internal_defer_shift() const;
  void _internal_set_defer_shift(::uint32_t value);

  public:
  // optional int32 order_failed = 6;
  bool has_order_failed() const;
  void clear_order_failed() ;
  ::int32_t order_failed() const;
  void set_order_failed(::int32_t value);

  private:
  ::int32_t _internal_order_failed() const;
  void _internal_set_order_failed(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.MmCompactionDeferredFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::int32_t nid_;
    ::uint32_t idx_;
    ::int32_t order_;
    ::uint32_t considered_;
    ::uint32_t defer_shift_;
    ::int32_t order_failed_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fcompaction_2eproto;
};// -------------------------------------------------------------------

class MmCompactionDeferResetFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.MmCompactionDeferResetFtraceEvent) */ {
 public:
  inline MmCompactionDeferResetFtraceEvent() : MmCompactionDeferResetFtraceEvent(nullptr) {}
  ~MmCompactionDeferResetFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MmCompactionDeferResetFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MmCompactionDeferResetFtraceEvent(const MmCompactionDeferResetFtraceEvent& from);
  MmCompactionDeferResetFtraceEvent(MmCompactionDeferResetFtraceEvent&& from) noexcept
    : MmCompactionDeferResetFtraceEvent() {
    *this = ::std::move(from);
  }

  inline MmCompactionDeferResetFtraceEvent& operator=(const MmCompactionDeferResetFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MmCompactionDeferResetFtraceEvent& operator=(MmCompactionDeferResetFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MmCompactionDeferResetFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MmCompactionDeferResetFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const MmCompactionDeferResetFtraceEvent*>(
               &_MmCompactionDeferResetFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MmCompactionDeferResetFtraceEvent& a, MmCompactionDeferResetFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MmCompactionDeferResetFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MmCompactionDeferResetFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MmCompactionDeferResetFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MmCompactionDeferResetFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MmCompactionDeferResetFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MmCompactionDeferResetFtraceEvent& from) {
    MmCompactionDeferResetFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MmCompactionDeferResetFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.MmCompactionDeferResetFtraceEvent";
  }
  protected:
  explicit MmCompactionDeferResetFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNidFieldNumber = 1,
    kIdxFieldNumber = 2,
    kOrderFieldNumber = 3,
    kConsideredFieldNumber = 4,
    kDeferShiftFieldNumber = 5,
    kOrderFailedFieldNumber = 6,
  };
  // optional int32 nid = 1;
  bool has_nid() const;
  void clear_nid() ;
  ::int32_t nid() const;
  void set_nid(::int32_t value);

  private:
  ::int32_t _internal_nid() const;
  void _internal_set_nid(::int32_t value);

  public:
  // optional uint32 idx = 2;
  bool has_idx() const;
  void clear_idx() ;
  ::uint32_t idx() const;
  void set_idx(::uint32_t value);

  private:
  ::uint32_t _internal_idx() const;
  void _internal_set_idx(::uint32_t value);

  public:
  // optional int32 order = 3;
  bool has_order() const;
  void clear_order() ;
  ::int32_t order() const;
  void set_order(::int32_t value);

  private:
  ::int32_t _internal_order() const;
  void _internal_set_order(::int32_t value);

  public:
  // optional uint32 considered = 4;
  bool has_considered() const;
  void clear_considered() ;
  ::uint32_t considered() const;
  void set_considered(::uint32_t value);

  private:
  ::uint32_t _internal_considered() const;
  void _internal_set_considered(::uint32_t value);

  public:
  // optional uint32 defer_shift = 5;
  bool has_defer_shift() const;
  void clear_defer_shift() ;
  ::uint32_t defer_shift() const;
  void set_defer_shift(::uint32_t value);

  private:
  ::uint32_t _internal_defer_shift() const;
  void _internal_set_defer_shift(::uint32_t value);

  public:
  // optional int32 order_failed = 6;
  bool has_order_failed() const;
  void clear_order_failed() ;
  ::int32_t order_failed() const;
  void set_order_failed(::int32_t value);

  private:
  ::int32_t _internal_order_failed() const;
  void _internal_set_order_failed(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.MmCompactionDeferResetFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::int32_t nid_;
    ::uint32_t idx_;
    ::int32_t order_;
    ::uint32_t considered_;
    ::uint32_t defer_shift_;
    ::int32_t order_failed_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fcompaction_2eproto;
};// -------------------------------------------------------------------

class MmCompactionEndFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.MmCompactionEndFtraceEvent) */ {
 public:
  inline MmCompactionEndFtraceEvent() : MmCompactionEndFtraceEvent(nullptr) {}
  ~MmCompactionEndFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MmCompactionEndFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MmCompactionEndFtraceEvent(const MmCompactionEndFtraceEvent& from);
  MmCompactionEndFtraceEvent(MmCompactionEndFtraceEvent&& from) noexcept
    : MmCompactionEndFtraceEvent() {
    *this = ::std::move(from);
  }

  inline MmCompactionEndFtraceEvent& operator=(const MmCompactionEndFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MmCompactionEndFtraceEvent& operator=(MmCompactionEndFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MmCompactionEndFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MmCompactionEndFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const MmCompactionEndFtraceEvent*>(
               &_MmCompactionEndFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MmCompactionEndFtraceEvent& a, MmCompactionEndFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MmCompactionEndFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MmCompactionEndFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MmCompactionEndFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MmCompactionEndFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MmCompactionEndFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MmCompactionEndFtraceEvent& from) {
    MmCompactionEndFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MmCompactionEndFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.MmCompactionEndFtraceEvent";
  }
  protected:
  explicit MmCompactionEndFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kZoneStartFieldNumber = 1,
    kMigratePfnFieldNumber = 2,
    kFreePfnFieldNumber = 3,
    kZoneEndFieldNumber = 4,
    kSyncFieldNumber = 5,
    kStatusFieldNumber = 6,
  };
  // optional uint64 zone_start = 1;
  bool has_zone_start() const;
  void clear_zone_start() ;
  ::uint64_t zone_start() const;
  void set_zone_start(::uint64_t value);

  private:
  ::uint64_t _internal_zone_start() const;
  void _internal_set_zone_start(::uint64_t value);

  public:
  // optional uint64 migrate_pfn = 2;
  bool has_migrate_pfn() const;
  void clear_migrate_pfn() ;
  ::uint64_t migrate_pfn() const;
  void set_migrate_pfn(::uint64_t value);

  private:
  ::uint64_t _internal_migrate_pfn() const;
  void _internal_set_migrate_pfn(::uint64_t value);

  public:
  // optional uint64 free_pfn = 3;
  bool has_free_pfn() const;
  void clear_free_pfn() ;
  ::uint64_t free_pfn() const;
  void set_free_pfn(::uint64_t value);

  private:
  ::uint64_t _internal_free_pfn() const;
  void _internal_set_free_pfn(::uint64_t value);

  public:
  // optional uint64 zone_end = 4;
  bool has_zone_end() const;
  void clear_zone_end() ;
  ::uint64_t zone_end() const;
  void set_zone_end(::uint64_t value);

  private:
  ::uint64_t _internal_zone_end() const;
  void _internal_set_zone_end(::uint64_t value);

  public:
  // optional uint32 sync = 5;
  bool has_sync() const;
  void clear_sync() ;
  ::uint32_t sync() const;
  void set_sync(::uint32_t value);

  private:
  ::uint32_t _internal_sync() const;
  void _internal_set_sync(::uint32_t value);

  public:
  // optional int32 status = 6;
  bool has_status() const;
  void clear_status() ;
  ::int32_t status() const;
  void set_status(::int32_t value);

  private:
  ::int32_t _internal_status() const;
  void _internal_set_status(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.MmCompactionEndFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::uint64_t zone_start_;
    ::uint64_t migrate_pfn_;
    ::uint64_t free_pfn_;
    ::uint64_t zone_end_;
    ::uint32_t sync_;
    ::int32_t status_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fcompaction_2eproto;
};// -------------------------------------------------------------------

class MmCompactionFinishedFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.MmCompactionFinishedFtraceEvent) */ {
 public:
  inline MmCompactionFinishedFtraceEvent() : MmCompactionFinishedFtraceEvent(nullptr) {}
  ~MmCompactionFinishedFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MmCompactionFinishedFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MmCompactionFinishedFtraceEvent(const MmCompactionFinishedFtraceEvent& from);
  MmCompactionFinishedFtraceEvent(MmCompactionFinishedFtraceEvent&& from) noexcept
    : MmCompactionFinishedFtraceEvent() {
    *this = ::std::move(from);
  }

  inline MmCompactionFinishedFtraceEvent& operator=(const MmCompactionFinishedFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MmCompactionFinishedFtraceEvent& operator=(MmCompactionFinishedFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MmCompactionFinishedFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MmCompactionFinishedFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const MmCompactionFinishedFtraceEvent*>(
               &_MmCompactionFinishedFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MmCompactionFinishedFtraceEvent& a, MmCompactionFinishedFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MmCompactionFinishedFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MmCompactionFinishedFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MmCompactionFinishedFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MmCompactionFinishedFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MmCompactionFinishedFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MmCompactionFinishedFtraceEvent& from) {
    MmCompactionFinishedFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MmCompactionFinishedFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.MmCompactionFinishedFtraceEvent";
  }
  protected:
  explicit MmCompactionFinishedFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNidFieldNumber = 1,
    kIdxFieldNumber = 2,
    kOrderFieldNumber = 3,
    kRetFieldNumber = 4,
  };
  // optional int32 nid = 1;
  bool has_nid() const;
  void clear_nid() ;
  ::int32_t nid() const;
  void set_nid(::int32_t value);

  private:
  ::int32_t _internal_nid() const;
  void _internal_set_nid(::int32_t value);

  public:
  // optional uint32 idx = 2;
  bool has_idx() const;
  void clear_idx() ;
  ::uint32_t idx() const;
  void set_idx(::uint32_t value);

  private:
  ::uint32_t _internal_idx() const;
  void _internal_set_idx(::uint32_t value);

  public:
  // optional int32 order = 3;
  bool has_order() const;
  void clear_order() ;
  ::int32_t order() const;
  void set_order(::int32_t value);

  private:
  ::int32_t _internal_order() const;
  void _internal_set_order(::int32_t value);

  public:
  // optional int32 ret = 4;
  bool has_ret() const;
  void clear_ret() ;
  ::int32_t ret() const;
  void set_ret(::int32_t value);

  private:
  ::int32_t _internal_ret() const;
  void _internal_set_ret(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.MmCompactionFinishedFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::int32_t nid_;
    ::uint32_t idx_;
    ::int32_t order_;
    ::int32_t ret_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fcompaction_2eproto;
};// -------------------------------------------------------------------

class MmCompactionIsolateFreepagesFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.MmCompactionIsolateFreepagesFtraceEvent) */ {
 public:
  inline MmCompactionIsolateFreepagesFtraceEvent() : MmCompactionIsolateFreepagesFtraceEvent(nullptr) {}
  ~MmCompactionIsolateFreepagesFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MmCompactionIsolateFreepagesFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MmCompactionIsolateFreepagesFtraceEvent(const MmCompactionIsolateFreepagesFtraceEvent& from);
  MmCompactionIsolateFreepagesFtraceEvent(MmCompactionIsolateFreepagesFtraceEvent&& from) noexcept
    : MmCompactionIsolateFreepagesFtraceEvent() {
    *this = ::std::move(from);
  }

  inline MmCompactionIsolateFreepagesFtraceEvent& operator=(const MmCompactionIsolateFreepagesFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MmCompactionIsolateFreepagesFtraceEvent& operator=(MmCompactionIsolateFreepagesFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MmCompactionIsolateFreepagesFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MmCompactionIsolateFreepagesFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const MmCompactionIsolateFreepagesFtraceEvent*>(
               &_MmCompactionIsolateFreepagesFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MmCompactionIsolateFreepagesFtraceEvent& a, MmCompactionIsolateFreepagesFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MmCompactionIsolateFreepagesFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MmCompactionIsolateFreepagesFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MmCompactionIsolateFreepagesFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MmCompactionIsolateFreepagesFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MmCompactionIsolateFreepagesFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MmCompactionIsolateFreepagesFtraceEvent& from) {
    MmCompactionIsolateFreepagesFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MmCompactionIsolateFreepagesFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.MmCompactionIsolateFreepagesFtraceEvent";
  }
  protected:
  explicit MmCompactionIsolateFreepagesFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStartPfnFieldNumber = 1,
    kEndPfnFieldNumber = 2,
    kNrScannedFieldNumber = 3,
    kNrTakenFieldNumber = 4,
  };
  // optional uint64 start_pfn = 1;
  bool has_start_pfn() const;
  void clear_start_pfn() ;
  ::uint64_t start_pfn() const;
  void set_start_pfn(::uint64_t value);

  private:
  ::uint64_t _internal_start_pfn() const;
  void _internal_set_start_pfn(::uint64_t value);

  public:
  // optional uint64 end_pfn = 2;
  bool has_end_pfn() const;
  void clear_end_pfn() ;
  ::uint64_t end_pfn() const;
  void set_end_pfn(::uint64_t value);

  private:
  ::uint64_t _internal_end_pfn() const;
  void _internal_set_end_pfn(::uint64_t value);

  public:
  // optional uint64 nr_scanned = 3;
  bool has_nr_scanned() const;
  void clear_nr_scanned() ;
  ::uint64_t nr_scanned() const;
  void set_nr_scanned(::uint64_t value);

  private:
  ::uint64_t _internal_nr_scanned() const;
  void _internal_set_nr_scanned(::uint64_t value);

  public:
  // optional uint64 nr_taken = 4;
  bool has_nr_taken() const;
  void clear_nr_taken() ;
  ::uint64_t nr_taken() const;
  void set_nr_taken(::uint64_t value);

  private:
  ::uint64_t _internal_nr_taken() const;
  void _internal_set_nr_taken(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.MmCompactionIsolateFreepagesFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::uint64_t start_pfn_;
    ::uint64_t end_pfn_;
    ::uint64_t nr_scanned_;
    ::uint64_t nr_taken_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fcompaction_2eproto;
};// -------------------------------------------------------------------

class MmCompactionIsolateMigratepagesFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.MmCompactionIsolateMigratepagesFtraceEvent) */ {
 public:
  inline MmCompactionIsolateMigratepagesFtraceEvent() : MmCompactionIsolateMigratepagesFtraceEvent(nullptr) {}
  ~MmCompactionIsolateMigratepagesFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MmCompactionIsolateMigratepagesFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MmCompactionIsolateMigratepagesFtraceEvent(const MmCompactionIsolateMigratepagesFtraceEvent& from);
  MmCompactionIsolateMigratepagesFtraceEvent(MmCompactionIsolateMigratepagesFtraceEvent&& from) noexcept
    : MmCompactionIsolateMigratepagesFtraceEvent() {
    *this = ::std::move(from);
  }

  inline MmCompactionIsolateMigratepagesFtraceEvent& operator=(const MmCompactionIsolateMigratepagesFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MmCompactionIsolateMigratepagesFtraceEvent& operator=(MmCompactionIsolateMigratepagesFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MmCompactionIsolateMigratepagesFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MmCompactionIsolateMigratepagesFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const MmCompactionIsolateMigratepagesFtraceEvent*>(
               &_MmCompactionIsolateMigratepagesFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MmCompactionIsolateMigratepagesFtraceEvent& a, MmCompactionIsolateMigratepagesFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MmCompactionIsolateMigratepagesFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MmCompactionIsolateMigratepagesFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MmCompactionIsolateMigratepagesFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MmCompactionIsolateMigratepagesFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MmCompactionIsolateMigratepagesFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MmCompactionIsolateMigratepagesFtraceEvent& from) {
    MmCompactionIsolateMigratepagesFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MmCompactionIsolateMigratepagesFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.MmCompactionIsolateMigratepagesFtraceEvent";
  }
  protected:
  explicit MmCompactionIsolateMigratepagesFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStartPfnFieldNumber = 1,
    kEndPfnFieldNumber = 2,
    kNrScannedFieldNumber = 3,
    kNrTakenFieldNumber = 4,
  };
  // optional uint64 start_pfn = 1;
  bool has_start_pfn() const;
  void clear_start_pfn() ;
  ::uint64_t start_pfn() const;
  void set_start_pfn(::uint64_t value);

  private:
  ::uint64_t _internal_start_pfn() const;
  void _internal_set_start_pfn(::uint64_t value);

  public:
  // optional uint64 end_pfn = 2;
  bool has_end_pfn() const;
  void clear_end_pfn() ;
  ::uint64_t end_pfn() const;
  void set_end_pfn(::uint64_t value);

  private:
  ::uint64_t _internal_end_pfn() const;
  void _internal_set_end_pfn(::uint64_t value);

  public:
  // optional uint64 nr_scanned = 3;
  bool has_nr_scanned() const;
  void clear_nr_scanned() ;
  ::uint64_t nr_scanned() const;
  void set_nr_scanned(::uint64_t value);

  private:
  ::uint64_t _internal_nr_scanned() const;
  void _internal_set_nr_scanned(::uint64_t value);

  public:
  // optional uint64 nr_taken = 4;
  bool has_nr_taken() const;
  void clear_nr_taken() ;
  ::uint64_t nr_taken() const;
  void set_nr_taken(::uint64_t value);

  private:
  ::uint64_t _internal_nr_taken() const;
  void _internal_set_nr_taken(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.MmCompactionIsolateMigratepagesFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::uint64_t start_pfn_;
    ::uint64_t end_pfn_;
    ::uint64_t nr_scanned_;
    ::uint64_t nr_taken_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fcompaction_2eproto;
};// -------------------------------------------------------------------

class MmCompactionKcompactdSleepFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.MmCompactionKcompactdSleepFtraceEvent) */ {
 public:
  inline MmCompactionKcompactdSleepFtraceEvent() : MmCompactionKcompactdSleepFtraceEvent(nullptr) {}
  ~MmCompactionKcompactdSleepFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MmCompactionKcompactdSleepFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MmCompactionKcompactdSleepFtraceEvent(const MmCompactionKcompactdSleepFtraceEvent& from);
  MmCompactionKcompactdSleepFtraceEvent(MmCompactionKcompactdSleepFtraceEvent&& from) noexcept
    : MmCompactionKcompactdSleepFtraceEvent() {
    *this = ::std::move(from);
  }

  inline MmCompactionKcompactdSleepFtraceEvent& operator=(const MmCompactionKcompactdSleepFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MmCompactionKcompactdSleepFtraceEvent& operator=(MmCompactionKcompactdSleepFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MmCompactionKcompactdSleepFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MmCompactionKcompactdSleepFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const MmCompactionKcompactdSleepFtraceEvent*>(
               &_MmCompactionKcompactdSleepFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MmCompactionKcompactdSleepFtraceEvent& a, MmCompactionKcompactdSleepFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MmCompactionKcompactdSleepFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MmCompactionKcompactdSleepFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MmCompactionKcompactdSleepFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MmCompactionKcompactdSleepFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MmCompactionKcompactdSleepFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MmCompactionKcompactdSleepFtraceEvent& from) {
    MmCompactionKcompactdSleepFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MmCompactionKcompactdSleepFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.MmCompactionKcompactdSleepFtraceEvent";
  }
  protected:
  explicit MmCompactionKcompactdSleepFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNidFieldNumber = 1,
  };
  // optional int32 nid = 1;
  bool has_nid() const;
  void clear_nid() ;
  ::int32_t nid() const;
  void set_nid(::int32_t value);

  private:
  ::int32_t _internal_nid() const;
  void _internal_set_nid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.MmCompactionKcompactdSleepFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::int32_t nid_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fcompaction_2eproto;
};// -------------------------------------------------------------------

class MmCompactionKcompactdWakeFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.MmCompactionKcompactdWakeFtraceEvent) */ {
 public:
  inline MmCompactionKcompactdWakeFtraceEvent() : MmCompactionKcompactdWakeFtraceEvent(nullptr) {}
  ~MmCompactionKcompactdWakeFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MmCompactionKcompactdWakeFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MmCompactionKcompactdWakeFtraceEvent(const MmCompactionKcompactdWakeFtraceEvent& from);
  MmCompactionKcompactdWakeFtraceEvent(MmCompactionKcompactdWakeFtraceEvent&& from) noexcept
    : MmCompactionKcompactdWakeFtraceEvent() {
    *this = ::std::move(from);
  }

  inline MmCompactionKcompactdWakeFtraceEvent& operator=(const MmCompactionKcompactdWakeFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MmCompactionKcompactdWakeFtraceEvent& operator=(MmCompactionKcompactdWakeFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MmCompactionKcompactdWakeFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MmCompactionKcompactdWakeFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const MmCompactionKcompactdWakeFtraceEvent*>(
               &_MmCompactionKcompactdWakeFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MmCompactionKcompactdWakeFtraceEvent& a, MmCompactionKcompactdWakeFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MmCompactionKcompactdWakeFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MmCompactionKcompactdWakeFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MmCompactionKcompactdWakeFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MmCompactionKcompactdWakeFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MmCompactionKcompactdWakeFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MmCompactionKcompactdWakeFtraceEvent& from) {
    MmCompactionKcompactdWakeFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MmCompactionKcompactdWakeFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.MmCompactionKcompactdWakeFtraceEvent";
  }
  protected:
  explicit MmCompactionKcompactdWakeFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNidFieldNumber = 1,
    kOrderFieldNumber = 2,
    kClasszoneIdxFieldNumber = 3,
    kHighestZoneidxFieldNumber = 4,
  };
  // optional int32 nid = 1;
  bool has_nid() const;
  void clear_nid() ;
  ::int32_t nid() const;
  void set_nid(::int32_t value);

  private:
  ::int32_t _internal_nid() const;
  void _internal_set_nid(::int32_t value);

  public:
  // optional int32 order = 2;
  bool has_order() const;
  void clear_order() ;
  ::int32_t order() const;
  void set_order(::int32_t value);

  private:
  ::int32_t _internal_order() const;
  void _internal_set_order(::int32_t value);

  public:
  // optional uint32 classzone_idx = 3;
  bool has_classzone_idx() const;
  void clear_classzone_idx() ;
  ::uint32_t classzone_idx() const;
  void set_classzone_idx(::uint32_t value);

  private:
  ::uint32_t _internal_classzone_idx() const;
  void _internal_set_classzone_idx(::uint32_t value);

  public:
  // optional uint32 highest_zoneidx = 4;
  bool has_highest_zoneidx() const;
  void clear_highest_zoneidx() ;
  ::uint32_t highest_zoneidx() const;
  void set_highest_zoneidx(::uint32_t value);

  private:
  ::uint32_t _internal_highest_zoneidx() const;
  void _internal_set_highest_zoneidx(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.MmCompactionKcompactdWakeFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::int32_t nid_;
    ::int32_t order_;
    ::uint32_t classzone_idx_;
    ::uint32_t highest_zoneidx_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fcompaction_2eproto;
};// -------------------------------------------------------------------

class MmCompactionMigratepagesFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.MmCompactionMigratepagesFtraceEvent) */ {
 public:
  inline MmCompactionMigratepagesFtraceEvent() : MmCompactionMigratepagesFtraceEvent(nullptr) {}
  ~MmCompactionMigratepagesFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MmCompactionMigratepagesFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MmCompactionMigratepagesFtraceEvent(const MmCompactionMigratepagesFtraceEvent& from);
  MmCompactionMigratepagesFtraceEvent(MmCompactionMigratepagesFtraceEvent&& from) noexcept
    : MmCompactionMigratepagesFtraceEvent() {
    *this = ::std::move(from);
  }

  inline MmCompactionMigratepagesFtraceEvent& operator=(const MmCompactionMigratepagesFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MmCompactionMigratepagesFtraceEvent& operator=(MmCompactionMigratepagesFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MmCompactionMigratepagesFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MmCompactionMigratepagesFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const MmCompactionMigratepagesFtraceEvent*>(
               &_MmCompactionMigratepagesFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(MmCompactionMigratepagesFtraceEvent& a, MmCompactionMigratepagesFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MmCompactionMigratepagesFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MmCompactionMigratepagesFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MmCompactionMigratepagesFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MmCompactionMigratepagesFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MmCompactionMigratepagesFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MmCompactionMigratepagesFtraceEvent& from) {
    MmCompactionMigratepagesFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MmCompactionMigratepagesFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.MmCompactionMigratepagesFtraceEvent";
  }
  protected:
  explicit MmCompactionMigratepagesFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNrMigratedFieldNumber = 1,
    kNrFailedFieldNumber = 2,
  };
  // optional uint64 nr_migrated = 1;
  bool has_nr_migrated() const;
  void clear_nr_migrated() ;
  ::uint64_t nr_migrated() const;
  void set_nr_migrated(::uint64_t value);

  private:
  ::uint64_t _internal_nr_migrated() const;
  void _internal_set_nr_migrated(::uint64_t value);

  public:
  // optional uint64 nr_failed = 2;
  bool has_nr_failed() const;
  void clear_nr_failed() ;
  ::uint64_t nr_failed() const;
  void set_nr_failed(::uint64_t value);

  private:
  ::uint64_t _internal_nr_failed() const;
  void _internal_set_nr_failed(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.MmCompactionMigratepagesFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::uint64_t nr_migrated_;
    ::uint64_t nr_failed_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fcompaction_2eproto;
};// -------------------------------------------------------------------

class MmCompactionSuitableFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.MmCompactionSuitableFtraceEvent) */ {
 public:
  inline MmCompactionSuitableFtraceEvent() : MmCompactionSuitableFtraceEvent(nullptr) {}
  ~MmCompactionSuitableFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MmCompactionSuitableFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MmCompactionSuitableFtraceEvent(const MmCompactionSuitableFtraceEvent& from);
  MmCompactionSuitableFtraceEvent(MmCompactionSuitableFtraceEvent&& from) noexcept
    : MmCompactionSuitableFtraceEvent() {
    *this = ::std::move(from);
  }

  inline MmCompactionSuitableFtraceEvent& operator=(const MmCompactionSuitableFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MmCompactionSuitableFtraceEvent& operator=(MmCompactionSuitableFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MmCompactionSuitableFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MmCompactionSuitableFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const MmCompactionSuitableFtraceEvent*>(
               &_MmCompactionSuitableFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MmCompactionSuitableFtraceEvent& a, MmCompactionSuitableFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MmCompactionSuitableFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MmCompactionSuitableFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MmCompactionSuitableFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MmCompactionSuitableFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MmCompactionSuitableFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MmCompactionSuitableFtraceEvent& from) {
    MmCompactionSuitableFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MmCompactionSuitableFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.MmCompactionSuitableFtraceEvent";
  }
  protected:
  explicit MmCompactionSuitableFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNidFieldNumber = 1,
    kIdxFieldNumber = 2,
    kOrderFieldNumber = 3,
    kRetFieldNumber = 4,
  };
  // optional int32 nid = 1;
  bool has_nid() const;
  void clear_nid() ;
  ::int32_t nid() const;
  void set_nid(::int32_t value);

  private:
  ::int32_t _internal_nid() const;
  void _internal_set_nid(::int32_t value);

  public:
  // optional uint32 idx = 2;
  bool has_idx() const;
  void clear_idx() ;
  ::uint32_t idx() const;
  void set_idx(::uint32_t value);

  private:
  ::uint32_t _internal_idx() const;
  void _internal_set_idx(::uint32_t value);

  public:
  // optional int32 order = 3;
  bool has_order() const;
  void clear_order() ;
  ::int32_t order() const;
  void set_order(::int32_t value);

  private:
  ::int32_t _internal_order() const;
  void _internal_set_order(::int32_t value);

  public:
  // optional int32 ret = 4;
  bool has_ret() const;
  void clear_ret() ;
  ::int32_t ret() const;
  void set_ret(::int32_t value);

  private:
  ::int32_t _internal_ret() const;
  void _internal_set_ret(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.MmCompactionSuitableFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::int32_t nid_;
    ::uint32_t idx_;
    ::int32_t order_;
    ::int32_t ret_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fcompaction_2eproto;
};// -------------------------------------------------------------------

class MmCompactionTryToCompactPagesFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.MmCompactionTryToCompactPagesFtraceEvent) */ {
 public:
  inline MmCompactionTryToCompactPagesFtraceEvent() : MmCompactionTryToCompactPagesFtraceEvent(nullptr) {}
  ~MmCompactionTryToCompactPagesFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MmCompactionTryToCompactPagesFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MmCompactionTryToCompactPagesFtraceEvent(const MmCompactionTryToCompactPagesFtraceEvent& from);
  MmCompactionTryToCompactPagesFtraceEvent(MmCompactionTryToCompactPagesFtraceEvent&& from) noexcept
    : MmCompactionTryToCompactPagesFtraceEvent() {
    *this = ::std::move(from);
  }

  inline MmCompactionTryToCompactPagesFtraceEvent& operator=(const MmCompactionTryToCompactPagesFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MmCompactionTryToCompactPagesFtraceEvent& operator=(MmCompactionTryToCompactPagesFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MmCompactionTryToCompactPagesFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MmCompactionTryToCompactPagesFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const MmCompactionTryToCompactPagesFtraceEvent*>(
               &_MmCompactionTryToCompactPagesFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(MmCompactionTryToCompactPagesFtraceEvent& a, MmCompactionTryToCompactPagesFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MmCompactionTryToCompactPagesFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MmCompactionTryToCompactPagesFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MmCompactionTryToCompactPagesFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MmCompactionTryToCompactPagesFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MmCompactionTryToCompactPagesFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MmCompactionTryToCompactPagesFtraceEvent& from) {
    MmCompactionTryToCompactPagesFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MmCompactionTryToCompactPagesFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.MmCompactionTryToCompactPagesFtraceEvent";
  }
  protected:
  explicit MmCompactionTryToCompactPagesFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrderFieldNumber = 1,
    kGfpMaskFieldNumber = 2,
    kModeFieldNumber = 3,
    kPrioFieldNumber = 4,
  };
  // optional int32 order = 1;
  bool has_order() const;
  void clear_order() ;
  ::int32_t order() const;
  void set_order(::int32_t value);

  private:
  ::int32_t _internal_order() const;
  void _internal_set_order(::int32_t value);

  public:
  // optional uint32 gfp_mask = 2;
  bool has_gfp_mask() const;
  void clear_gfp_mask() ;
  ::uint32_t gfp_mask() const;
  void set_gfp_mask(::uint32_t value);

  private:
  ::uint32_t _internal_gfp_mask() const;
  void _internal_set_gfp_mask(::uint32_t value);

  public:
  // optional uint32 mode = 3;
  bool has_mode() const;
  void clear_mode() ;
  ::uint32_t mode() const;
  void set_mode(::uint32_t value);

  private:
  ::uint32_t _internal_mode() const;
  void _internal_set_mode(::uint32_t value);

  public:
  // optional int32 prio = 4;
  bool has_prio() const;
  void clear_prio() ;
  ::int32_t prio() const;
  void set_prio(::int32_t value);

  private:
  ::int32_t _internal_prio() const;
  void _internal_set_prio(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.MmCompactionTryToCompactPagesFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::int32_t order_;
    ::uint32_t gfp_mask_;
    ::uint32_t mode_;
    ::int32_t prio_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fcompaction_2eproto;
};// -------------------------------------------------------------------

class MmCompactionWakeupKcompactdFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.MmCompactionWakeupKcompactdFtraceEvent) */ {
 public:
  inline MmCompactionWakeupKcompactdFtraceEvent() : MmCompactionWakeupKcompactdFtraceEvent(nullptr) {}
  ~MmCompactionWakeupKcompactdFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MmCompactionWakeupKcompactdFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MmCompactionWakeupKcompactdFtraceEvent(const MmCompactionWakeupKcompactdFtraceEvent& from);
  MmCompactionWakeupKcompactdFtraceEvent(MmCompactionWakeupKcompactdFtraceEvent&& from) noexcept
    : MmCompactionWakeupKcompactdFtraceEvent() {
    *this = ::std::move(from);
  }

  inline MmCompactionWakeupKcompactdFtraceEvent& operator=(const MmCompactionWakeupKcompactdFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MmCompactionWakeupKcompactdFtraceEvent& operator=(MmCompactionWakeupKcompactdFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MmCompactionWakeupKcompactdFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MmCompactionWakeupKcompactdFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const MmCompactionWakeupKcompactdFtraceEvent*>(
               &_MmCompactionWakeupKcompactdFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(MmCompactionWakeupKcompactdFtraceEvent& a, MmCompactionWakeupKcompactdFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MmCompactionWakeupKcompactdFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MmCompactionWakeupKcompactdFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MmCompactionWakeupKcompactdFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MmCompactionWakeupKcompactdFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MmCompactionWakeupKcompactdFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MmCompactionWakeupKcompactdFtraceEvent& from) {
    MmCompactionWakeupKcompactdFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MmCompactionWakeupKcompactdFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.MmCompactionWakeupKcompactdFtraceEvent";
  }
  protected:
  explicit MmCompactionWakeupKcompactdFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNidFieldNumber = 1,
    kOrderFieldNumber = 2,
    kClasszoneIdxFieldNumber = 3,
    kHighestZoneidxFieldNumber = 4,
  };
  // optional int32 nid = 1;
  bool has_nid() const;
  void clear_nid() ;
  ::int32_t nid() const;
  void set_nid(::int32_t value);

  private:
  ::int32_t _internal_nid() const;
  void _internal_set_nid(::int32_t value);

  public:
  // optional int32 order = 2;
  bool has_order() const;
  void clear_order() ;
  ::int32_t order() const;
  void set_order(::int32_t value);

  private:
  ::int32_t _internal_order() const;
  void _internal_set_order(::int32_t value);

  public:
  // optional uint32 classzone_idx = 3;
  bool has_classzone_idx() const;
  void clear_classzone_idx() ;
  ::uint32_t classzone_idx() const;
  void set_classzone_idx(::uint32_t value);

  private:
  ::uint32_t _internal_classzone_idx() const;
  void _internal_set_classzone_idx(::uint32_t value);

  public:
  // optional uint32 highest_zoneidx = 4;
  bool has_highest_zoneidx() const;
  void clear_highest_zoneidx() ;
  ::uint32_t highest_zoneidx() const;
  void set_highest_zoneidx(::uint32_t value);

  private:
  ::uint32_t _internal_highest_zoneidx() const;
  void _internal_set_highest_zoneidx(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.MmCompactionWakeupKcompactdFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::int32_t nid_;
    ::int32_t order_;
    ::uint32_t classzone_idx_;
    ::uint32_t highest_zoneidx_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fcompaction_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MmCompactionBeginFtraceEvent

// optional uint64 zone_start = 1;
inline bool MmCompactionBeginFtraceEvent::has_zone_start() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MmCompactionBeginFtraceEvent::clear_zone_start() {
  _impl_.zone_start_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t MmCompactionBeginFtraceEvent::zone_start() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionBeginFtraceEvent.zone_start)
  return _internal_zone_start();
}
inline void MmCompactionBeginFtraceEvent::set_zone_start(::uint64_t value) {
  _internal_set_zone_start(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionBeginFtraceEvent.zone_start)
}
inline ::uint64_t MmCompactionBeginFtraceEvent::_internal_zone_start() const {
  return _impl_.zone_start_;
}
inline void MmCompactionBeginFtraceEvent::_internal_set_zone_start(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.zone_start_ = value;
}

// optional uint64 migrate_pfn = 2;
inline bool MmCompactionBeginFtraceEvent::has_migrate_pfn() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MmCompactionBeginFtraceEvent::clear_migrate_pfn() {
  _impl_.migrate_pfn_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t MmCompactionBeginFtraceEvent::migrate_pfn() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionBeginFtraceEvent.migrate_pfn)
  return _internal_migrate_pfn();
}
inline void MmCompactionBeginFtraceEvent::set_migrate_pfn(::uint64_t value) {
  _internal_set_migrate_pfn(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionBeginFtraceEvent.migrate_pfn)
}
inline ::uint64_t MmCompactionBeginFtraceEvent::_internal_migrate_pfn() const {
  return _impl_.migrate_pfn_;
}
inline void MmCompactionBeginFtraceEvent::_internal_set_migrate_pfn(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.migrate_pfn_ = value;
}

// optional uint64 free_pfn = 3;
inline bool MmCompactionBeginFtraceEvent::has_free_pfn() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void MmCompactionBeginFtraceEvent::clear_free_pfn() {
  _impl_.free_pfn_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t MmCompactionBeginFtraceEvent::free_pfn() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionBeginFtraceEvent.free_pfn)
  return _internal_free_pfn();
}
inline void MmCompactionBeginFtraceEvent::set_free_pfn(::uint64_t value) {
  _internal_set_free_pfn(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionBeginFtraceEvent.free_pfn)
}
inline ::uint64_t MmCompactionBeginFtraceEvent::_internal_free_pfn() const {
  return _impl_.free_pfn_;
}
inline void MmCompactionBeginFtraceEvent::_internal_set_free_pfn(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.free_pfn_ = value;
}

// optional uint64 zone_end = 4;
inline bool MmCompactionBeginFtraceEvent::has_zone_end() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void MmCompactionBeginFtraceEvent::clear_zone_end() {
  _impl_.zone_end_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint64_t MmCompactionBeginFtraceEvent::zone_end() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionBeginFtraceEvent.zone_end)
  return _internal_zone_end();
}
inline void MmCompactionBeginFtraceEvent::set_zone_end(::uint64_t value) {
  _internal_set_zone_end(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionBeginFtraceEvent.zone_end)
}
inline ::uint64_t MmCompactionBeginFtraceEvent::_internal_zone_end() const {
  return _impl_.zone_end_;
}
inline void MmCompactionBeginFtraceEvent::_internal_set_zone_end(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.zone_end_ = value;
}

// optional uint32 sync = 5;
inline bool MmCompactionBeginFtraceEvent::has_sync() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void MmCompactionBeginFtraceEvent::clear_sync() {
  _impl_.sync_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t MmCompactionBeginFtraceEvent::sync() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionBeginFtraceEvent.sync)
  return _internal_sync();
}
inline void MmCompactionBeginFtraceEvent::set_sync(::uint32_t value) {
  _internal_set_sync(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionBeginFtraceEvent.sync)
}
inline ::uint32_t MmCompactionBeginFtraceEvent::_internal_sync() const {
  return _impl_.sync_;
}
inline void MmCompactionBeginFtraceEvent::_internal_set_sync(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.sync_ = value;
}

// -------------------------------------------------------------------

// MmCompactionDeferCompactionFtraceEvent

// optional int32 nid = 1;
inline bool MmCompactionDeferCompactionFtraceEvent::has_nid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MmCompactionDeferCompactionFtraceEvent::clear_nid() {
  _impl_.nid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t MmCompactionDeferCompactionFtraceEvent::nid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionDeferCompactionFtraceEvent.nid)
  return _internal_nid();
}
inline void MmCompactionDeferCompactionFtraceEvent::set_nid(::int32_t value) {
  _internal_set_nid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionDeferCompactionFtraceEvent.nid)
}
inline ::int32_t MmCompactionDeferCompactionFtraceEvent::_internal_nid() const {
  return _impl_.nid_;
}
inline void MmCompactionDeferCompactionFtraceEvent::_internal_set_nid(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nid_ = value;
}

// optional uint32 idx = 2;
inline bool MmCompactionDeferCompactionFtraceEvent::has_idx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MmCompactionDeferCompactionFtraceEvent::clear_idx() {
  _impl_.idx_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t MmCompactionDeferCompactionFtraceEvent::idx() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionDeferCompactionFtraceEvent.idx)
  return _internal_idx();
}
inline void MmCompactionDeferCompactionFtraceEvent::set_idx(::uint32_t value) {
  _internal_set_idx(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionDeferCompactionFtraceEvent.idx)
}
inline ::uint32_t MmCompactionDeferCompactionFtraceEvent::_internal_idx() const {
  return _impl_.idx_;
}
inline void MmCompactionDeferCompactionFtraceEvent::_internal_set_idx(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.idx_ = value;
}

// optional int32 order = 3;
inline bool MmCompactionDeferCompactionFtraceEvent::has_order() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void MmCompactionDeferCompactionFtraceEvent::clear_order() {
  _impl_.order_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t MmCompactionDeferCompactionFtraceEvent::order() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionDeferCompactionFtraceEvent.order)
  return _internal_order();
}
inline void MmCompactionDeferCompactionFtraceEvent::set_order(::int32_t value) {
  _internal_set_order(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionDeferCompactionFtraceEvent.order)
}
inline ::int32_t MmCompactionDeferCompactionFtraceEvent::_internal_order() const {
  return _impl_.order_;
}
inline void MmCompactionDeferCompactionFtraceEvent::_internal_set_order(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.order_ = value;
}

// optional uint32 considered = 4;
inline bool MmCompactionDeferCompactionFtraceEvent::has_considered() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void MmCompactionDeferCompactionFtraceEvent::clear_considered() {
  _impl_.considered_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t MmCompactionDeferCompactionFtraceEvent::considered() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionDeferCompactionFtraceEvent.considered)
  return _internal_considered();
}
inline void MmCompactionDeferCompactionFtraceEvent::set_considered(::uint32_t value) {
  _internal_set_considered(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionDeferCompactionFtraceEvent.considered)
}
inline ::uint32_t MmCompactionDeferCompactionFtraceEvent::_internal_considered() const {
  return _impl_.considered_;
}
inline void MmCompactionDeferCompactionFtraceEvent::_internal_set_considered(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.considered_ = value;
}

// optional uint32 defer_shift = 5;
inline bool MmCompactionDeferCompactionFtraceEvent::has_defer_shift() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void MmCompactionDeferCompactionFtraceEvent::clear_defer_shift() {
  _impl_.defer_shift_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t MmCompactionDeferCompactionFtraceEvent::defer_shift() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionDeferCompactionFtraceEvent.defer_shift)
  return _internal_defer_shift();
}
inline void MmCompactionDeferCompactionFtraceEvent::set_defer_shift(::uint32_t value) {
  _internal_set_defer_shift(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionDeferCompactionFtraceEvent.defer_shift)
}
inline ::uint32_t MmCompactionDeferCompactionFtraceEvent::_internal_defer_shift() const {
  return _impl_.defer_shift_;
}
inline void MmCompactionDeferCompactionFtraceEvent::_internal_set_defer_shift(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.defer_shift_ = value;
}

// optional int32 order_failed = 6;
inline bool MmCompactionDeferCompactionFtraceEvent::has_order_failed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void MmCompactionDeferCompactionFtraceEvent::clear_order_failed() {
  _impl_.order_failed_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t MmCompactionDeferCompactionFtraceEvent::order_failed() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionDeferCompactionFtraceEvent.order_failed)
  return _internal_order_failed();
}
inline void MmCompactionDeferCompactionFtraceEvent::set_order_failed(::int32_t value) {
  _internal_set_order_failed(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionDeferCompactionFtraceEvent.order_failed)
}
inline ::int32_t MmCompactionDeferCompactionFtraceEvent::_internal_order_failed() const {
  return _impl_.order_failed_;
}
inline void MmCompactionDeferCompactionFtraceEvent::_internal_set_order_failed(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.order_failed_ = value;
}

// -------------------------------------------------------------------

// MmCompactionDeferredFtraceEvent

// optional int32 nid = 1;
inline bool MmCompactionDeferredFtraceEvent::has_nid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MmCompactionDeferredFtraceEvent::clear_nid() {
  _impl_.nid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t MmCompactionDeferredFtraceEvent::nid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionDeferredFtraceEvent.nid)
  return _internal_nid();
}
inline void MmCompactionDeferredFtraceEvent::set_nid(::int32_t value) {
  _internal_set_nid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionDeferredFtraceEvent.nid)
}
inline ::int32_t MmCompactionDeferredFtraceEvent::_internal_nid() const {
  return _impl_.nid_;
}
inline void MmCompactionDeferredFtraceEvent::_internal_set_nid(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nid_ = value;
}

// optional uint32 idx = 2;
inline bool MmCompactionDeferredFtraceEvent::has_idx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MmCompactionDeferredFtraceEvent::clear_idx() {
  _impl_.idx_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t MmCompactionDeferredFtraceEvent::idx() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionDeferredFtraceEvent.idx)
  return _internal_idx();
}
inline void MmCompactionDeferredFtraceEvent::set_idx(::uint32_t value) {
  _internal_set_idx(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionDeferredFtraceEvent.idx)
}
inline ::uint32_t MmCompactionDeferredFtraceEvent::_internal_idx() const {
  return _impl_.idx_;
}
inline void MmCompactionDeferredFtraceEvent::_internal_set_idx(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.idx_ = value;
}

// optional int32 order = 3;
inline bool MmCompactionDeferredFtraceEvent::has_order() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void MmCompactionDeferredFtraceEvent::clear_order() {
  _impl_.order_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t MmCompactionDeferredFtraceEvent::order() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionDeferredFtraceEvent.order)
  return _internal_order();
}
inline void MmCompactionDeferredFtraceEvent::set_order(::int32_t value) {
  _internal_set_order(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionDeferredFtraceEvent.order)
}
inline ::int32_t MmCompactionDeferredFtraceEvent::_internal_order() const {
  return _impl_.order_;
}
inline void MmCompactionDeferredFtraceEvent::_internal_set_order(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.order_ = value;
}

// optional uint32 considered = 4;
inline bool MmCompactionDeferredFtraceEvent::has_considered() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void MmCompactionDeferredFtraceEvent::clear_considered() {
  _impl_.considered_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t MmCompactionDeferredFtraceEvent::considered() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionDeferredFtraceEvent.considered)
  return _internal_considered();
}
inline void MmCompactionDeferredFtraceEvent::set_considered(::uint32_t value) {
  _internal_set_considered(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionDeferredFtraceEvent.considered)
}
inline ::uint32_t MmCompactionDeferredFtraceEvent::_internal_considered() const {
  return _impl_.considered_;
}
inline void MmCompactionDeferredFtraceEvent::_internal_set_considered(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.considered_ = value;
}

// optional uint32 defer_shift = 5;
inline bool MmCompactionDeferredFtraceEvent::has_defer_shift() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void MmCompactionDeferredFtraceEvent::clear_defer_shift() {
  _impl_.defer_shift_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t MmCompactionDeferredFtraceEvent::defer_shift() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionDeferredFtraceEvent.defer_shift)
  return _internal_defer_shift();
}
inline void MmCompactionDeferredFtraceEvent::set_defer_shift(::uint32_t value) {
  _internal_set_defer_shift(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionDeferredFtraceEvent.defer_shift)
}
inline ::uint32_t MmCompactionDeferredFtraceEvent::_internal_defer_shift() const {
  return _impl_.defer_shift_;
}
inline void MmCompactionDeferredFtraceEvent::_internal_set_defer_shift(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.defer_shift_ = value;
}

// optional int32 order_failed = 6;
inline bool MmCompactionDeferredFtraceEvent::has_order_failed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void MmCompactionDeferredFtraceEvent::clear_order_failed() {
  _impl_.order_failed_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t MmCompactionDeferredFtraceEvent::order_failed() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionDeferredFtraceEvent.order_failed)
  return _internal_order_failed();
}
inline void MmCompactionDeferredFtraceEvent::set_order_failed(::int32_t value) {
  _internal_set_order_failed(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionDeferredFtraceEvent.order_failed)
}
inline ::int32_t MmCompactionDeferredFtraceEvent::_internal_order_failed() const {
  return _impl_.order_failed_;
}
inline void MmCompactionDeferredFtraceEvent::_internal_set_order_failed(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.order_failed_ = value;
}

// -------------------------------------------------------------------

// MmCompactionDeferResetFtraceEvent

// optional int32 nid = 1;
inline bool MmCompactionDeferResetFtraceEvent::has_nid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MmCompactionDeferResetFtraceEvent::clear_nid() {
  _impl_.nid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t MmCompactionDeferResetFtraceEvent::nid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionDeferResetFtraceEvent.nid)
  return _internal_nid();
}
inline void MmCompactionDeferResetFtraceEvent::set_nid(::int32_t value) {
  _internal_set_nid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionDeferResetFtraceEvent.nid)
}
inline ::int32_t MmCompactionDeferResetFtraceEvent::_internal_nid() const {
  return _impl_.nid_;
}
inline void MmCompactionDeferResetFtraceEvent::_internal_set_nid(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nid_ = value;
}

// optional uint32 idx = 2;
inline bool MmCompactionDeferResetFtraceEvent::has_idx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MmCompactionDeferResetFtraceEvent::clear_idx() {
  _impl_.idx_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t MmCompactionDeferResetFtraceEvent::idx() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionDeferResetFtraceEvent.idx)
  return _internal_idx();
}
inline void MmCompactionDeferResetFtraceEvent::set_idx(::uint32_t value) {
  _internal_set_idx(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionDeferResetFtraceEvent.idx)
}
inline ::uint32_t MmCompactionDeferResetFtraceEvent::_internal_idx() const {
  return _impl_.idx_;
}
inline void MmCompactionDeferResetFtraceEvent::_internal_set_idx(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.idx_ = value;
}

// optional int32 order = 3;
inline bool MmCompactionDeferResetFtraceEvent::has_order() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void MmCompactionDeferResetFtraceEvent::clear_order() {
  _impl_.order_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t MmCompactionDeferResetFtraceEvent::order() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionDeferResetFtraceEvent.order)
  return _internal_order();
}
inline void MmCompactionDeferResetFtraceEvent::set_order(::int32_t value) {
  _internal_set_order(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionDeferResetFtraceEvent.order)
}
inline ::int32_t MmCompactionDeferResetFtraceEvent::_internal_order() const {
  return _impl_.order_;
}
inline void MmCompactionDeferResetFtraceEvent::_internal_set_order(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.order_ = value;
}

// optional uint32 considered = 4;
inline bool MmCompactionDeferResetFtraceEvent::has_considered() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void MmCompactionDeferResetFtraceEvent::clear_considered() {
  _impl_.considered_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t MmCompactionDeferResetFtraceEvent::considered() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionDeferResetFtraceEvent.considered)
  return _internal_considered();
}
inline void MmCompactionDeferResetFtraceEvent::set_considered(::uint32_t value) {
  _internal_set_considered(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionDeferResetFtraceEvent.considered)
}
inline ::uint32_t MmCompactionDeferResetFtraceEvent::_internal_considered() const {
  return _impl_.considered_;
}
inline void MmCompactionDeferResetFtraceEvent::_internal_set_considered(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.considered_ = value;
}

// optional uint32 defer_shift = 5;
inline bool MmCompactionDeferResetFtraceEvent::has_defer_shift() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void MmCompactionDeferResetFtraceEvent::clear_defer_shift() {
  _impl_.defer_shift_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t MmCompactionDeferResetFtraceEvent::defer_shift() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionDeferResetFtraceEvent.defer_shift)
  return _internal_defer_shift();
}
inline void MmCompactionDeferResetFtraceEvent::set_defer_shift(::uint32_t value) {
  _internal_set_defer_shift(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionDeferResetFtraceEvent.defer_shift)
}
inline ::uint32_t MmCompactionDeferResetFtraceEvent::_internal_defer_shift() const {
  return _impl_.defer_shift_;
}
inline void MmCompactionDeferResetFtraceEvent::_internal_set_defer_shift(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.defer_shift_ = value;
}

// optional int32 order_failed = 6;
inline bool MmCompactionDeferResetFtraceEvent::has_order_failed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void MmCompactionDeferResetFtraceEvent::clear_order_failed() {
  _impl_.order_failed_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t MmCompactionDeferResetFtraceEvent::order_failed() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionDeferResetFtraceEvent.order_failed)
  return _internal_order_failed();
}
inline void MmCompactionDeferResetFtraceEvent::set_order_failed(::int32_t value) {
  _internal_set_order_failed(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionDeferResetFtraceEvent.order_failed)
}
inline ::int32_t MmCompactionDeferResetFtraceEvent::_internal_order_failed() const {
  return _impl_.order_failed_;
}
inline void MmCompactionDeferResetFtraceEvent::_internal_set_order_failed(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.order_failed_ = value;
}

// -------------------------------------------------------------------

// MmCompactionEndFtraceEvent

// optional uint64 zone_start = 1;
inline bool MmCompactionEndFtraceEvent::has_zone_start() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MmCompactionEndFtraceEvent::clear_zone_start() {
  _impl_.zone_start_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t MmCompactionEndFtraceEvent::zone_start() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionEndFtraceEvent.zone_start)
  return _internal_zone_start();
}
inline void MmCompactionEndFtraceEvent::set_zone_start(::uint64_t value) {
  _internal_set_zone_start(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionEndFtraceEvent.zone_start)
}
inline ::uint64_t MmCompactionEndFtraceEvent::_internal_zone_start() const {
  return _impl_.zone_start_;
}
inline void MmCompactionEndFtraceEvent::_internal_set_zone_start(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.zone_start_ = value;
}

// optional uint64 migrate_pfn = 2;
inline bool MmCompactionEndFtraceEvent::has_migrate_pfn() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MmCompactionEndFtraceEvent::clear_migrate_pfn() {
  _impl_.migrate_pfn_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t MmCompactionEndFtraceEvent::migrate_pfn() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionEndFtraceEvent.migrate_pfn)
  return _internal_migrate_pfn();
}
inline void MmCompactionEndFtraceEvent::set_migrate_pfn(::uint64_t value) {
  _internal_set_migrate_pfn(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionEndFtraceEvent.migrate_pfn)
}
inline ::uint64_t MmCompactionEndFtraceEvent::_internal_migrate_pfn() const {
  return _impl_.migrate_pfn_;
}
inline void MmCompactionEndFtraceEvent::_internal_set_migrate_pfn(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.migrate_pfn_ = value;
}

// optional uint64 free_pfn = 3;
inline bool MmCompactionEndFtraceEvent::has_free_pfn() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void MmCompactionEndFtraceEvent::clear_free_pfn() {
  _impl_.free_pfn_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t MmCompactionEndFtraceEvent::free_pfn() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionEndFtraceEvent.free_pfn)
  return _internal_free_pfn();
}
inline void MmCompactionEndFtraceEvent::set_free_pfn(::uint64_t value) {
  _internal_set_free_pfn(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionEndFtraceEvent.free_pfn)
}
inline ::uint64_t MmCompactionEndFtraceEvent::_internal_free_pfn() const {
  return _impl_.free_pfn_;
}
inline void MmCompactionEndFtraceEvent::_internal_set_free_pfn(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.free_pfn_ = value;
}

// optional uint64 zone_end = 4;
inline bool MmCompactionEndFtraceEvent::has_zone_end() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void MmCompactionEndFtraceEvent::clear_zone_end() {
  _impl_.zone_end_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint64_t MmCompactionEndFtraceEvent::zone_end() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionEndFtraceEvent.zone_end)
  return _internal_zone_end();
}
inline void MmCompactionEndFtraceEvent::set_zone_end(::uint64_t value) {
  _internal_set_zone_end(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionEndFtraceEvent.zone_end)
}
inline ::uint64_t MmCompactionEndFtraceEvent::_internal_zone_end() const {
  return _impl_.zone_end_;
}
inline void MmCompactionEndFtraceEvent::_internal_set_zone_end(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.zone_end_ = value;
}

// optional uint32 sync = 5;
inline bool MmCompactionEndFtraceEvent::has_sync() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void MmCompactionEndFtraceEvent::clear_sync() {
  _impl_.sync_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t MmCompactionEndFtraceEvent::sync() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionEndFtraceEvent.sync)
  return _internal_sync();
}
inline void MmCompactionEndFtraceEvent::set_sync(::uint32_t value) {
  _internal_set_sync(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionEndFtraceEvent.sync)
}
inline ::uint32_t MmCompactionEndFtraceEvent::_internal_sync() const {
  return _impl_.sync_;
}
inline void MmCompactionEndFtraceEvent::_internal_set_sync(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.sync_ = value;
}

// optional int32 status = 6;
inline bool MmCompactionEndFtraceEvent::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void MmCompactionEndFtraceEvent::clear_status() {
  _impl_.status_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t MmCompactionEndFtraceEvent::status() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionEndFtraceEvent.status)
  return _internal_status();
}
inline void MmCompactionEndFtraceEvent::set_status(::int32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionEndFtraceEvent.status)
}
inline ::int32_t MmCompactionEndFtraceEvent::_internal_status() const {
  return _impl_.status_;
}
inline void MmCompactionEndFtraceEvent::_internal_set_status(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// MmCompactionFinishedFtraceEvent

// optional int32 nid = 1;
inline bool MmCompactionFinishedFtraceEvent::has_nid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MmCompactionFinishedFtraceEvent::clear_nid() {
  _impl_.nid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t MmCompactionFinishedFtraceEvent::nid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionFinishedFtraceEvent.nid)
  return _internal_nid();
}
inline void MmCompactionFinishedFtraceEvent::set_nid(::int32_t value) {
  _internal_set_nid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionFinishedFtraceEvent.nid)
}
inline ::int32_t MmCompactionFinishedFtraceEvent::_internal_nid() const {
  return _impl_.nid_;
}
inline void MmCompactionFinishedFtraceEvent::_internal_set_nid(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nid_ = value;
}

// optional uint32 idx = 2;
inline bool MmCompactionFinishedFtraceEvent::has_idx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MmCompactionFinishedFtraceEvent::clear_idx() {
  _impl_.idx_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t MmCompactionFinishedFtraceEvent::idx() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionFinishedFtraceEvent.idx)
  return _internal_idx();
}
inline void MmCompactionFinishedFtraceEvent::set_idx(::uint32_t value) {
  _internal_set_idx(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionFinishedFtraceEvent.idx)
}
inline ::uint32_t MmCompactionFinishedFtraceEvent::_internal_idx() const {
  return _impl_.idx_;
}
inline void MmCompactionFinishedFtraceEvent::_internal_set_idx(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.idx_ = value;
}

// optional int32 order = 3;
inline bool MmCompactionFinishedFtraceEvent::has_order() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void MmCompactionFinishedFtraceEvent::clear_order() {
  _impl_.order_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t MmCompactionFinishedFtraceEvent::order() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionFinishedFtraceEvent.order)
  return _internal_order();
}
inline void MmCompactionFinishedFtraceEvent::set_order(::int32_t value) {
  _internal_set_order(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionFinishedFtraceEvent.order)
}
inline ::int32_t MmCompactionFinishedFtraceEvent::_internal_order() const {
  return _impl_.order_;
}
inline void MmCompactionFinishedFtraceEvent::_internal_set_order(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.order_ = value;
}

// optional int32 ret = 4;
inline bool MmCompactionFinishedFtraceEvent::has_ret() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void MmCompactionFinishedFtraceEvent::clear_ret() {
  _impl_.ret_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t MmCompactionFinishedFtraceEvent::ret() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionFinishedFtraceEvent.ret)
  return _internal_ret();
}
inline void MmCompactionFinishedFtraceEvent::set_ret(::int32_t value) {
  _internal_set_ret(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionFinishedFtraceEvent.ret)
}
inline ::int32_t MmCompactionFinishedFtraceEvent::_internal_ret() const {
  return _impl_.ret_;
}
inline void MmCompactionFinishedFtraceEvent::_internal_set_ret(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.ret_ = value;
}

// -------------------------------------------------------------------

// MmCompactionIsolateFreepagesFtraceEvent

// optional uint64 start_pfn = 1;
inline bool MmCompactionIsolateFreepagesFtraceEvent::has_start_pfn() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MmCompactionIsolateFreepagesFtraceEvent::clear_start_pfn() {
  _impl_.start_pfn_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t MmCompactionIsolateFreepagesFtraceEvent::start_pfn() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionIsolateFreepagesFtraceEvent.start_pfn)
  return _internal_start_pfn();
}
inline void MmCompactionIsolateFreepagesFtraceEvent::set_start_pfn(::uint64_t value) {
  _internal_set_start_pfn(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionIsolateFreepagesFtraceEvent.start_pfn)
}
inline ::uint64_t MmCompactionIsolateFreepagesFtraceEvent::_internal_start_pfn() const {
  return _impl_.start_pfn_;
}
inline void MmCompactionIsolateFreepagesFtraceEvent::_internal_set_start_pfn(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.start_pfn_ = value;
}

// optional uint64 end_pfn = 2;
inline bool MmCompactionIsolateFreepagesFtraceEvent::has_end_pfn() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MmCompactionIsolateFreepagesFtraceEvent::clear_end_pfn() {
  _impl_.end_pfn_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t MmCompactionIsolateFreepagesFtraceEvent::end_pfn() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionIsolateFreepagesFtraceEvent.end_pfn)
  return _internal_end_pfn();
}
inline void MmCompactionIsolateFreepagesFtraceEvent::set_end_pfn(::uint64_t value) {
  _internal_set_end_pfn(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionIsolateFreepagesFtraceEvent.end_pfn)
}
inline ::uint64_t MmCompactionIsolateFreepagesFtraceEvent::_internal_end_pfn() const {
  return _impl_.end_pfn_;
}
inline void MmCompactionIsolateFreepagesFtraceEvent::_internal_set_end_pfn(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.end_pfn_ = value;
}

// optional uint64 nr_scanned = 3;
inline bool MmCompactionIsolateFreepagesFtraceEvent::has_nr_scanned() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void MmCompactionIsolateFreepagesFtraceEvent::clear_nr_scanned() {
  _impl_.nr_scanned_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t MmCompactionIsolateFreepagesFtraceEvent::nr_scanned() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionIsolateFreepagesFtraceEvent.nr_scanned)
  return _internal_nr_scanned();
}
inline void MmCompactionIsolateFreepagesFtraceEvent::set_nr_scanned(::uint64_t value) {
  _internal_set_nr_scanned(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionIsolateFreepagesFtraceEvent.nr_scanned)
}
inline ::uint64_t MmCompactionIsolateFreepagesFtraceEvent::_internal_nr_scanned() const {
  return _impl_.nr_scanned_;
}
inline void MmCompactionIsolateFreepagesFtraceEvent::_internal_set_nr_scanned(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.nr_scanned_ = value;
}

// optional uint64 nr_taken = 4;
inline bool MmCompactionIsolateFreepagesFtraceEvent::has_nr_taken() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void MmCompactionIsolateFreepagesFtraceEvent::clear_nr_taken() {
  _impl_.nr_taken_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint64_t MmCompactionIsolateFreepagesFtraceEvent::nr_taken() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionIsolateFreepagesFtraceEvent.nr_taken)
  return _internal_nr_taken();
}
inline void MmCompactionIsolateFreepagesFtraceEvent::set_nr_taken(::uint64_t value) {
  _internal_set_nr_taken(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionIsolateFreepagesFtraceEvent.nr_taken)
}
inline ::uint64_t MmCompactionIsolateFreepagesFtraceEvent::_internal_nr_taken() const {
  return _impl_.nr_taken_;
}
inline void MmCompactionIsolateFreepagesFtraceEvent::_internal_set_nr_taken(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.nr_taken_ = value;
}

// -------------------------------------------------------------------

// MmCompactionIsolateMigratepagesFtraceEvent

// optional uint64 start_pfn = 1;
inline bool MmCompactionIsolateMigratepagesFtraceEvent::has_start_pfn() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MmCompactionIsolateMigratepagesFtraceEvent::clear_start_pfn() {
  _impl_.start_pfn_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t MmCompactionIsolateMigratepagesFtraceEvent::start_pfn() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionIsolateMigratepagesFtraceEvent.start_pfn)
  return _internal_start_pfn();
}
inline void MmCompactionIsolateMigratepagesFtraceEvent::set_start_pfn(::uint64_t value) {
  _internal_set_start_pfn(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionIsolateMigratepagesFtraceEvent.start_pfn)
}
inline ::uint64_t MmCompactionIsolateMigratepagesFtraceEvent::_internal_start_pfn() const {
  return _impl_.start_pfn_;
}
inline void MmCompactionIsolateMigratepagesFtraceEvent::_internal_set_start_pfn(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.start_pfn_ = value;
}

// optional uint64 end_pfn = 2;
inline bool MmCompactionIsolateMigratepagesFtraceEvent::has_end_pfn() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MmCompactionIsolateMigratepagesFtraceEvent::clear_end_pfn() {
  _impl_.end_pfn_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t MmCompactionIsolateMigratepagesFtraceEvent::end_pfn() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionIsolateMigratepagesFtraceEvent.end_pfn)
  return _internal_end_pfn();
}
inline void MmCompactionIsolateMigratepagesFtraceEvent::set_end_pfn(::uint64_t value) {
  _internal_set_end_pfn(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionIsolateMigratepagesFtraceEvent.end_pfn)
}
inline ::uint64_t MmCompactionIsolateMigratepagesFtraceEvent::_internal_end_pfn() const {
  return _impl_.end_pfn_;
}
inline void MmCompactionIsolateMigratepagesFtraceEvent::_internal_set_end_pfn(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.end_pfn_ = value;
}

// optional uint64 nr_scanned = 3;
inline bool MmCompactionIsolateMigratepagesFtraceEvent::has_nr_scanned() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void MmCompactionIsolateMigratepagesFtraceEvent::clear_nr_scanned() {
  _impl_.nr_scanned_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t MmCompactionIsolateMigratepagesFtraceEvent::nr_scanned() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionIsolateMigratepagesFtraceEvent.nr_scanned)
  return _internal_nr_scanned();
}
inline void MmCompactionIsolateMigratepagesFtraceEvent::set_nr_scanned(::uint64_t value) {
  _internal_set_nr_scanned(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionIsolateMigratepagesFtraceEvent.nr_scanned)
}
inline ::uint64_t MmCompactionIsolateMigratepagesFtraceEvent::_internal_nr_scanned() const {
  return _impl_.nr_scanned_;
}
inline void MmCompactionIsolateMigratepagesFtraceEvent::_internal_set_nr_scanned(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.nr_scanned_ = value;
}

// optional uint64 nr_taken = 4;
inline bool MmCompactionIsolateMigratepagesFtraceEvent::has_nr_taken() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void MmCompactionIsolateMigratepagesFtraceEvent::clear_nr_taken() {
  _impl_.nr_taken_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint64_t MmCompactionIsolateMigratepagesFtraceEvent::nr_taken() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionIsolateMigratepagesFtraceEvent.nr_taken)
  return _internal_nr_taken();
}
inline void MmCompactionIsolateMigratepagesFtraceEvent::set_nr_taken(::uint64_t value) {
  _internal_set_nr_taken(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionIsolateMigratepagesFtraceEvent.nr_taken)
}
inline ::uint64_t MmCompactionIsolateMigratepagesFtraceEvent::_internal_nr_taken() const {
  return _impl_.nr_taken_;
}
inline void MmCompactionIsolateMigratepagesFtraceEvent::_internal_set_nr_taken(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.nr_taken_ = value;
}

// -------------------------------------------------------------------

// MmCompactionKcompactdSleepFtraceEvent

// optional int32 nid = 1;
inline bool MmCompactionKcompactdSleepFtraceEvent::has_nid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MmCompactionKcompactdSleepFtraceEvent::clear_nid() {
  _impl_.nid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t MmCompactionKcompactdSleepFtraceEvent::nid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionKcompactdSleepFtraceEvent.nid)
  return _internal_nid();
}
inline void MmCompactionKcompactdSleepFtraceEvent::set_nid(::int32_t value) {
  _internal_set_nid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionKcompactdSleepFtraceEvent.nid)
}
inline ::int32_t MmCompactionKcompactdSleepFtraceEvent::_internal_nid() const {
  return _impl_.nid_;
}
inline void MmCompactionKcompactdSleepFtraceEvent::_internal_set_nid(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nid_ = value;
}

// -------------------------------------------------------------------

// MmCompactionKcompactdWakeFtraceEvent

// optional int32 nid = 1;
inline bool MmCompactionKcompactdWakeFtraceEvent::has_nid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MmCompactionKcompactdWakeFtraceEvent::clear_nid() {
  _impl_.nid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t MmCompactionKcompactdWakeFtraceEvent::nid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionKcompactdWakeFtraceEvent.nid)
  return _internal_nid();
}
inline void MmCompactionKcompactdWakeFtraceEvent::set_nid(::int32_t value) {
  _internal_set_nid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionKcompactdWakeFtraceEvent.nid)
}
inline ::int32_t MmCompactionKcompactdWakeFtraceEvent::_internal_nid() const {
  return _impl_.nid_;
}
inline void MmCompactionKcompactdWakeFtraceEvent::_internal_set_nid(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nid_ = value;
}

// optional int32 order = 2;
inline bool MmCompactionKcompactdWakeFtraceEvent::has_order() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MmCompactionKcompactdWakeFtraceEvent::clear_order() {
  _impl_.order_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t MmCompactionKcompactdWakeFtraceEvent::order() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionKcompactdWakeFtraceEvent.order)
  return _internal_order();
}
inline void MmCompactionKcompactdWakeFtraceEvent::set_order(::int32_t value) {
  _internal_set_order(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionKcompactdWakeFtraceEvent.order)
}
inline ::int32_t MmCompactionKcompactdWakeFtraceEvent::_internal_order() const {
  return _impl_.order_;
}
inline void MmCompactionKcompactdWakeFtraceEvent::_internal_set_order(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.order_ = value;
}

// optional uint32 classzone_idx = 3;
inline bool MmCompactionKcompactdWakeFtraceEvent::has_classzone_idx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void MmCompactionKcompactdWakeFtraceEvent::clear_classzone_idx() {
  _impl_.classzone_idx_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t MmCompactionKcompactdWakeFtraceEvent::classzone_idx() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionKcompactdWakeFtraceEvent.classzone_idx)
  return _internal_classzone_idx();
}
inline void MmCompactionKcompactdWakeFtraceEvent::set_classzone_idx(::uint32_t value) {
  _internal_set_classzone_idx(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionKcompactdWakeFtraceEvent.classzone_idx)
}
inline ::uint32_t MmCompactionKcompactdWakeFtraceEvent::_internal_classzone_idx() const {
  return _impl_.classzone_idx_;
}
inline void MmCompactionKcompactdWakeFtraceEvent::_internal_set_classzone_idx(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.classzone_idx_ = value;
}

// optional uint32 highest_zoneidx = 4;
inline bool MmCompactionKcompactdWakeFtraceEvent::has_highest_zoneidx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void MmCompactionKcompactdWakeFtraceEvent::clear_highest_zoneidx() {
  _impl_.highest_zoneidx_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t MmCompactionKcompactdWakeFtraceEvent::highest_zoneidx() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionKcompactdWakeFtraceEvent.highest_zoneidx)
  return _internal_highest_zoneidx();
}
inline void MmCompactionKcompactdWakeFtraceEvent::set_highest_zoneidx(::uint32_t value) {
  _internal_set_highest_zoneidx(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionKcompactdWakeFtraceEvent.highest_zoneidx)
}
inline ::uint32_t MmCompactionKcompactdWakeFtraceEvent::_internal_highest_zoneidx() const {
  return _impl_.highest_zoneidx_;
}
inline void MmCompactionKcompactdWakeFtraceEvent::_internal_set_highest_zoneidx(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.highest_zoneidx_ = value;
}

// -------------------------------------------------------------------

// MmCompactionMigratepagesFtraceEvent

// optional uint64 nr_migrated = 1;
inline bool MmCompactionMigratepagesFtraceEvent::has_nr_migrated() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MmCompactionMigratepagesFtraceEvent::clear_nr_migrated() {
  _impl_.nr_migrated_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t MmCompactionMigratepagesFtraceEvent::nr_migrated() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionMigratepagesFtraceEvent.nr_migrated)
  return _internal_nr_migrated();
}
inline void MmCompactionMigratepagesFtraceEvent::set_nr_migrated(::uint64_t value) {
  _internal_set_nr_migrated(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionMigratepagesFtraceEvent.nr_migrated)
}
inline ::uint64_t MmCompactionMigratepagesFtraceEvent::_internal_nr_migrated() const {
  return _impl_.nr_migrated_;
}
inline void MmCompactionMigratepagesFtraceEvent::_internal_set_nr_migrated(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nr_migrated_ = value;
}

// optional uint64 nr_failed = 2;
inline bool MmCompactionMigratepagesFtraceEvent::has_nr_failed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MmCompactionMigratepagesFtraceEvent::clear_nr_failed() {
  _impl_.nr_failed_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t MmCompactionMigratepagesFtraceEvent::nr_failed() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionMigratepagesFtraceEvent.nr_failed)
  return _internal_nr_failed();
}
inline void MmCompactionMigratepagesFtraceEvent::set_nr_failed(::uint64_t value) {
  _internal_set_nr_failed(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionMigratepagesFtraceEvent.nr_failed)
}
inline ::uint64_t MmCompactionMigratepagesFtraceEvent::_internal_nr_failed() const {
  return _impl_.nr_failed_;
}
inline void MmCompactionMigratepagesFtraceEvent::_internal_set_nr_failed(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.nr_failed_ = value;
}

// -------------------------------------------------------------------

// MmCompactionSuitableFtraceEvent

// optional int32 nid = 1;
inline bool MmCompactionSuitableFtraceEvent::has_nid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MmCompactionSuitableFtraceEvent::clear_nid() {
  _impl_.nid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t MmCompactionSuitableFtraceEvent::nid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionSuitableFtraceEvent.nid)
  return _internal_nid();
}
inline void MmCompactionSuitableFtraceEvent::set_nid(::int32_t value) {
  _internal_set_nid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionSuitableFtraceEvent.nid)
}
inline ::int32_t MmCompactionSuitableFtraceEvent::_internal_nid() const {
  return _impl_.nid_;
}
inline void MmCompactionSuitableFtraceEvent::_internal_set_nid(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nid_ = value;
}

// optional uint32 idx = 2;
inline bool MmCompactionSuitableFtraceEvent::has_idx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MmCompactionSuitableFtraceEvent::clear_idx() {
  _impl_.idx_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t MmCompactionSuitableFtraceEvent::idx() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionSuitableFtraceEvent.idx)
  return _internal_idx();
}
inline void MmCompactionSuitableFtraceEvent::set_idx(::uint32_t value) {
  _internal_set_idx(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionSuitableFtraceEvent.idx)
}
inline ::uint32_t MmCompactionSuitableFtraceEvent::_internal_idx() const {
  return _impl_.idx_;
}
inline void MmCompactionSuitableFtraceEvent::_internal_set_idx(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.idx_ = value;
}

// optional int32 order = 3;
inline bool MmCompactionSuitableFtraceEvent::has_order() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void MmCompactionSuitableFtraceEvent::clear_order() {
  _impl_.order_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t MmCompactionSuitableFtraceEvent::order() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionSuitableFtraceEvent.order)
  return _internal_order();
}
inline void MmCompactionSuitableFtraceEvent::set_order(::int32_t value) {
  _internal_set_order(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionSuitableFtraceEvent.order)
}
inline ::int32_t MmCompactionSuitableFtraceEvent::_internal_order() const {
  return _impl_.order_;
}
inline void MmCompactionSuitableFtraceEvent::_internal_set_order(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.order_ = value;
}

// optional int32 ret = 4;
inline bool MmCompactionSuitableFtraceEvent::has_ret() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void MmCompactionSuitableFtraceEvent::clear_ret() {
  _impl_.ret_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t MmCompactionSuitableFtraceEvent::ret() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionSuitableFtraceEvent.ret)
  return _internal_ret();
}
inline void MmCompactionSuitableFtraceEvent::set_ret(::int32_t value) {
  _internal_set_ret(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionSuitableFtraceEvent.ret)
}
inline ::int32_t MmCompactionSuitableFtraceEvent::_internal_ret() const {
  return _impl_.ret_;
}
inline void MmCompactionSuitableFtraceEvent::_internal_set_ret(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.ret_ = value;
}

// -------------------------------------------------------------------

// MmCompactionTryToCompactPagesFtraceEvent

// optional int32 order = 1;
inline bool MmCompactionTryToCompactPagesFtraceEvent::has_order() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MmCompactionTryToCompactPagesFtraceEvent::clear_order() {
  _impl_.order_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t MmCompactionTryToCompactPagesFtraceEvent::order() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionTryToCompactPagesFtraceEvent.order)
  return _internal_order();
}
inline void MmCompactionTryToCompactPagesFtraceEvent::set_order(::int32_t value) {
  _internal_set_order(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionTryToCompactPagesFtraceEvent.order)
}
inline ::int32_t MmCompactionTryToCompactPagesFtraceEvent::_internal_order() const {
  return _impl_.order_;
}
inline void MmCompactionTryToCompactPagesFtraceEvent::_internal_set_order(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.order_ = value;
}

// optional uint32 gfp_mask = 2;
inline bool MmCompactionTryToCompactPagesFtraceEvent::has_gfp_mask() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MmCompactionTryToCompactPagesFtraceEvent::clear_gfp_mask() {
  _impl_.gfp_mask_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t MmCompactionTryToCompactPagesFtraceEvent::gfp_mask() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionTryToCompactPagesFtraceEvent.gfp_mask)
  return _internal_gfp_mask();
}
inline void MmCompactionTryToCompactPagesFtraceEvent::set_gfp_mask(::uint32_t value) {
  _internal_set_gfp_mask(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionTryToCompactPagesFtraceEvent.gfp_mask)
}
inline ::uint32_t MmCompactionTryToCompactPagesFtraceEvent::_internal_gfp_mask() const {
  return _impl_.gfp_mask_;
}
inline void MmCompactionTryToCompactPagesFtraceEvent::_internal_set_gfp_mask(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.gfp_mask_ = value;
}

// optional uint32 mode = 3;
inline bool MmCompactionTryToCompactPagesFtraceEvent::has_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void MmCompactionTryToCompactPagesFtraceEvent::clear_mode() {
  _impl_.mode_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t MmCompactionTryToCompactPagesFtraceEvent::mode() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionTryToCompactPagesFtraceEvent.mode)
  return _internal_mode();
}
inline void MmCompactionTryToCompactPagesFtraceEvent::set_mode(::uint32_t value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionTryToCompactPagesFtraceEvent.mode)
}
inline ::uint32_t MmCompactionTryToCompactPagesFtraceEvent::_internal_mode() const {
  return _impl_.mode_;
}
inline void MmCompactionTryToCompactPagesFtraceEvent::_internal_set_mode(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.mode_ = value;
}

// optional int32 prio = 4;
inline bool MmCompactionTryToCompactPagesFtraceEvent::has_prio() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void MmCompactionTryToCompactPagesFtraceEvent::clear_prio() {
  _impl_.prio_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t MmCompactionTryToCompactPagesFtraceEvent::prio() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionTryToCompactPagesFtraceEvent.prio)
  return _internal_prio();
}
inline void MmCompactionTryToCompactPagesFtraceEvent::set_prio(::int32_t value) {
  _internal_set_prio(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionTryToCompactPagesFtraceEvent.prio)
}
inline ::int32_t MmCompactionTryToCompactPagesFtraceEvent::_internal_prio() const {
  return _impl_.prio_;
}
inline void MmCompactionTryToCompactPagesFtraceEvent::_internal_set_prio(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.prio_ = value;
}

// -------------------------------------------------------------------

// MmCompactionWakeupKcompactdFtraceEvent

// optional int32 nid = 1;
inline bool MmCompactionWakeupKcompactdFtraceEvent::has_nid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MmCompactionWakeupKcompactdFtraceEvent::clear_nid() {
  _impl_.nid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t MmCompactionWakeupKcompactdFtraceEvent::nid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionWakeupKcompactdFtraceEvent.nid)
  return _internal_nid();
}
inline void MmCompactionWakeupKcompactdFtraceEvent::set_nid(::int32_t value) {
  _internal_set_nid(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionWakeupKcompactdFtraceEvent.nid)
}
inline ::int32_t MmCompactionWakeupKcompactdFtraceEvent::_internal_nid() const {
  return _impl_.nid_;
}
inline void MmCompactionWakeupKcompactdFtraceEvent::_internal_set_nid(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nid_ = value;
}

// optional int32 order = 2;
inline bool MmCompactionWakeupKcompactdFtraceEvent::has_order() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MmCompactionWakeupKcompactdFtraceEvent::clear_order() {
  _impl_.order_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t MmCompactionWakeupKcompactdFtraceEvent::order() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionWakeupKcompactdFtraceEvent.order)
  return _internal_order();
}
inline void MmCompactionWakeupKcompactdFtraceEvent::set_order(::int32_t value) {
  _internal_set_order(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionWakeupKcompactdFtraceEvent.order)
}
inline ::int32_t MmCompactionWakeupKcompactdFtraceEvent::_internal_order() const {
  return _impl_.order_;
}
inline void MmCompactionWakeupKcompactdFtraceEvent::_internal_set_order(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.order_ = value;
}

// optional uint32 classzone_idx = 3;
inline bool MmCompactionWakeupKcompactdFtraceEvent::has_classzone_idx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void MmCompactionWakeupKcompactdFtraceEvent::clear_classzone_idx() {
  _impl_.classzone_idx_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t MmCompactionWakeupKcompactdFtraceEvent::classzone_idx() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionWakeupKcompactdFtraceEvent.classzone_idx)
  return _internal_classzone_idx();
}
inline void MmCompactionWakeupKcompactdFtraceEvent::set_classzone_idx(::uint32_t value) {
  _internal_set_classzone_idx(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionWakeupKcompactdFtraceEvent.classzone_idx)
}
inline ::uint32_t MmCompactionWakeupKcompactdFtraceEvent::_internal_classzone_idx() const {
  return _impl_.classzone_idx_;
}
inline void MmCompactionWakeupKcompactdFtraceEvent::_internal_set_classzone_idx(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.classzone_idx_ = value;
}

// optional uint32 highest_zoneidx = 4;
inline bool MmCompactionWakeupKcompactdFtraceEvent::has_highest_zoneidx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void MmCompactionWakeupKcompactdFtraceEvent::clear_highest_zoneidx() {
  _impl_.highest_zoneidx_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t MmCompactionWakeupKcompactdFtraceEvent::highest_zoneidx() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.MmCompactionWakeupKcompactdFtraceEvent.highest_zoneidx)
  return _internal_highest_zoneidx();
}
inline void MmCompactionWakeupKcompactdFtraceEvent::set_highest_zoneidx(::uint32_t value) {
  _internal_set_highest_zoneidx(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.MmCompactionWakeupKcompactdFtraceEvent.highest_zoneidx)
}
inline ::uint32_t MmCompactionWakeupKcompactdFtraceEvent::_internal_highest_zoneidx() const {
  return _impl_.highest_zoneidx_;
}
inline void MmCompactionWakeupKcompactdFtraceEvent::_internal_set_highest_zoneidx(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.highest_zoneidx_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fftrace_2fcompaction_2eproto_2epb_2eh
