// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/ftrace/v4l2.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fftrace_2fv4l2_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fftrace_2fv4l2_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2ftrace_2fftrace_2fv4l2_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fv4l2_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_protos_2fperfetto_2ftrace_2fftrace_2fv4l2_2eproto;
namespace perfetto {
namespace protos {
class V4l2DqbufFtraceEvent;
struct V4l2DqbufFtraceEventDefaultTypeInternal;
extern V4l2DqbufFtraceEventDefaultTypeInternal _V4l2DqbufFtraceEvent_default_instance_;
class V4l2QbufFtraceEvent;
struct V4l2QbufFtraceEventDefaultTypeInternal;
extern V4l2QbufFtraceEventDefaultTypeInternal _V4l2QbufFtraceEvent_default_instance_;
class Vb2V4l2BufDoneFtraceEvent;
struct Vb2V4l2BufDoneFtraceEventDefaultTypeInternal;
extern Vb2V4l2BufDoneFtraceEventDefaultTypeInternal _Vb2V4l2BufDoneFtraceEvent_default_instance_;
class Vb2V4l2BufQueueFtraceEvent;
struct Vb2V4l2BufQueueFtraceEventDefaultTypeInternal;
extern Vb2V4l2BufQueueFtraceEventDefaultTypeInternal _Vb2V4l2BufQueueFtraceEvent_default_instance_;
class Vb2V4l2DqbufFtraceEvent;
struct Vb2V4l2DqbufFtraceEventDefaultTypeInternal;
extern Vb2V4l2DqbufFtraceEventDefaultTypeInternal _Vb2V4l2DqbufFtraceEvent_default_instance_;
class Vb2V4l2QbufFtraceEvent;
struct Vb2V4l2QbufFtraceEventDefaultTypeInternal;
extern Vb2V4l2QbufFtraceEventDefaultTypeInternal _Vb2V4l2QbufFtraceEvent_default_instance_;
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template <>
::perfetto::protos::V4l2DqbufFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::V4l2DqbufFtraceEvent>(Arena*);
template <>
::perfetto::protos::V4l2QbufFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::V4l2QbufFtraceEvent>(Arena*);
template <>
::perfetto::protos::Vb2V4l2BufDoneFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::Vb2V4l2BufDoneFtraceEvent>(Arena*);
template <>
::perfetto::protos::Vb2V4l2BufQueueFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::Vb2V4l2BufQueueFtraceEvent>(Arena*);
template <>
::perfetto::protos::Vb2V4l2DqbufFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::Vb2V4l2DqbufFtraceEvent>(Arena*);
template <>
::perfetto::protos::Vb2V4l2QbufFtraceEvent* Arena::CreateMaybeMessage<::perfetto::protos::Vb2V4l2QbufFtraceEvent>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace perfetto {
namespace protos {

// ===================================================================


// -------------------------------------------------------------------

class V4l2QbufFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.V4l2QbufFtraceEvent) */ {
 public:
  inline V4l2QbufFtraceEvent() : V4l2QbufFtraceEvent(nullptr) {}
  ~V4l2QbufFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR V4l2QbufFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  V4l2QbufFtraceEvent(const V4l2QbufFtraceEvent& from);
  V4l2QbufFtraceEvent(V4l2QbufFtraceEvent&& from) noexcept
    : V4l2QbufFtraceEvent() {
    *this = ::std::move(from);
  }

  inline V4l2QbufFtraceEvent& operator=(const V4l2QbufFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline V4l2QbufFtraceEvent& operator=(V4l2QbufFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const V4l2QbufFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const V4l2QbufFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const V4l2QbufFtraceEvent*>(
               &_V4l2QbufFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(V4l2QbufFtraceEvent& a, V4l2QbufFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(V4l2QbufFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(V4l2QbufFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  V4l2QbufFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<V4l2QbufFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const V4l2QbufFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const V4l2QbufFtraceEvent& from) {
    V4l2QbufFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(V4l2QbufFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.V4l2QbufFtraceEvent";
  }
  protected:
  explicit V4l2QbufFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBytesusedFieldNumber = 1,
    kFieldFieldNumber = 2,
    kFlagsFieldNumber = 3,
    kIndexFieldNumber = 4,
    kMinorFieldNumber = 5,
    kSequenceFieldNumber = 6,
    kTimecodeFlagsFieldNumber = 7,
    kTimecodeFramesFieldNumber = 8,
    kTimecodeHoursFieldNumber = 9,
    kTimecodeMinutesFieldNumber = 10,
    kTimecodeSecondsFieldNumber = 11,
    kTimecodeTypeFieldNumber = 12,
    kTimecodeUserbits0FieldNumber = 13,
    kTimecodeUserbits1FieldNumber = 14,
    kTimecodeUserbits2FieldNumber = 15,
    kTimecodeUserbits3FieldNumber = 16,
    kTimestampFieldNumber = 17,
    kTypeFieldNumber = 18,
  };
  // optional uint32 bytesused = 1;
  bool has_bytesused() const;
  void clear_bytesused() ;
  ::uint32_t bytesused() const;
  void set_bytesused(::uint32_t value);

  private:
  ::uint32_t _internal_bytesused() const;
  void _internal_set_bytesused(::uint32_t value);

  public:
  // optional uint32 field = 2;
  bool has_field() const;
  void clear_field() ;
  ::uint32_t field() const;
  void set_field(::uint32_t value);

  private:
  ::uint32_t _internal_field() const;
  void _internal_set_field(::uint32_t value);

  public:
  // optional uint32 flags = 3;
  bool has_flags() const;
  void clear_flags() ;
  ::uint32_t flags() const;
  void set_flags(::uint32_t value);

  private:
  ::uint32_t _internal_flags() const;
  void _internal_set_flags(::uint32_t value);

  public:
  // optional uint32 index = 4;
  bool has_index() const;
  void clear_index() ;
  ::uint32_t index() const;
  void set_index(::uint32_t value);

  private:
  ::uint32_t _internal_index() const;
  void _internal_set_index(::uint32_t value);

  public:
  // optional int32 minor = 5;
  bool has_minor() const;
  void clear_minor() ;
  ::int32_t minor() const;
  void set_minor(::int32_t value);

  private:
  ::int32_t _internal_minor() const;
  void _internal_set_minor(::int32_t value);

  public:
  // optional uint32 sequence = 6;
  bool has_sequence() const;
  void clear_sequence() ;
  ::uint32_t sequence() const;
  void set_sequence(::uint32_t value);

  private:
  ::uint32_t _internal_sequence() const;
  void _internal_set_sequence(::uint32_t value);

  public:
  // optional uint32 timecode_flags = 7;
  bool has_timecode_flags() const;
  void clear_timecode_flags() ;
  ::uint32_t timecode_flags() const;
  void set_timecode_flags(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_flags() const;
  void _internal_set_timecode_flags(::uint32_t value);

  public:
  // optional uint32 timecode_frames = 8;
  bool has_timecode_frames() const;
  void clear_timecode_frames() ;
  ::uint32_t timecode_frames() const;
  void set_timecode_frames(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_frames() const;
  void _internal_set_timecode_frames(::uint32_t value);

  public:
  // optional uint32 timecode_hours = 9;
  bool has_timecode_hours() const;
  void clear_timecode_hours() ;
  ::uint32_t timecode_hours() const;
  void set_timecode_hours(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_hours() const;
  void _internal_set_timecode_hours(::uint32_t value);

  public:
  // optional uint32 timecode_minutes = 10;
  bool has_timecode_minutes() const;
  void clear_timecode_minutes() ;
  ::uint32_t timecode_minutes() const;
  void set_timecode_minutes(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_minutes() const;
  void _internal_set_timecode_minutes(::uint32_t value);

  public:
  // optional uint32 timecode_seconds = 11;
  bool has_timecode_seconds() const;
  void clear_timecode_seconds() ;
  ::uint32_t timecode_seconds() const;
  void set_timecode_seconds(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_seconds() const;
  void _internal_set_timecode_seconds(::uint32_t value);

  public:
  // optional uint32 timecode_type = 12;
  bool has_timecode_type() const;
  void clear_timecode_type() ;
  ::uint32_t timecode_type() const;
  void set_timecode_type(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_type() const;
  void _internal_set_timecode_type(::uint32_t value);

  public:
  // optional uint32 timecode_userbits0 = 13;
  bool has_timecode_userbits0() const;
  void clear_timecode_userbits0() ;
  ::uint32_t timecode_userbits0() const;
  void set_timecode_userbits0(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits0() const;
  void _internal_set_timecode_userbits0(::uint32_t value);

  public:
  // optional uint32 timecode_userbits1 = 14;
  bool has_timecode_userbits1() const;
  void clear_timecode_userbits1() ;
  ::uint32_t timecode_userbits1() const;
  void set_timecode_userbits1(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits1() const;
  void _internal_set_timecode_userbits1(::uint32_t value);

  public:
  // optional uint32 timecode_userbits2 = 15;
  bool has_timecode_userbits2() const;
  void clear_timecode_userbits2() ;
  ::uint32_t timecode_userbits2() const;
  void set_timecode_userbits2(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits2() const;
  void _internal_set_timecode_userbits2(::uint32_t value);

  public:
  // optional uint32 timecode_userbits3 = 16;
  bool has_timecode_userbits3() const;
  void clear_timecode_userbits3() ;
  ::uint32_t timecode_userbits3() const;
  void set_timecode_userbits3(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits3() const;
  void _internal_set_timecode_userbits3(::uint32_t value);

  public:
  // optional int64 timestamp = 17;
  bool has_timestamp() const;
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // optional uint32 type = 18;
  bool has_type() const;
  void clear_type() ;
  ::uint32_t type() const;
  void set_type(::uint32_t value);

  private:
  ::uint32_t _internal_type() const;
  void _internal_set_type(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.V4l2QbufFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::uint32_t bytesused_;
    ::uint32_t field_;
    ::uint32_t flags_;
    ::uint32_t index_;
    ::int32_t minor_;
    ::uint32_t sequence_;
    ::uint32_t timecode_flags_;
    ::uint32_t timecode_frames_;
    ::uint32_t timecode_hours_;
    ::uint32_t timecode_minutes_;
    ::uint32_t timecode_seconds_;
    ::uint32_t timecode_type_;
    ::uint32_t timecode_userbits0_;
    ::uint32_t timecode_userbits1_;
    ::uint32_t timecode_userbits2_;
    ::uint32_t timecode_userbits3_;
    ::int64_t timestamp_;
    ::uint32_t type_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fv4l2_2eproto;
};// -------------------------------------------------------------------

class V4l2DqbufFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.V4l2DqbufFtraceEvent) */ {
 public:
  inline V4l2DqbufFtraceEvent() : V4l2DqbufFtraceEvent(nullptr) {}
  ~V4l2DqbufFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR V4l2DqbufFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  V4l2DqbufFtraceEvent(const V4l2DqbufFtraceEvent& from);
  V4l2DqbufFtraceEvent(V4l2DqbufFtraceEvent&& from) noexcept
    : V4l2DqbufFtraceEvent() {
    *this = ::std::move(from);
  }

  inline V4l2DqbufFtraceEvent& operator=(const V4l2DqbufFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline V4l2DqbufFtraceEvent& operator=(V4l2DqbufFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const V4l2DqbufFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const V4l2DqbufFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const V4l2DqbufFtraceEvent*>(
               &_V4l2DqbufFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(V4l2DqbufFtraceEvent& a, V4l2DqbufFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(V4l2DqbufFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(V4l2DqbufFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  V4l2DqbufFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<V4l2DqbufFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const V4l2DqbufFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const V4l2DqbufFtraceEvent& from) {
    V4l2DqbufFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(V4l2DqbufFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.V4l2DqbufFtraceEvent";
  }
  protected:
  explicit V4l2DqbufFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBytesusedFieldNumber = 1,
    kFieldFieldNumber = 2,
    kFlagsFieldNumber = 3,
    kIndexFieldNumber = 4,
    kMinorFieldNumber = 5,
    kSequenceFieldNumber = 6,
    kTimecodeFlagsFieldNumber = 7,
    kTimecodeFramesFieldNumber = 8,
    kTimecodeHoursFieldNumber = 9,
    kTimecodeMinutesFieldNumber = 10,
    kTimecodeSecondsFieldNumber = 11,
    kTimecodeTypeFieldNumber = 12,
    kTimecodeUserbits0FieldNumber = 13,
    kTimecodeUserbits1FieldNumber = 14,
    kTimecodeUserbits2FieldNumber = 15,
    kTimecodeUserbits3FieldNumber = 16,
    kTimestampFieldNumber = 17,
    kTypeFieldNumber = 18,
  };
  // optional uint32 bytesused = 1;
  bool has_bytesused() const;
  void clear_bytesused() ;
  ::uint32_t bytesused() const;
  void set_bytesused(::uint32_t value);

  private:
  ::uint32_t _internal_bytesused() const;
  void _internal_set_bytesused(::uint32_t value);

  public:
  // optional uint32 field = 2;
  bool has_field() const;
  void clear_field() ;
  ::uint32_t field() const;
  void set_field(::uint32_t value);

  private:
  ::uint32_t _internal_field() const;
  void _internal_set_field(::uint32_t value);

  public:
  // optional uint32 flags = 3;
  bool has_flags() const;
  void clear_flags() ;
  ::uint32_t flags() const;
  void set_flags(::uint32_t value);

  private:
  ::uint32_t _internal_flags() const;
  void _internal_set_flags(::uint32_t value);

  public:
  // optional uint32 index = 4;
  bool has_index() const;
  void clear_index() ;
  ::uint32_t index() const;
  void set_index(::uint32_t value);

  private:
  ::uint32_t _internal_index() const;
  void _internal_set_index(::uint32_t value);

  public:
  // optional int32 minor = 5;
  bool has_minor() const;
  void clear_minor() ;
  ::int32_t minor() const;
  void set_minor(::int32_t value);

  private:
  ::int32_t _internal_minor() const;
  void _internal_set_minor(::int32_t value);

  public:
  // optional uint32 sequence = 6;
  bool has_sequence() const;
  void clear_sequence() ;
  ::uint32_t sequence() const;
  void set_sequence(::uint32_t value);

  private:
  ::uint32_t _internal_sequence() const;
  void _internal_set_sequence(::uint32_t value);

  public:
  // optional uint32 timecode_flags = 7;
  bool has_timecode_flags() const;
  void clear_timecode_flags() ;
  ::uint32_t timecode_flags() const;
  void set_timecode_flags(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_flags() const;
  void _internal_set_timecode_flags(::uint32_t value);

  public:
  // optional uint32 timecode_frames = 8;
  bool has_timecode_frames() const;
  void clear_timecode_frames() ;
  ::uint32_t timecode_frames() const;
  void set_timecode_frames(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_frames() const;
  void _internal_set_timecode_frames(::uint32_t value);

  public:
  // optional uint32 timecode_hours = 9;
  bool has_timecode_hours() const;
  void clear_timecode_hours() ;
  ::uint32_t timecode_hours() const;
  void set_timecode_hours(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_hours() const;
  void _internal_set_timecode_hours(::uint32_t value);

  public:
  // optional uint32 timecode_minutes = 10;
  bool has_timecode_minutes() const;
  void clear_timecode_minutes() ;
  ::uint32_t timecode_minutes() const;
  void set_timecode_minutes(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_minutes() const;
  void _internal_set_timecode_minutes(::uint32_t value);

  public:
  // optional uint32 timecode_seconds = 11;
  bool has_timecode_seconds() const;
  void clear_timecode_seconds() ;
  ::uint32_t timecode_seconds() const;
  void set_timecode_seconds(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_seconds() const;
  void _internal_set_timecode_seconds(::uint32_t value);

  public:
  // optional uint32 timecode_type = 12;
  bool has_timecode_type() const;
  void clear_timecode_type() ;
  ::uint32_t timecode_type() const;
  void set_timecode_type(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_type() const;
  void _internal_set_timecode_type(::uint32_t value);

  public:
  // optional uint32 timecode_userbits0 = 13;
  bool has_timecode_userbits0() const;
  void clear_timecode_userbits0() ;
  ::uint32_t timecode_userbits0() const;
  void set_timecode_userbits0(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits0() const;
  void _internal_set_timecode_userbits0(::uint32_t value);

  public:
  // optional uint32 timecode_userbits1 = 14;
  bool has_timecode_userbits1() const;
  void clear_timecode_userbits1() ;
  ::uint32_t timecode_userbits1() const;
  void set_timecode_userbits1(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits1() const;
  void _internal_set_timecode_userbits1(::uint32_t value);

  public:
  // optional uint32 timecode_userbits2 = 15;
  bool has_timecode_userbits2() const;
  void clear_timecode_userbits2() ;
  ::uint32_t timecode_userbits2() const;
  void set_timecode_userbits2(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits2() const;
  void _internal_set_timecode_userbits2(::uint32_t value);

  public:
  // optional uint32 timecode_userbits3 = 16;
  bool has_timecode_userbits3() const;
  void clear_timecode_userbits3() ;
  ::uint32_t timecode_userbits3() const;
  void set_timecode_userbits3(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits3() const;
  void _internal_set_timecode_userbits3(::uint32_t value);

  public:
  // optional int64 timestamp = 17;
  bool has_timestamp() const;
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // optional uint32 type = 18;
  bool has_type() const;
  void clear_type() ;
  ::uint32_t type() const;
  void set_type(::uint32_t value);

  private:
  ::uint32_t _internal_type() const;
  void _internal_set_type(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.V4l2DqbufFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::uint32_t bytesused_;
    ::uint32_t field_;
    ::uint32_t flags_;
    ::uint32_t index_;
    ::int32_t minor_;
    ::uint32_t sequence_;
    ::uint32_t timecode_flags_;
    ::uint32_t timecode_frames_;
    ::uint32_t timecode_hours_;
    ::uint32_t timecode_minutes_;
    ::uint32_t timecode_seconds_;
    ::uint32_t timecode_type_;
    ::uint32_t timecode_userbits0_;
    ::uint32_t timecode_userbits1_;
    ::uint32_t timecode_userbits2_;
    ::uint32_t timecode_userbits3_;
    ::int64_t timestamp_;
    ::uint32_t type_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fv4l2_2eproto;
};// -------------------------------------------------------------------

class Vb2V4l2BufQueueFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.Vb2V4l2BufQueueFtraceEvent) */ {
 public:
  inline Vb2V4l2BufQueueFtraceEvent() : Vb2V4l2BufQueueFtraceEvent(nullptr) {}
  ~Vb2V4l2BufQueueFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Vb2V4l2BufQueueFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vb2V4l2BufQueueFtraceEvent(const Vb2V4l2BufQueueFtraceEvent& from);
  Vb2V4l2BufQueueFtraceEvent(Vb2V4l2BufQueueFtraceEvent&& from) noexcept
    : Vb2V4l2BufQueueFtraceEvent() {
    *this = ::std::move(from);
  }

  inline Vb2V4l2BufQueueFtraceEvent& operator=(const Vb2V4l2BufQueueFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vb2V4l2BufQueueFtraceEvent& operator=(Vb2V4l2BufQueueFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vb2V4l2BufQueueFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vb2V4l2BufQueueFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const Vb2V4l2BufQueueFtraceEvent*>(
               &_Vb2V4l2BufQueueFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Vb2V4l2BufQueueFtraceEvent& a, Vb2V4l2BufQueueFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(Vb2V4l2BufQueueFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vb2V4l2BufQueueFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vb2V4l2BufQueueFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vb2V4l2BufQueueFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vb2V4l2BufQueueFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vb2V4l2BufQueueFtraceEvent& from) {
    Vb2V4l2BufQueueFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vb2V4l2BufQueueFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.Vb2V4l2BufQueueFtraceEvent";
  }
  protected:
  explicit Vb2V4l2BufQueueFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldFieldNumber = 1,
    kFlagsFieldNumber = 2,
    kMinorFieldNumber = 3,
    kSequenceFieldNumber = 4,
    kTimecodeFlagsFieldNumber = 5,
    kTimecodeFramesFieldNumber = 6,
    kTimecodeHoursFieldNumber = 7,
    kTimecodeMinutesFieldNumber = 8,
    kTimecodeSecondsFieldNumber = 9,
    kTimecodeTypeFieldNumber = 10,
    kTimecodeUserbits0FieldNumber = 11,
    kTimecodeUserbits1FieldNumber = 12,
    kTimecodeUserbits2FieldNumber = 13,
    kTimecodeUserbits3FieldNumber = 14,
    kTimestampFieldNumber = 15,
  };
  // optional uint32 field = 1;
  bool has_field() const;
  void clear_field() ;
  ::uint32_t field() const;
  void set_field(::uint32_t value);

  private:
  ::uint32_t _internal_field() const;
  void _internal_set_field(::uint32_t value);

  public:
  // optional uint32 flags = 2;
  bool has_flags() const;
  void clear_flags() ;
  ::uint32_t flags() const;
  void set_flags(::uint32_t value);

  private:
  ::uint32_t _internal_flags() const;
  void _internal_set_flags(::uint32_t value);

  public:
  // optional int32 minor = 3;
  bool has_minor() const;
  void clear_minor() ;
  ::int32_t minor() const;
  void set_minor(::int32_t value);

  private:
  ::int32_t _internal_minor() const;
  void _internal_set_minor(::int32_t value);

  public:
  // optional uint32 sequence = 4;
  bool has_sequence() const;
  void clear_sequence() ;
  ::uint32_t sequence() const;
  void set_sequence(::uint32_t value);

  private:
  ::uint32_t _internal_sequence() const;
  void _internal_set_sequence(::uint32_t value);

  public:
  // optional uint32 timecode_flags = 5;
  bool has_timecode_flags() const;
  void clear_timecode_flags() ;
  ::uint32_t timecode_flags() const;
  void set_timecode_flags(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_flags() const;
  void _internal_set_timecode_flags(::uint32_t value);

  public:
  // optional uint32 timecode_frames = 6;
  bool has_timecode_frames() const;
  void clear_timecode_frames() ;
  ::uint32_t timecode_frames() const;
  void set_timecode_frames(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_frames() const;
  void _internal_set_timecode_frames(::uint32_t value);

  public:
  // optional uint32 timecode_hours = 7;
  bool has_timecode_hours() const;
  void clear_timecode_hours() ;
  ::uint32_t timecode_hours() const;
  void set_timecode_hours(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_hours() const;
  void _internal_set_timecode_hours(::uint32_t value);

  public:
  // optional uint32 timecode_minutes = 8;
  bool has_timecode_minutes() const;
  void clear_timecode_minutes() ;
  ::uint32_t timecode_minutes() const;
  void set_timecode_minutes(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_minutes() const;
  void _internal_set_timecode_minutes(::uint32_t value);

  public:
  // optional uint32 timecode_seconds = 9;
  bool has_timecode_seconds() const;
  void clear_timecode_seconds() ;
  ::uint32_t timecode_seconds() const;
  void set_timecode_seconds(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_seconds() const;
  void _internal_set_timecode_seconds(::uint32_t value);

  public:
  // optional uint32 timecode_type = 10;
  bool has_timecode_type() const;
  void clear_timecode_type() ;
  ::uint32_t timecode_type() const;
  void set_timecode_type(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_type() const;
  void _internal_set_timecode_type(::uint32_t value);

  public:
  // optional uint32 timecode_userbits0 = 11;
  bool has_timecode_userbits0() const;
  void clear_timecode_userbits0() ;
  ::uint32_t timecode_userbits0() const;
  void set_timecode_userbits0(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits0() const;
  void _internal_set_timecode_userbits0(::uint32_t value);

  public:
  // optional uint32 timecode_userbits1 = 12;
  bool has_timecode_userbits1() const;
  void clear_timecode_userbits1() ;
  ::uint32_t timecode_userbits1() const;
  void set_timecode_userbits1(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits1() const;
  void _internal_set_timecode_userbits1(::uint32_t value);

  public:
  // optional uint32 timecode_userbits2 = 13;
  bool has_timecode_userbits2() const;
  void clear_timecode_userbits2() ;
  ::uint32_t timecode_userbits2() const;
  void set_timecode_userbits2(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits2() const;
  void _internal_set_timecode_userbits2(::uint32_t value);

  public:
  // optional uint32 timecode_userbits3 = 14;
  bool has_timecode_userbits3() const;
  void clear_timecode_userbits3() ;
  ::uint32_t timecode_userbits3() const;
  void set_timecode_userbits3(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits3() const;
  void _internal_set_timecode_userbits3(::uint32_t value);

  public:
  // optional int64 timestamp = 15;
  bool has_timestamp() const;
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.Vb2V4l2BufQueueFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::uint32_t field_;
    ::uint32_t flags_;
    ::int32_t minor_;
    ::uint32_t sequence_;
    ::uint32_t timecode_flags_;
    ::uint32_t timecode_frames_;
    ::uint32_t timecode_hours_;
    ::uint32_t timecode_minutes_;
    ::uint32_t timecode_seconds_;
    ::uint32_t timecode_type_;
    ::uint32_t timecode_userbits0_;
    ::uint32_t timecode_userbits1_;
    ::uint32_t timecode_userbits2_;
    ::uint32_t timecode_userbits3_;
    ::int64_t timestamp_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fv4l2_2eproto;
};// -------------------------------------------------------------------

class Vb2V4l2BufDoneFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.Vb2V4l2BufDoneFtraceEvent) */ {
 public:
  inline Vb2V4l2BufDoneFtraceEvent() : Vb2V4l2BufDoneFtraceEvent(nullptr) {}
  ~Vb2V4l2BufDoneFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Vb2V4l2BufDoneFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vb2V4l2BufDoneFtraceEvent(const Vb2V4l2BufDoneFtraceEvent& from);
  Vb2V4l2BufDoneFtraceEvent(Vb2V4l2BufDoneFtraceEvent&& from) noexcept
    : Vb2V4l2BufDoneFtraceEvent() {
    *this = ::std::move(from);
  }

  inline Vb2V4l2BufDoneFtraceEvent& operator=(const Vb2V4l2BufDoneFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vb2V4l2BufDoneFtraceEvent& operator=(Vb2V4l2BufDoneFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vb2V4l2BufDoneFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vb2V4l2BufDoneFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const Vb2V4l2BufDoneFtraceEvent*>(
               &_Vb2V4l2BufDoneFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Vb2V4l2BufDoneFtraceEvent& a, Vb2V4l2BufDoneFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(Vb2V4l2BufDoneFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vb2V4l2BufDoneFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vb2V4l2BufDoneFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vb2V4l2BufDoneFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vb2V4l2BufDoneFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vb2V4l2BufDoneFtraceEvent& from) {
    Vb2V4l2BufDoneFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vb2V4l2BufDoneFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.Vb2V4l2BufDoneFtraceEvent";
  }
  protected:
  explicit Vb2V4l2BufDoneFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldFieldNumber = 1,
    kFlagsFieldNumber = 2,
    kMinorFieldNumber = 3,
    kSequenceFieldNumber = 4,
    kTimecodeFlagsFieldNumber = 5,
    kTimecodeFramesFieldNumber = 6,
    kTimecodeHoursFieldNumber = 7,
    kTimecodeMinutesFieldNumber = 8,
    kTimecodeSecondsFieldNumber = 9,
    kTimecodeTypeFieldNumber = 10,
    kTimecodeUserbits0FieldNumber = 11,
    kTimecodeUserbits1FieldNumber = 12,
    kTimecodeUserbits2FieldNumber = 13,
    kTimecodeUserbits3FieldNumber = 14,
    kTimestampFieldNumber = 15,
  };
  // optional uint32 field = 1;
  bool has_field() const;
  void clear_field() ;
  ::uint32_t field() const;
  void set_field(::uint32_t value);

  private:
  ::uint32_t _internal_field() const;
  void _internal_set_field(::uint32_t value);

  public:
  // optional uint32 flags = 2;
  bool has_flags() const;
  void clear_flags() ;
  ::uint32_t flags() const;
  void set_flags(::uint32_t value);

  private:
  ::uint32_t _internal_flags() const;
  void _internal_set_flags(::uint32_t value);

  public:
  // optional int32 minor = 3;
  bool has_minor() const;
  void clear_minor() ;
  ::int32_t minor() const;
  void set_minor(::int32_t value);

  private:
  ::int32_t _internal_minor() const;
  void _internal_set_minor(::int32_t value);

  public:
  // optional uint32 sequence = 4;
  bool has_sequence() const;
  void clear_sequence() ;
  ::uint32_t sequence() const;
  void set_sequence(::uint32_t value);

  private:
  ::uint32_t _internal_sequence() const;
  void _internal_set_sequence(::uint32_t value);

  public:
  // optional uint32 timecode_flags = 5;
  bool has_timecode_flags() const;
  void clear_timecode_flags() ;
  ::uint32_t timecode_flags() const;
  void set_timecode_flags(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_flags() const;
  void _internal_set_timecode_flags(::uint32_t value);

  public:
  // optional uint32 timecode_frames = 6;
  bool has_timecode_frames() const;
  void clear_timecode_frames() ;
  ::uint32_t timecode_frames() const;
  void set_timecode_frames(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_frames() const;
  void _internal_set_timecode_frames(::uint32_t value);

  public:
  // optional uint32 timecode_hours = 7;
  bool has_timecode_hours() const;
  void clear_timecode_hours() ;
  ::uint32_t timecode_hours() const;
  void set_timecode_hours(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_hours() const;
  void _internal_set_timecode_hours(::uint32_t value);

  public:
  // optional uint32 timecode_minutes = 8;
  bool has_timecode_minutes() const;
  void clear_timecode_minutes() ;
  ::uint32_t timecode_minutes() const;
  void set_timecode_minutes(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_minutes() const;
  void _internal_set_timecode_minutes(::uint32_t value);

  public:
  // optional uint32 timecode_seconds = 9;
  bool has_timecode_seconds() const;
  void clear_timecode_seconds() ;
  ::uint32_t timecode_seconds() const;
  void set_timecode_seconds(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_seconds() const;
  void _internal_set_timecode_seconds(::uint32_t value);

  public:
  // optional uint32 timecode_type = 10;
  bool has_timecode_type() const;
  void clear_timecode_type() ;
  ::uint32_t timecode_type() const;
  void set_timecode_type(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_type() const;
  void _internal_set_timecode_type(::uint32_t value);

  public:
  // optional uint32 timecode_userbits0 = 11;
  bool has_timecode_userbits0() const;
  void clear_timecode_userbits0() ;
  ::uint32_t timecode_userbits0() const;
  void set_timecode_userbits0(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits0() const;
  void _internal_set_timecode_userbits0(::uint32_t value);

  public:
  // optional uint32 timecode_userbits1 = 12;
  bool has_timecode_userbits1() const;
  void clear_timecode_userbits1() ;
  ::uint32_t timecode_userbits1() const;
  void set_timecode_userbits1(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits1() const;
  void _internal_set_timecode_userbits1(::uint32_t value);

  public:
  // optional uint32 timecode_userbits2 = 13;
  bool has_timecode_userbits2() const;
  void clear_timecode_userbits2() ;
  ::uint32_t timecode_userbits2() const;
  void set_timecode_userbits2(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits2() const;
  void _internal_set_timecode_userbits2(::uint32_t value);

  public:
  // optional uint32 timecode_userbits3 = 14;
  bool has_timecode_userbits3() const;
  void clear_timecode_userbits3() ;
  ::uint32_t timecode_userbits3() const;
  void set_timecode_userbits3(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits3() const;
  void _internal_set_timecode_userbits3(::uint32_t value);

  public:
  // optional int64 timestamp = 15;
  bool has_timestamp() const;
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.Vb2V4l2BufDoneFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::uint32_t field_;
    ::uint32_t flags_;
    ::int32_t minor_;
    ::uint32_t sequence_;
    ::uint32_t timecode_flags_;
    ::uint32_t timecode_frames_;
    ::uint32_t timecode_hours_;
    ::uint32_t timecode_minutes_;
    ::uint32_t timecode_seconds_;
    ::uint32_t timecode_type_;
    ::uint32_t timecode_userbits0_;
    ::uint32_t timecode_userbits1_;
    ::uint32_t timecode_userbits2_;
    ::uint32_t timecode_userbits3_;
    ::int64_t timestamp_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fv4l2_2eproto;
};// -------------------------------------------------------------------

class Vb2V4l2QbufFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.Vb2V4l2QbufFtraceEvent) */ {
 public:
  inline Vb2V4l2QbufFtraceEvent() : Vb2V4l2QbufFtraceEvent(nullptr) {}
  ~Vb2V4l2QbufFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Vb2V4l2QbufFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vb2V4l2QbufFtraceEvent(const Vb2V4l2QbufFtraceEvent& from);
  Vb2V4l2QbufFtraceEvent(Vb2V4l2QbufFtraceEvent&& from) noexcept
    : Vb2V4l2QbufFtraceEvent() {
    *this = ::std::move(from);
  }

  inline Vb2V4l2QbufFtraceEvent& operator=(const Vb2V4l2QbufFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vb2V4l2QbufFtraceEvent& operator=(Vb2V4l2QbufFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vb2V4l2QbufFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vb2V4l2QbufFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const Vb2V4l2QbufFtraceEvent*>(
               &_Vb2V4l2QbufFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Vb2V4l2QbufFtraceEvent& a, Vb2V4l2QbufFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(Vb2V4l2QbufFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vb2V4l2QbufFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vb2V4l2QbufFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vb2V4l2QbufFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vb2V4l2QbufFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vb2V4l2QbufFtraceEvent& from) {
    Vb2V4l2QbufFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vb2V4l2QbufFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.Vb2V4l2QbufFtraceEvent";
  }
  protected:
  explicit Vb2V4l2QbufFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldFieldNumber = 1,
    kFlagsFieldNumber = 2,
    kMinorFieldNumber = 3,
    kSequenceFieldNumber = 4,
    kTimecodeFlagsFieldNumber = 5,
    kTimecodeFramesFieldNumber = 6,
    kTimecodeHoursFieldNumber = 7,
    kTimecodeMinutesFieldNumber = 8,
    kTimecodeSecondsFieldNumber = 9,
    kTimecodeTypeFieldNumber = 10,
    kTimecodeUserbits0FieldNumber = 11,
    kTimecodeUserbits1FieldNumber = 12,
    kTimecodeUserbits2FieldNumber = 13,
    kTimecodeUserbits3FieldNumber = 14,
    kTimestampFieldNumber = 15,
  };
  // optional uint32 field = 1;
  bool has_field() const;
  void clear_field() ;
  ::uint32_t field() const;
  void set_field(::uint32_t value);

  private:
  ::uint32_t _internal_field() const;
  void _internal_set_field(::uint32_t value);

  public:
  // optional uint32 flags = 2;
  bool has_flags() const;
  void clear_flags() ;
  ::uint32_t flags() const;
  void set_flags(::uint32_t value);

  private:
  ::uint32_t _internal_flags() const;
  void _internal_set_flags(::uint32_t value);

  public:
  // optional int32 minor = 3;
  bool has_minor() const;
  void clear_minor() ;
  ::int32_t minor() const;
  void set_minor(::int32_t value);

  private:
  ::int32_t _internal_minor() const;
  void _internal_set_minor(::int32_t value);

  public:
  // optional uint32 sequence = 4;
  bool has_sequence() const;
  void clear_sequence() ;
  ::uint32_t sequence() const;
  void set_sequence(::uint32_t value);

  private:
  ::uint32_t _internal_sequence() const;
  void _internal_set_sequence(::uint32_t value);

  public:
  // optional uint32 timecode_flags = 5;
  bool has_timecode_flags() const;
  void clear_timecode_flags() ;
  ::uint32_t timecode_flags() const;
  void set_timecode_flags(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_flags() const;
  void _internal_set_timecode_flags(::uint32_t value);

  public:
  // optional uint32 timecode_frames = 6;
  bool has_timecode_frames() const;
  void clear_timecode_frames() ;
  ::uint32_t timecode_frames() const;
  void set_timecode_frames(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_frames() const;
  void _internal_set_timecode_frames(::uint32_t value);

  public:
  // optional uint32 timecode_hours = 7;
  bool has_timecode_hours() const;
  void clear_timecode_hours() ;
  ::uint32_t timecode_hours() const;
  void set_timecode_hours(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_hours() const;
  void _internal_set_timecode_hours(::uint32_t value);

  public:
  // optional uint32 timecode_minutes = 8;
  bool has_timecode_minutes() const;
  void clear_timecode_minutes() ;
  ::uint32_t timecode_minutes() const;
  void set_timecode_minutes(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_minutes() const;
  void _internal_set_timecode_minutes(::uint32_t value);

  public:
  // optional uint32 timecode_seconds = 9;
  bool has_timecode_seconds() const;
  void clear_timecode_seconds() ;
  ::uint32_t timecode_seconds() const;
  void set_timecode_seconds(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_seconds() const;
  void _internal_set_timecode_seconds(::uint32_t value);

  public:
  // optional uint32 timecode_type = 10;
  bool has_timecode_type() const;
  void clear_timecode_type() ;
  ::uint32_t timecode_type() const;
  void set_timecode_type(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_type() const;
  void _internal_set_timecode_type(::uint32_t value);

  public:
  // optional uint32 timecode_userbits0 = 11;
  bool has_timecode_userbits0() const;
  void clear_timecode_userbits0() ;
  ::uint32_t timecode_userbits0() const;
  void set_timecode_userbits0(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits0() const;
  void _internal_set_timecode_userbits0(::uint32_t value);

  public:
  // optional uint32 timecode_userbits1 = 12;
  bool has_timecode_userbits1() const;
  void clear_timecode_userbits1() ;
  ::uint32_t timecode_userbits1() const;
  void set_timecode_userbits1(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits1() const;
  void _internal_set_timecode_userbits1(::uint32_t value);

  public:
  // optional uint32 timecode_userbits2 = 13;
  bool has_timecode_userbits2() const;
  void clear_timecode_userbits2() ;
  ::uint32_t timecode_userbits2() const;
  void set_timecode_userbits2(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits2() const;
  void _internal_set_timecode_userbits2(::uint32_t value);

  public:
  // optional uint32 timecode_userbits3 = 14;
  bool has_timecode_userbits3() const;
  void clear_timecode_userbits3() ;
  ::uint32_t timecode_userbits3() const;
  void set_timecode_userbits3(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits3() const;
  void _internal_set_timecode_userbits3(::uint32_t value);

  public:
  // optional int64 timestamp = 15;
  bool has_timestamp() const;
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.Vb2V4l2QbufFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::uint32_t field_;
    ::uint32_t flags_;
    ::int32_t minor_;
    ::uint32_t sequence_;
    ::uint32_t timecode_flags_;
    ::uint32_t timecode_frames_;
    ::uint32_t timecode_hours_;
    ::uint32_t timecode_minutes_;
    ::uint32_t timecode_seconds_;
    ::uint32_t timecode_type_;
    ::uint32_t timecode_userbits0_;
    ::uint32_t timecode_userbits1_;
    ::uint32_t timecode_userbits2_;
    ::uint32_t timecode_userbits3_;
    ::int64_t timestamp_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fv4l2_2eproto;
};// -------------------------------------------------------------------

class Vb2V4l2DqbufFtraceEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.Vb2V4l2DqbufFtraceEvent) */ {
 public:
  inline Vb2V4l2DqbufFtraceEvent() : Vb2V4l2DqbufFtraceEvent(nullptr) {}
  ~Vb2V4l2DqbufFtraceEvent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Vb2V4l2DqbufFtraceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vb2V4l2DqbufFtraceEvent(const Vb2V4l2DqbufFtraceEvent& from);
  Vb2V4l2DqbufFtraceEvent(Vb2V4l2DqbufFtraceEvent&& from) noexcept
    : Vb2V4l2DqbufFtraceEvent() {
    *this = ::std::move(from);
  }

  inline Vb2V4l2DqbufFtraceEvent& operator=(const Vb2V4l2DqbufFtraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vb2V4l2DqbufFtraceEvent& operator=(Vb2V4l2DqbufFtraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vb2V4l2DqbufFtraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vb2V4l2DqbufFtraceEvent* internal_default_instance() {
    return reinterpret_cast<const Vb2V4l2DqbufFtraceEvent*>(
               &_Vb2V4l2DqbufFtraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Vb2V4l2DqbufFtraceEvent& a, Vb2V4l2DqbufFtraceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(Vb2V4l2DqbufFtraceEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vb2V4l2DqbufFtraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vb2V4l2DqbufFtraceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vb2V4l2DqbufFtraceEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vb2V4l2DqbufFtraceEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vb2V4l2DqbufFtraceEvent& from) {
    Vb2V4l2DqbufFtraceEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vb2V4l2DqbufFtraceEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.Vb2V4l2DqbufFtraceEvent";
  }
  protected:
  explicit Vb2V4l2DqbufFtraceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldFieldNumber = 1,
    kFlagsFieldNumber = 2,
    kMinorFieldNumber = 3,
    kSequenceFieldNumber = 4,
    kTimecodeFlagsFieldNumber = 5,
    kTimecodeFramesFieldNumber = 6,
    kTimecodeHoursFieldNumber = 7,
    kTimecodeMinutesFieldNumber = 8,
    kTimecodeSecondsFieldNumber = 9,
    kTimecodeTypeFieldNumber = 10,
    kTimecodeUserbits0FieldNumber = 11,
    kTimecodeUserbits1FieldNumber = 12,
    kTimecodeUserbits2FieldNumber = 13,
    kTimecodeUserbits3FieldNumber = 14,
    kTimestampFieldNumber = 15,
  };
  // optional uint32 field = 1;
  bool has_field() const;
  void clear_field() ;
  ::uint32_t field() const;
  void set_field(::uint32_t value);

  private:
  ::uint32_t _internal_field() const;
  void _internal_set_field(::uint32_t value);

  public:
  // optional uint32 flags = 2;
  bool has_flags() const;
  void clear_flags() ;
  ::uint32_t flags() const;
  void set_flags(::uint32_t value);

  private:
  ::uint32_t _internal_flags() const;
  void _internal_set_flags(::uint32_t value);

  public:
  // optional int32 minor = 3;
  bool has_minor() const;
  void clear_minor() ;
  ::int32_t minor() const;
  void set_minor(::int32_t value);

  private:
  ::int32_t _internal_minor() const;
  void _internal_set_minor(::int32_t value);

  public:
  // optional uint32 sequence = 4;
  bool has_sequence() const;
  void clear_sequence() ;
  ::uint32_t sequence() const;
  void set_sequence(::uint32_t value);

  private:
  ::uint32_t _internal_sequence() const;
  void _internal_set_sequence(::uint32_t value);

  public:
  // optional uint32 timecode_flags = 5;
  bool has_timecode_flags() const;
  void clear_timecode_flags() ;
  ::uint32_t timecode_flags() const;
  void set_timecode_flags(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_flags() const;
  void _internal_set_timecode_flags(::uint32_t value);

  public:
  // optional uint32 timecode_frames = 6;
  bool has_timecode_frames() const;
  void clear_timecode_frames() ;
  ::uint32_t timecode_frames() const;
  void set_timecode_frames(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_frames() const;
  void _internal_set_timecode_frames(::uint32_t value);

  public:
  // optional uint32 timecode_hours = 7;
  bool has_timecode_hours() const;
  void clear_timecode_hours() ;
  ::uint32_t timecode_hours() const;
  void set_timecode_hours(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_hours() const;
  void _internal_set_timecode_hours(::uint32_t value);

  public:
  // optional uint32 timecode_minutes = 8;
  bool has_timecode_minutes() const;
  void clear_timecode_minutes() ;
  ::uint32_t timecode_minutes() const;
  void set_timecode_minutes(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_minutes() const;
  void _internal_set_timecode_minutes(::uint32_t value);

  public:
  // optional uint32 timecode_seconds = 9;
  bool has_timecode_seconds() const;
  void clear_timecode_seconds() ;
  ::uint32_t timecode_seconds() const;
  void set_timecode_seconds(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_seconds() const;
  void _internal_set_timecode_seconds(::uint32_t value);

  public:
  // optional uint32 timecode_type = 10;
  bool has_timecode_type() const;
  void clear_timecode_type() ;
  ::uint32_t timecode_type() const;
  void set_timecode_type(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_type() const;
  void _internal_set_timecode_type(::uint32_t value);

  public:
  // optional uint32 timecode_userbits0 = 11;
  bool has_timecode_userbits0() const;
  void clear_timecode_userbits0() ;
  ::uint32_t timecode_userbits0() const;
  void set_timecode_userbits0(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits0() const;
  void _internal_set_timecode_userbits0(::uint32_t value);

  public:
  // optional uint32 timecode_userbits1 = 12;
  bool has_timecode_userbits1() const;
  void clear_timecode_userbits1() ;
  ::uint32_t timecode_userbits1() const;
  void set_timecode_userbits1(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits1() const;
  void _internal_set_timecode_userbits1(::uint32_t value);

  public:
  // optional uint32 timecode_userbits2 = 13;
  bool has_timecode_userbits2() const;
  void clear_timecode_userbits2() ;
  ::uint32_t timecode_userbits2() const;
  void set_timecode_userbits2(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits2() const;
  void _internal_set_timecode_userbits2(::uint32_t value);

  public:
  // optional uint32 timecode_userbits3 = 14;
  bool has_timecode_userbits3() const;
  void clear_timecode_userbits3() ;
  ::uint32_t timecode_userbits3() const;
  void set_timecode_userbits3(::uint32_t value);

  private:
  ::uint32_t _internal_timecode_userbits3() const;
  void _internal_set_timecode_userbits3(::uint32_t value);

  public:
  // optional int64 timestamp = 15;
  bool has_timestamp() const;
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.Vb2V4l2DqbufFtraceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::uint32_t field_;
    ::uint32_t flags_;
    ::int32_t minor_;
    ::uint32_t sequence_;
    ::uint32_t timecode_flags_;
    ::uint32_t timecode_frames_;
    ::uint32_t timecode_hours_;
    ::uint32_t timecode_minutes_;
    ::uint32_t timecode_seconds_;
    ::uint32_t timecode_type_;
    ::uint32_t timecode_userbits0_;
    ::uint32_t timecode_userbits1_;
    ::uint32_t timecode_userbits2_;
    ::uint32_t timecode_userbits3_;
    ::int64_t timestamp_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fftrace_2fv4l2_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// V4l2QbufFtraceEvent

// optional uint32 bytesused = 1;
inline bool V4l2QbufFtraceEvent::has_bytesused() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void V4l2QbufFtraceEvent::clear_bytesused() {
  _impl_.bytesused_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t V4l2QbufFtraceEvent::bytesused() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2QbufFtraceEvent.bytesused)
  return _internal_bytesused();
}
inline void V4l2QbufFtraceEvent::set_bytesused(::uint32_t value) {
  _internal_set_bytesused(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2QbufFtraceEvent.bytesused)
}
inline ::uint32_t V4l2QbufFtraceEvent::_internal_bytesused() const {
  return _impl_.bytesused_;
}
inline void V4l2QbufFtraceEvent::_internal_set_bytesused(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.bytesused_ = value;
}

// optional uint32 field = 2;
inline bool V4l2QbufFtraceEvent::has_field() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void V4l2QbufFtraceEvent::clear_field() {
  _impl_.field_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t V4l2QbufFtraceEvent::field() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2QbufFtraceEvent.field)
  return _internal_field();
}
inline void V4l2QbufFtraceEvent::set_field(::uint32_t value) {
  _internal_set_field(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2QbufFtraceEvent.field)
}
inline ::uint32_t V4l2QbufFtraceEvent::_internal_field() const {
  return _impl_.field_;
}
inline void V4l2QbufFtraceEvent::_internal_set_field(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.field_ = value;
}

// optional uint32 flags = 3;
inline bool V4l2QbufFtraceEvent::has_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void V4l2QbufFtraceEvent::clear_flags() {
  _impl_.flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t V4l2QbufFtraceEvent::flags() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2QbufFtraceEvent.flags)
  return _internal_flags();
}
inline void V4l2QbufFtraceEvent::set_flags(::uint32_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2QbufFtraceEvent.flags)
}
inline ::uint32_t V4l2QbufFtraceEvent::_internal_flags() const {
  return _impl_.flags_;
}
inline void V4l2QbufFtraceEvent::_internal_set_flags(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.flags_ = value;
}

// optional uint32 index = 4;
inline bool V4l2QbufFtraceEvent::has_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void V4l2QbufFtraceEvent::clear_index() {
  _impl_.index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t V4l2QbufFtraceEvent::index() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2QbufFtraceEvent.index)
  return _internal_index();
}
inline void V4l2QbufFtraceEvent::set_index(::uint32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2QbufFtraceEvent.index)
}
inline ::uint32_t V4l2QbufFtraceEvent::_internal_index() const {
  return _impl_.index_;
}
inline void V4l2QbufFtraceEvent::_internal_set_index(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.index_ = value;
}

// optional int32 minor = 5;
inline bool V4l2QbufFtraceEvent::has_minor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void V4l2QbufFtraceEvent::clear_minor() {
  _impl_.minor_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t V4l2QbufFtraceEvent::minor() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2QbufFtraceEvent.minor)
  return _internal_minor();
}
inline void V4l2QbufFtraceEvent::set_minor(::int32_t value) {
  _internal_set_minor(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2QbufFtraceEvent.minor)
}
inline ::int32_t V4l2QbufFtraceEvent::_internal_minor() const {
  return _impl_.minor_;
}
inline void V4l2QbufFtraceEvent::_internal_set_minor(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.minor_ = value;
}

// optional uint32 sequence = 6;
inline bool V4l2QbufFtraceEvent::has_sequence() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void V4l2QbufFtraceEvent::clear_sequence() {
  _impl_.sequence_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t V4l2QbufFtraceEvent::sequence() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2QbufFtraceEvent.sequence)
  return _internal_sequence();
}
inline void V4l2QbufFtraceEvent::set_sequence(::uint32_t value) {
  _internal_set_sequence(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2QbufFtraceEvent.sequence)
}
inline ::uint32_t V4l2QbufFtraceEvent::_internal_sequence() const {
  return _impl_.sequence_;
}
inline void V4l2QbufFtraceEvent::_internal_set_sequence(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.sequence_ = value;
}

// optional uint32 timecode_flags = 7;
inline bool V4l2QbufFtraceEvent::has_timecode_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void V4l2QbufFtraceEvent::clear_timecode_flags() {
  _impl_.timecode_flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t V4l2QbufFtraceEvent::timecode_flags() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2QbufFtraceEvent.timecode_flags)
  return _internal_timecode_flags();
}
inline void V4l2QbufFtraceEvent::set_timecode_flags(::uint32_t value) {
  _internal_set_timecode_flags(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2QbufFtraceEvent.timecode_flags)
}
inline ::uint32_t V4l2QbufFtraceEvent::_internal_timecode_flags() const {
  return _impl_.timecode_flags_;
}
inline void V4l2QbufFtraceEvent::_internal_set_timecode_flags(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.timecode_flags_ = value;
}

// optional uint32 timecode_frames = 8;
inline bool V4l2QbufFtraceEvent::has_timecode_frames() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void V4l2QbufFtraceEvent::clear_timecode_frames() {
  _impl_.timecode_frames_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t V4l2QbufFtraceEvent::timecode_frames() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2QbufFtraceEvent.timecode_frames)
  return _internal_timecode_frames();
}
inline void V4l2QbufFtraceEvent::set_timecode_frames(::uint32_t value) {
  _internal_set_timecode_frames(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2QbufFtraceEvent.timecode_frames)
}
inline ::uint32_t V4l2QbufFtraceEvent::_internal_timecode_frames() const {
  return _impl_.timecode_frames_;
}
inline void V4l2QbufFtraceEvent::_internal_set_timecode_frames(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.timecode_frames_ = value;
}

// optional uint32 timecode_hours = 9;
inline bool V4l2QbufFtraceEvent::has_timecode_hours() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void V4l2QbufFtraceEvent::clear_timecode_hours() {
  _impl_.timecode_hours_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t V4l2QbufFtraceEvent::timecode_hours() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2QbufFtraceEvent.timecode_hours)
  return _internal_timecode_hours();
}
inline void V4l2QbufFtraceEvent::set_timecode_hours(::uint32_t value) {
  _internal_set_timecode_hours(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2QbufFtraceEvent.timecode_hours)
}
inline ::uint32_t V4l2QbufFtraceEvent::_internal_timecode_hours() const {
  return _impl_.timecode_hours_;
}
inline void V4l2QbufFtraceEvent::_internal_set_timecode_hours(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.timecode_hours_ = value;
}

// optional uint32 timecode_minutes = 10;
inline bool V4l2QbufFtraceEvent::has_timecode_minutes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void V4l2QbufFtraceEvent::clear_timecode_minutes() {
  _impl_.timecode_minutes_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint32_t V4l2QbufFtraceEvent::timecode_minutes() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2QbufFtraceEvent.timecode_minutes)
  return _internal_timecode_minutes();
}
inline void V4l2QbufFtraceEvent::set_timecode_minutes(::uint32_t value) {
  _internal_set_timecode_minutes(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2QbufFtraceEvent.timecode_minutes)
}
inline ::uint32_t V4l2QbufFtraceEvent::_internal_timecode_minutes() const {
  return _impl_.timecode_minutes_;
}
inline void V4l2QbufFtraceEvent::_internal_set_timecode_minutes(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.timecode_minutes_ = value;
}

// optional uint32 timecode_seconds = 11;
inline bool V4l2QbufFtraceEvent::has_timecode_seconds() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void V4l2QbufFtraceEvent::clear_timecode_seconds() {
  _impl_.timecode_seconds_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint32_t V4l2QbufFtraceEvent::timecode_seconds() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2QbufFtraceEvent.timecode_seconds)
  return _internal_timecode_seconds();
}
inline void V4l2QbufFtraceEvent::set_timecode_seconds(::uint32_t value) {
  _internal_set_timecode_seconds(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2QbufFtraceEvent.timecode_seconds)
}
inline ::uint32_t V4l2QbufFtraceEvent::_internal_timecode_seconds() const {
  return _impl_.timecode_seconds_;
}
inline void V4l2QbufFtraceEvent::_internal_set_timecode_seconds(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.timecode_seconds_ = value;
}

// optional uint32 timecode_type = 12;
inline bool V4l2QbufFtraceEvent::has_timecode_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void V4l2QbufFtraceEvent::clear_timecode_type() {
  _impl_.timecode_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::uint32_t V4l2QbufFtraceEvent::timecode_type() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2QbufFtraceEvent.timecode_type)
  return _internal_timecode_type();
}
inline void V4l2QbufFtraceEvent::set_timecode_type(::uint32_t value) {
  _internal_set_timecode_type(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2QbufFtraceEvent.timecode_type)
}
inline ::uint32_t V4l2QbufFtraceEvent::_internal_timecode_type() const {
  return _impl_.timecode_type_;
}
inline void V4l2QbufFtraceEvent::_internal_set_timecode_type(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.timecode_type_ = value;
}

// optional uint32 timecode_userbits0 = 13;
inline bool V4l2QbufFtraceEvent::has_timecode_userbits0() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void V4l2QbufFtraceEvent::clear_timecode_userbits0() {
  _impl_.timecode_userbits0_ = 0u;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::uint32_t V4l2QbufFtraceEvent::timecode_userbits0() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2QbufFtraceEvent.timecode_userbits0)
  return _internal_timecode_userbits0();
}
inline void V4l2QbufFtraceEvent::set_timecode_userbits0(::uint32_t value) {
  _internal_set_timecode_userbits0(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2QbufFtraceEvent.timecode_userbits0)
}
inline ::uint32_t V4l2QbufFtraceEvent::_internal_timecode_userbits0() const {
  return _impl_.timecode_userbits0_;
}
inline void V4l2QbufFtraceEvent::_internal_set_timecode_userbits0(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.timecode_userbits0_ = value;
}

// optional uint32 timecode_userbits1 = 14;
inline bool V4l2QbufFtraceEvent::has_timecode_userbits1() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void V4l2QbufFtraceEvent::clear_timecode_userbits1() {
  _impl_.timecode_userbits1_ = 0u;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::uint32_t V4l2QbufFtraceEvent::timecode_userbits1() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2QbufFtraceEvent.timecode_userbits1)
  return _internal_timecode_userbits1();
}
inline void V4l2QbufFtraceEvent::set_timecode_userbits1(::uint32_t value) {
  _internal_set_timecode_userbits1(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2QbufFtraceEvent.timecode_userbits1)
}
inline ::uint32_t V4l2QbufFtraceEvent::_internal_timecode_userbits1() const {
  return _impl_.timecode_userbits1_;
}
inline void V4l2QbufFtraceEvent::_internal_set_timecode_userbits1(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00002000u;
  _impl_.timecode_userbits1_ = value;
}

// optional uint32 timecode_userbits2 = 15;
inline bool V4l2QbufFtraceEvent::has_timecode_userbits2() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void V4l2QbufFtraceEvent::clear_timecode_userbits2() {
  _impl_.timecode_userbits2_ = 0u;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::uint32_t V4l2QbufFtraceEvent::timecode_userbits2() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2QbufFtraceEvent.timecode_userbits2)
  return _internal_timecode_userbits2();
}
inline void V4l2QbufFtraceEvent::set_timecode_userbits2(::uint32_t value) {
  _internal_set_timecode_userbits2(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2QbufFtraceEvent.timecode_userbits2)
}
inline ::uint32_t V4l2QbufFtraceEvent::_internal_timecode_userbits2() const {
  return _impl_.timecode_userbits2_;
}
inline void V4l2QbufFtraceEvent::_internal_set_timecode_userbits2(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00004000u;
  _impl_.timecode_userbits2_ = value;
}

// optional uint32 timecode_userbits3 = 16;
inline bool V4l2QbufFtraceEvent::has_timecode_userbits3() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void V4l2QbufFtraceEvent::clear_timecode_userbits3() {
  _impl_.timecode_userbits3_ = 0u;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline ::uint32_t V4l2QbufFtraceEvent::timecode_userbits3() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2QbufFtraceEvent.timecode_userbits3)
  return _internal_timecode_userbits3();
}
inline void V4l2QbufFtraceEvent::set_timecode_userbits3(::uint32_t value) {
  _internal_set_timecode_userbits3(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2QbufFtraceEvent.timecode_userbits3)
}
inline ::uint32_t V4l2QbufFtraceEvent::_internal_timecode_userbits3() const {
  return _impl_.timecode_userbits3_;
}
inline void V4l2QbufFtraceEvent::_internal_set_timecode_userbits3(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00008000u;
  _impl_.timecode_userbits3_ = value;
}

// optional int64 timestamp = 17;
inline bool V4l2QbufFtraceEvent::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline void V4l2QbufFtraceEvent::clear_timestamp() {
  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline ::int64_t V4l2QbufFtraceEvent::timestamp() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2QbufFtraceEvent.timestamp)
  return _internal_timestamp();
}
inline void V4l2QbufFtraceEvent::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2QbufFtraceEvent.timestamp)
}
inline ::int64_t V4l2QbufFtraceEvent::_internal_timestamp() const {
  return _impl_.timestamp_;
}
inline void V4l2QbufFtraceEvent::_internal_set_timestamp(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00010000u;
  _impl_.timestamp_ = value;
}

// optional uint32 type = 18;
inline bool V4l2QbufFtraceEvent::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline void V4l2QbufFtraceEvent::clear_type() {
  _impl_.type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline ::uint32_t V4l2QbufFtraceEvent::type() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2QbufFtraceEvent.type)
  return _internal_type();
}
inline void V4l2QbufFtraceEvent::set_type(::uint32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2QbufFtraceEvent.type)
}
inline ::uint32_t V4l2QbufFtraceEvent::_internal_type() const {
  return _impl_.type_;
}
inline void V4l2QbufFtraceEvent::_internal_set_type(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00020000u;
  _impl_.type_ = value;
}

// -------------------------------------------------------------------

// V4l2DqbufFtraceEvent

// optional uint32 bytesused = 1;
inline bool V4l2DqbufFtraceEvent::has_bytesused() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void V4l2DqbufFtraceEvent::clear_bytesused() {
  _impl_.bytesused_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t V4l2DqbufFtraceEvent::bytesused() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2DqbufFtraceEvent.bytesused)
  return _internal_bytesused();
}
inline void V4l2DqbufFtraceEvent::set_bytesused(::uint32_t value) {
  _internal_set_bytesused(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2DqbufFtraceEvent.bytesused)
}
inline ::uint32_t V4l2DqbufFtraceEvent::_internal_bytesused() const {
  return _impl_.bytesused_;
}
inline void V4l2DqbufFtraceEvent::_internal_set_bytesused(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.bytesused_ = value;
}

// optional uint32 field = 2;
inline bool V4l2DqbufFtraceEvent::has_field() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void V4l2DqbufFtraceEvent::clear_field() {
  _impl_.field_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t V4l2DqbufFtraceEvent::field() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2DqbufFtraceEvent.field)
  return _internal_field();
}
inline void V4l2DqbufFtraceEvent::set_field(::uint32_t value) {
  _internal_set_field(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2DqbufFtraceEvent.field)
}
inline ::uint32_t V4l2DqbufFtraceEvent::_internal_field() const {
  return _impl_.field_;
}
inline void V4l2DqbufFtraceEvent::_internal_set_field(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.field_ = value;
}

// optional uint32 flags = 3;
inline bool V4l2DqbufFtraceEvent::has_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void V4l2DqbufFtraceEvent::clear_flags() {
  _impl_.flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t V4l2DqbufFtraceEvent::flags() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2DqbufFtraceEvent.flags)
  return _internal_flags();
}
inline void V4l2DqbufFtraceEvent::set_flags(::uint32_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2DqbufFtraceEvent.flags)
}
inline ::uint32_t V4l2DqbufFtraceEvent::_internal_flags() const {
  return _impl_.flags_;
}
inline void V4l2DqbufFtraceEvent::_internal_set_flags(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.flags_ = value;
}

// optional uint32 index = 4;
inline bool V4l2DqbufFtraceEvent::has_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void V4l2DqbufFtraceEvent::clear_index() {
  _impl_.index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t V4l2DqbufFtraceEvent::index() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2DqbufFtraceEvent.index)
  return _internal_index();
}
inline void V4l2DqbufFtraceEvent::set_index(::uint32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2DqbufFtraceEvent.index)
}
inline ::uint32_t V4l2DqbufFtraceEvent::_internal_index() const {
  return _impl_.index_;
}
inline void V4l2DqbufFtraceEvent::_internal_set_index(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.index_ = value;
}

// optional int32 minor = 5;
inline bool V4l2DqbufFtraceEvent::has_minor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void V4l2DqbufFtraceEvent::clear_minor() {
  _impl_.minor_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t V4l2DqbufFtraceEvent::minor() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2DqbufFtraceEvent.minor)
  return _internal_minor();
}
inline void V4l2DqbufFtraceEvent::set_minor(::int32_t value) {
  _internal_set_minor(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2DqbufFtraceEvent.minor)
}
inline ::int32_t V4l2DqbufFtraceEvent::_internal_minor() const {
  return _impl_.minor_;
}
inline void V4l2DqbufFtraceEvent::_internal_set_minor(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.minor_ = value;
}

// optional uint32 sequence = 6;
inline bool V4l2DqbufFtraceEvent::has_sequence() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void V4l2DqbufFtraceEvent::clear_sequence() {
  _impl_.sequence_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t V4l2DqbufFtraceEvent::sequence() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2DqbufFtraceEvent.sequence)
  return _internal_sequence();
}
inline void V4l2DqbufFtraceEvent::set_sequence(::uint32_t value) {
  _internal_set_sequence(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2DqbufFtraceEvent.sequence)
}
inline ::uint32_t V4l2DqbufFtraceEvent::_internal_sequence() const {
  return _impl_.sequence_;
}
inline void V4l2DqbufFtraceEvent::_internal_set_sequence(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.sequence_ = value;
}

// optional uint32 timecode_flags = 7;
inline bool V4l2DqbufFtraceEvent::has_timecode_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void V4l2DqbufFtraceEvent::clear_timecode_flags() {
  _impl_.timecode_flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t V4l2DqbufFtraceEvent::timecode_flags() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2DqbufFtraceEvent.timecode_flags)
  return _internal_timecode_flags();
}
inline void V4l2DqbufFtraceEvent::set_timecode_flags(::uint32_t value) {
  _internal_set_timecode_flags(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2DqbufFtraceEvent.timecode_flags)
}
inline ::uint32_t V4l2DqbufFtraceEvent::_internal_timecode_flags() const {
  return _impl_.timecode_flags_;
}
inline void V4l2DqbufFtraceEvent::_internal_set_timecode_flags(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.timecode_flags_ = value;
}

// optional uint32 timecode_frames = 8;
inline bool V4l2DqbufFtraceEvent::has_timecode_frames() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void V4l2DqbufFtraceEvent::clear_timecode_frames() {
  _impl_.timecode_frames_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t V4l2DqbufFtraceEvent::timecode_frames() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2DqbufFtraceEvent.timecode_frames)
  return _internal_timecode_frames();
}
inline void V4l2DqbufFtraceEvent::set_timecode_frames(::uint32_t value) {
  _internal_set_timecode_frames(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2DqbufFtraceEvent.timecode_frames)
}
inline ::uint32_t V4l2DqbufFtraceEvent::_internal_timecode_frames() const {
  return _impl_.timecode_frames_;
}
inline void V4l2DqbufFtraceEvent::_internal_set_timecode_frames(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.timecode_frames_ = value;
}

// optional uint32 timecode_hours = 9;
inline bool V4l2DqbufFtraceEvent::has_timecode_hours() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void V4l2DqbufFtraceEvent::clear_timecode_hours() {
  _impl_.timecode_hours_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t V4l2DqbufFtraceEvent::timecode_hours() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2DqbufFtraceEvent.timecode_hours)
  return _internal_timecode_hours();
}
inline void V4l2DqbufFtraceEvent::set_timecode_hours(::uint32_t value) {
  _internal_set_timecode_hours(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2DqbufFtraceEvent.timecode_hours)
}
inline ::uint32_t V4l2DqbufFtraceEvent::_internal_timecode_hours() const {
  return _impl_.timecode_hours_;
}
inline void V4l2DqbufFtraceEvent::_internal_set_timecode_hours(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.timecode_hours_ = value;
}

// optional uint32 timecode_minutes = 10;
inline bool V4l2DqbufFtraceEvent::has_timecode_minutes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void V4l2DqbufFtraceEvent::clear_timecode_minutes() {
  _impl_.timecode_minutes_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint32_t V4l2DqbufFtraceEvent::timecode_minutes() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2DqbufFtraceEvent.timecode_minutes)
  return _internal_timecode_minutes();
}
inline void V4l2DqbufFtraceEvent::set_timecode_minutes(::uint32_t value) {
  _internal_set_timecode_minutes(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2DqbufFtraceEvent.timecode_minutes)
}
inline ::uint32_t V4l2DqbufFtraceEvent::_internal_timecode_minutes() const {
  return _impl_.timecode_minutes_;
}
inline void V4l2DqbufFtraceEvent::_internal_set_timecode_minutes(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.timecode_minutes_ = value;
}

// optional uint32 timecode_seconds = 11;
inline bool V4l2DqbufFtraceEvent::has_timecode_seconds() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void V4l2DqbufFtraceEvent::clear_timecode_seconds() {
  _impl_.timecode_seconds_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint32_t V4l2DqbufFtraceEvent::timecode_seconds() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2DqbufFtraceEvent.timecode_seconds)
  return _internal_timecode_seconds();
}
inline void V4l2DqbufFtraceEvent::set_timecode_seconds(::uint32_t value) {
  _internal_set_timecode_seconds(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2DqbufFtraceEvent.timecode_seconds)
}
inline ::uint32_t V4l2DqbufFtraceEvent::_internal_timecode_seconds() const {
  return _impl_.timecode_seconds_;
}
inline void V4l2DqbufFtraceEvent::_internal_set_timecode_seconds(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.timecode_seconds_ = value;
}

// optional uint32 timecode_type = 12;
inline bool V4l2DqbufFtraceEvent::has_timecode_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void V4l2DqbufFtraceEvent::clear_timecode_type() {
  _impl_.timecode_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::uint32_t V4l2DqbufFtraceEvent::timecode_type() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2DqbufFtraceEvent.timecode_type)
  return _internal_timecode_type();
}
inline void V4l2DqbufFtraceEvent::set_timecode_type(::uint32_t value) {
  _internal_set_timecode_type(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2DqbufFtraceEvent.timecode_type)
}
inline ::uint32_t V4l2DqbufFtraceEvent::_internal_timecode_type() const {
  return _impl_.timecode_type_;
}
inline void V4l2DqbufFtraceEvent::_internal_set_timecode_type(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.timecode_type_ = value;
}

// optional uint32 timecode_userbits0 = 13;
inline bool V4l2DqbufFtraceEvent::has_timecode_userbits0() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void V4l2DqbufFtraceEvent::clear_timecode_userbits0() {
  _impl_.timecode_userbits0_ = 0u;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::uint32_t V4l2DqbufFtraceEvent::timecode_userbits0() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2DqbufFtraceEvent.timecode_userbits0)
  return _internal_timecode_userbits0();
}
inline void V4l2DqbufFtraceEvent::set_timecode_userbits0(::uint32_t value) {
  _internal_set_timecode_userbits0(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2DqbufFtraceEvent.timecode_userbits0)
}
inline ::uint32_t V4l2DqbufFtraceEvent::_internal_timecode_userbits0() const {
  return _impl_.timecode_userbits0_;
}
inline void V4l2DqbufFtraceEvent::_internal_set_timecode_userbits0(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.timecode_userbits0_ = value;
}

// optional uint32 timecode_userbits1 = 14;
inline bool V4l2DqbufFtraceEvent::has_timecode_userbits1() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void V4l2DqbufFtraceEvent::clear_timecode_userbits1() {
  _impl_.timecode_userbits1_ = 0u;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::uint32_t V4l2DqbufFtraceEvent::timecode_userbits1() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2DqbufFtraceEvent.timecode_userbits1)
  return _internal_timecode_userbits1();
}
inline void V4l2DqbufFtraceEvent::set_timecode_userbits1(::uint32_t value) {
  _internal_set_timecode_userbits1(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2DqbufFtraceEvent.timecode_userbits1)
}
inline ::uint32_t V4l2DqbufFtraceEvent::_internal_timecode_userbits1() const {
  return _impl_.timecode_userbits1_;
}
inline void V4l2DqbufFtraceEvent::_internal_set_timecode_userbits1(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00002000u;
  _impl_.timecode_userbits1_ = value;
}

// optional uint32 timecode_userbits2 = 15;
inline bool V4l2DqbufFtraceEvent::has_timecode_userbits2() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void V4l2DqbufFtraceEvent::clear_timecode_userbits2() {
  _impl_.timecode_userbits2_ = 0u;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::uint32_t V4l2DqbufFtraceEvent::timecode_userbits2() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2DqbufFtraceEvent.timecode_userbits2)
  return _internal_timecode_userbits2();
}
inline void V4l2DqbufFtraceEvent::set_timecode_userbits2(::uint32_t value) {
  _internal_set_timecode_userbits2(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2DqbufFtraceEvent.timecode_userbits2)
}
inline ::uint32_t V4l2DqbufFtraceEvent::_internal_timecode_userbits2() const {
  return _impl_.timecode_userbits2_;
}
inline void V4l2DqbufFtraceEvent::_internal_set_timecode_userbits2(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00004000u;
  _impl_.timecode_userbits2_ = value;
}

// optional uint32 timecode_userbits3 = 16;
inline bool V4l2DqbufFtraceEvent::has_timecode_userbits3() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void V4l2DqbufFtraceEvent::clear_timecode_userbits3() {
  _impl_.timecode_userbits3_ = 0u;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline ::uint32_t V4l2DqbufFtraceEvent::timecode_userbits3() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2DqbufFtraceEvent.timecode_userbits3)
  return _internal_timecode_userbits3();
}
inline void V4l2DqbufFtraceEvent::set_timecode_userbits3(::uint32_t value) {
  _internal_set_timecode_userbits3(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2DqbufFtraceEvent.timecode_userbits3)
}
inline ::uint32_t V4l2DqbufFtraceEvent::_internal_timecode_userbits3() const {
  return _impl_.timecode_userbits3_;
}
inline void V4l2DqbufFtraceEvent::_internal_set_timecode_userbits3(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00008000u;
  _impl_.timecode_userbits3_ = value;
}

// optional int64 timestamp = 17;
inline bool V4l2DqbufFtraceEvent::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline void V4l2DqbufFtraceEvent::clear_timestamp() {
  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline ::int64_t V4l2DqbufFtraceEvent::timestamp() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2DqbufFtraceEvent.timestamp)
  return _internal_timestamp();
}
inline void V4l2DqbufFtraceEvent::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2DqbufFtraceEvent.timestamp)
}
inline ::int64_t V4l2DqbufFtraceEvent::_internal_timestamp() const {
  return _impl_.timestamp_;
}
inline void V4l2DqbufFtraceEvent::_internal_set_timestamp(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00010000u;
  _impl_.timestamp_ = value;
}

// optional uint32 type = 18;
inline bool V4l2DqbufFtraceEvent::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline void V4l2DqbufFtraceEvent::clear_type() {
  _impl_.type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline ::uint32_t V4l2DqbufFtraceEvent::type() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.V4l2DqbufFtraceEvent.type)
  return _internal_type();
}
inline void V4l2DqbufFtraceEvent::set_type(::uint32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.V4l2DqbufFtraceEvent.type)
}
inline ::uint32_t V4l2DqbufFtraceEvent::_internal_type() const {
  return _impl_.type_;
}
inline void V4l2DqbufFtraceEvent::_internal_set_type(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00020000u;
  _impl_.type_ = value;
}

// -------------------------------------------------------------------

// Vb2V4l2BufQueueFtraceEvent

// optional uint32 field = 1;
inline bool Vb2V4l2BufQueueFtraceEvent::has_field() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Vb2V4l2BufQueueFtraceEvent::clear_field() {
  _impl_.field_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::field() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.field)
  return _internal_field();
}
inline void Vb2V4l2BufQueueFtraceEvent::set_field(::uint32_t value) {
  _internal_set_field(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.field)
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::_internal_field() const {
  return _impl_.field_;
}
inline void Vb2V4l2BufQueueFtraceEvent::_internal_set_field(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.field_ = value;
}

// optional uint32 flags = 2;
inline bool Vb2V4l2BufQueueFtraceEvent::has_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Vb2V4l2BufQueueFtraceEvent::clear_flags() {
  _impl_.flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::flags() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.flags)
  return _internal_flags();
}
inline void Vb2V4l2BufQueueFtraceEvent::set_flags(::uint32_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.flags)
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::_internal_flags() const {
  return _impl_.flags_;
}
inline void Vb2V4l2BufQueueFtraceEvent::_internal_set_flags(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.flags_ = value;
}

// optional int32 minor = 3;
inline bool Vb2V4l2BufQueueFtraceEvent::has_minor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Vb2V4l2BufQueueFtraceEvent::clear_minor() {
  _impl_.minor_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t Vb2V4l2BufQueueFtraceEvent::minor() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.minor)
  return _internal_minor();
}
inline void Vb2V4l2BufQueueFtraceEvent::set_minor(::int32_t value) {
  _internal_set_minor(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.minor)
}
inline ::int32_t Vb2V4l2BufQueueFtraceEvent::_internal_minor() const {
  return _impl_.minor_;
}
inline void Vb2V4l2BufQueueFtraceEvent::_internal_set_minor(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.minor_ = value;
}

// optional uint32 sequence = 4;
inline bool Vb2V4l2BufQueueFtraceEvent::has_sequence() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Vb2V4l2BufQueueFtraceEvent::clear_sequence() {
  _impl_.sequence_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::sequence() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.sequence)
  return _internal_sequence();
}
inline void Vb2V4l2BufQueueFtraceEvent::set_sequence(::uint32_t value) {
  _internal_set_sequence(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.sequence)
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::_internal_sequence() const {
  return _impl_.sequence_;
}
inline void Vb2V4l2BufQueueFtraceEvent::_internal_set_sequence(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.sequence_ = value;
}

// optional uint32 timecode_flags = 5;
inline bool Vb2V4l2BufQueueFtraceEvent::has_timecode_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Vb2V4l2BufQueueFtraceEvent::clear_timecode_flags() {
  _impl_.timecode_flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::timecode_flags() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.timecode_flags)
  return _internal_timecode_flags();
}
inline void Vb2V4l2BufQueueFtraceEvent::set_timecode_flags(::uint32_t value) {
  _internal_set_timecode_flags(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.timecode_flags)
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::_internal_timecode_flags() const {
  return _impl_.timecode_flags_;
}
inline void Vb2V4l2BufQueueFtraceEvent::_internal_set_timecode_flags(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.timecode_flags_ = value;
}

// optional uint32 timecode_frames = 6;
inline bool Vb2V4l2BufQueueFtraceEvent::has_timecode_frames() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Vb2V4l2BufQueueFtraceEvent::clear_timecode_frames() {
  _impl_.timecode_frames_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::timecode_frames() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.timecode_frames)
  return _internal_timecode_frames();
}
inline void Vb2V4l2BufQueueFtraceEvent::set_timecode_frames(::uint32_t value) {
  _internal_set_timecode_frames(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.timecode_frames)
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::_internal_timecode_frames() const {
  return _impl_.timecode_frames_;
}
inline void Vb2V4l2BufQueueFtraceEvent::_internal_set_timecode_frames(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.timecode_frames_ = value;
}

// optional uint32 timecode_hours = 7;
inline bool Vb2V4l2BufQueueFtraceEvent::has_timecode_hours() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void Vb2V4l2BufQueueFtraceEvent::clear_timecode_hours() {
  _impl_.timecode_hours_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::timecode_hours() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.timecode_hours)
  return _internal_timecode_hours();
}
inline void Vb2V4l2BufQueueFtraceEvent::set_timecode_hours(::uint32_t value) {
  _internal_set_timecode_hours(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.timecode_hours)
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::_internal_timecode_hours() const {
  return _impl_.timecode_hours_;
}
inline void Vb2V4l2BufQueueFtraceEvent::_internal_set_timecode_hours(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.timecode_hours_ = value;
}

// optional uint32 timecode_minutes = 8;
inline bool Vb2V4l2BufQueueFtraceEvent::has_timecode_minutes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void Vb2V4l2BufQueueFtraceEvent::clear_timecode_minutes() {
  _impl_.timecode_minutes_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::timecode_minutes() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.timecode_minutes)
  return _internal_timecode_minutes();
}
inline void Vb2V4l2BufQueueFtraceEvent::set_timecode_minutes(::uint32_t value) {
  _internal_set_timecode_minutes(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.timecode_minutes)
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::_internal_timecode_minutes() const {
  return _impl_.timecode_minutes_;
}
inline void Vb2V4l2BufQueueFtraceEvent::_internal_set_timecode_minutes(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.timecode_minutes_ = value;
}

// optional uint32 timecode_seconds = 9;
inline bool Vb2V4l2BufQueueFtraceEvent::has_timecode_seconds() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void Vb2V4l2BufQueueFtraceEvent::clear_timecode_seconds() {
  _impl_.timecode_seconds_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::timecode_seconds() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.timecode_seconds)
  return _internal_timecode_seconds();
}
inline void Vb2V4l2BufQueueFtraceEvent::set_timecode_seconds(::uint32_t value) {
  _internal_set_timecode_seconds(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.timecode_seconds)
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::_internal_timecode_seconds() const {
  return _impl_.timecode_seconds_;
}
inline void Vb2V4l2BufQueueFtraceEvent::_internal_set_timecode_seconds(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.timecode_seconds_ = value;
}

// optional uint32 timecode_type = 10;
inline bool Vb2V4l2BufQueueFtraceEvent::has_timecode_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void Vb2V4l2BufQueueFtraceEvent::clear_timecode_type() {
  _impl_.timecode_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::timecode_type() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.timecode_type)
  return _internal_timecode_type();
}
inline void Vb2V4l2BufQueueFtraceEvent::set_timecode_type(::uint32_t value) {
  _internal_set_timecode_type(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.timecode_type)
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::_internal_timecode_type() const {
  return _impl_.timecode_type_;
}
inline void Vb2V4l2BufQueueFtraceEvent::_internal_set_timecode_type(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.timecode_type_ = value;
}

// optional uint32 timecode_userbits0 = 11;
inline bool Vb2V4l2BufQueueFtraceEvent::has_timecode_userbits0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void Vb2V4l2BufQueueFtraceEvent::clear_timecode_userbits0() {
  _impl_.timecode_userbits0_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::timecode_userbits0() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.timecode_userbits0)
  return _internal_timecode_userbits0();
}
inline void Vb2V4l2BufQueueFtraceEvent::set_timecode_userbits0(::uint32_t value) {
  _internal_set_timecode_userbits0(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.timecode_userbits0)
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::_internal_timecode_userbits0() const {
  return _impl_.timecode_userbits0_;
}
inline void Vb2V4l2BufQueueFtraceEvent::_internal_set_timecode_userbits0(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.timecode_userbits0_ = value;
}

// optional uint32 timecode_userbits1 = 12;
inline bool Vb2V4l2BufQueueFtraceEvent::has_timecode_userbits1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void Vb2V4l2BufQueueFtraceEvent::clear_timecode_userbits1() {
  _impl_.timecode_userbits1_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::timecode_userbits1() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.timecode_userbits1)
  return _internal_timecode_userbits1();
}
inline void Vb2V4l2BufQueueFtraceEvent::set_timecode_userbits1(::uint32_t value) {
  _internal_set_timecode_userbits1(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.timecode_userbits1)
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::_internal_timecode_userbits1() const {
  return _impl_.timecode_userbits1_;
}
inline void Vb2V4l2BufQueueFtraceEvent::_internal_set_timecode_userbits1(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.timecode_userbits1_ = value;
}

// optional uint32 timecode_userbits2 = 13;
inline bool Vb2V4l2BufQueueFtraceEvent::has_timecode_userbits2() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void Vb2V4l2BufQueueFtraceEvent::clear_timecode_userbits2() {
  _impl_.timecode_userbits2_ = 0u;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::timecode_userbits2() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.timecode_userbits2)
  return _internal_timecode_userbits2();
}
inline void Vb2V4l2BufQueueFtraceEvent::set_timecode_userbits2(::uint32_t value) {
  _internal_set_timecode_userbits2(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.timecode_userbits2)
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::_internal_timecode_userbits2() const {
  return _impl_.timecode_userbits2_;
}
inline void Vb2V4l2BufQueueFtraceEvent::_internal_set_timecode_userbits2(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.timecode_userbits2_ = value;
}

// optional uint32 timecode_userbits3 = 14;
inline bool Vb2V4l2BufQueueFtraceEvent::has_timecode_userbits3() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void Vb2V4l2BufQueueFtraceEvent::clear_timecode_userbits3() {
  _impl_.timecode_userbits3_ = 0u;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::timecode_userbits3() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.timecode_userbits3)
  return _internal_timecode_userbits3();
}
inline void Vb2V4l2BufQueueFtraceEvent::set_timecode_userbits3(::uint32_t value) {
  _internal_set_timecode_userbits3(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.timecode_userbits3)
}
inline ::uint32_t Vb2V4l2BufQueueFtraceEvent::_internal_timecode_userbits3() const {
  return _impl_.timecode_userbits3_;
}
inline void Vb2V4l2BufQueueFtraceEvent::_internal_set_timecode_userbits3(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00002000u;
  _impl_.timecode_userbits3_ = value;
}

// optional int64 timestamp = 15;
inline bool Vb2V4l2BufQueueFtraceEvent::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void Vb2V4l2BufQueueFtraceEvent::clear_timestamp() {
  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::int64_t Vb2V4l2BufQueueFtraceEvent::timestamp() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.timestamp)
  return _internal_timestamp();
}
inline void Vb2V4l2BufQueueFtraceEvent::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufQueueFtraceEvent.timestamp)
}
inline ::int64_t Vb2V4l2BufQueueFtraceEvent::_internal_timestamp() const {
  return _impl_.timestamp_;
}
inline void Vb2V4l2BufQueueFtraceEvent::_internal_set_timestamp(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00004000u;
  _impl_.timestamp_ = value;
}

// -------------------------------------------------------------------

// Vb2V4l2BufDoneFtraceEvent

// optional uint32 field = 1;
inline bool Vb2V4l2BufDoneFtraceEvent::has_field() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Vb2V4l2BufDoneFtraceEvent::clear_field() {
  _impl_.field_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::field() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.field)
  return _internal_field();
}
inline void Vb2V4l2BufDoneFtraceEvent::set_field(::uint32_t value) {
  _internal_set_field(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.field)
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::_internal_field() const {
  return _impl_.field_;
}
inline void Vb2V4l2BufDoneFtraceEvent::_internal_set_field(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.field_ = value;
}

// optional uint32 flags = 2;
inline bool Vb2V4l2BufDoneFtraceEvent::has_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Vb2V4l2BufDoneFtraceEvent::clear_flags() {
  _impl_.flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::flags() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.flags)
  return _internal_flags();
}
inline void Vb2V4l2BufDoneFtraceEvent::set_flags(::uint32_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.flags)
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::_internal_flags() const {
  return _impl_.flags_;
}
inline void Vb2V4l2BufDoneFtraceEvent::_internal_set_flags(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.flags_ = value;
}

// optional int32 minor = 3;
inline bool Vb2V4l2BufDoneFtraceEvent::has_minor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Vb2V4l2BufDoneFtraceEvent::clear_minor() {
  _impl_.minor_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t Vb2V4l2BufDoneFtraceEvent::minor() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.minor)
  return _internal_minor();
}
inline void Vb2V4l2BufDoneFtraceEvent::set_minor(::int32_t value) {
  _internal_set_minor(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.minor)
}
inline ::int32_t Vb2V4l2BufDoneFtraceEvent::_internal_minor() const {
  return _impl_.minor_;
}
inline void Vb2V4l2BufDoneFtraceEvent::_internal_set_minor(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.minor_ = value;
}

// optional uint32 sequence = 4;
inline bool Vb2V4l2BufDoneFtraceEvent::has_sequence() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Vb2V4l2BufDoneFtraceEvent::clear_sequence() {
  _impl_.sequence_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::sequence() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.sequence)
  return _internal_sequence();
}
inline void Vb2V4l2BufDoneFtraceEvent::set_sequence(::uint32_t value) {
  _internal_set_sequence(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.sequence)
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::_internal_sequence() const {
  return _impl_.sequence_;
}
inline void Vb2V4l2BufDoneFtraceEvent::_internal_set_sequence(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.sequence_ = value;
}

// optional uint32 timecode_flags = 5;
inline bool Vb2V4l2BufDoneFtraceEvent::has_timecode_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Vb2V4l2BufDoneFtraceEvent::clear_timecode_flags() {
  _impl_.timecode_flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::timecode_flags() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.timecode_flags)
  return _internal_timecode_flags();
}
inline void Vb2V4l2BufDoneFtraceEvent::set_timecode_flags(::uint32_t value) {
  _internal_set_timecode_flags(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.timecode_flags)
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::_internal_timecode_flags() const {
  return _impl_.timecode_flags_;
}
inline void Vb2V4l2BufDoneFtraceEvent::_internal_set_timecode_flags(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.timecode_flags_ = value;
}

// optional uint32 timecode_frames = 6;
inline bool Vb2V4l2BufDoneFtraceEvent::has_timecode_frames() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Vb2V4l2BufDoneFtraceEvent::clear_timecode_frames() {
  _impl_.timecode_frames_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::timecode_frames() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.timecode_frames)
  return _internal_timecode_frames();
}
inline void Vb2V4l2BufDoneFtraceEvent::set_timecode_frames(::uint32_t value) {
  _internal_set_timecode_frames(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.timecode_frames)
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::_internal_timecode_frames() const {
  return _impl_.timecode_frames_;
}
inline void Vb2V4l2BufDoneFtraceEvent::_internal_set_timecode_frames(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.timecode_frames_ = value;
}

// optional uint32 timecode_hours = 7;
inline bool Vb2V4l2BufDoneFtraceEvent::has_timecode_hours() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void Vb2V4l2BufDoneFtraceEvent::clear_timecode_hours() {
  _impl_.timecode_hours_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::timecode_hours() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.timecode_hours)
  return _internal_timecode_hours();
}
inline void Vb2V4l2BufDoneFtraceEvent::set_timecode_hours(::uint32_t value) {
  _internal_set_timecode_hours(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.timecode_hours)
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::_internal_timecode_hours() const {
  return _impl_.timecode_hours_;
}
inline void Vb2V4l2BufDoneFtraceEvent::_internal_set_timecode_hours(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.timecode_hours_ = value;
}

// optional uint32 timecode_minutes = 8;
inline bool Vb2V4l2BufDoneFtraceEvent::has_timecode_minutes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void Vb2V4l2BufDoneFtraceEvent::clear_timecode_minutes() {
  _impl_.timecode_minutes_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::timecode_minutes() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.timecode_minutes)
  return _internal_timecode_minutes();
}
inline void Vb2V4l2BufDoneFtraceEvent::set_timecode_minutes(::uint32_t value) {
  _internal_set_timecode_minutes(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.timecode_minutes)
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::_internal_timecode_minutes() const {
  return _impl_.timecode_minutes_;
}
inline void Vb2V4l2BufDoneFtraceEvent::_internal_set_timecode_minutes(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.timecode_minutes_ = value;
}

// optional uint32 timecode_seconds = 9;
inline bool Vb2V4l2BufDoneFtraceEvent::has_timecode_seconds() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void Vb2V4l2BufDoneFtraceEvent::clear_timecode_seconds() {
  _impl_.timecode_seconds_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::timecode_seconds() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.timecode_seconds)
  return _internal_timecode_seconds();
}
inline void Vb2V4l2BufDoneFtraceEvent::set_timecode_seconds(::uint32_t value) {
  _internal_set_timecode_seconds(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.timecode_seconds)
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::_internal_timecode_seconds() const {
  return _impl_.timecode_seconds_;
}
inline void Vb2V4l2BufDoneFtraceEvent::_internal_set_timecode_seconds(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.timecode_seconds_ = value;
}

// optional uint32 timecode_type = 10;
inline bool Vb2V4l2BufDoneFtraceEvent::has_timecode_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void Vb2V4l2BufDoneFtraceEvent::clear_timecode_type() {
  _impl_.timecode_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::timecode_type() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.timecode_type)
  return _internal_timecode_type();
}
inline void Vb2V4l2BufDoneFtraceEvent::set_timecode_type(::uint32_t value) {
  _internal_set_timecode_type(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.timecode_type)
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::_internal_timecode_type() const {
  return _impl_.timecode_type_;
}
inline void Vb2V4l2BufDoneFtraceEvent::_internal_set_timecode_type(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.timecode_type_ = value;
}

// optional uint32 timecode_userbits0 = 11;
inline bool Vb2V4l2BufDoneFtraceEvent::has_timecode_userbits0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void Vb2V4l2BufDoneFtraceEvent::clear_timecode_userbits0() {
  _impl_.timecode_userbits0_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::timecode_userbits0() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.timecode_userbits0)
  return _internal_timecode_userbits0();
}
inline void Vb2V4l2BufDoneFtraceEvent::set_timecode_userbits0(::uint32_t value) {
  _internal_set_timecode_userbits0(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.timecode_userbits0)
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::_internal_timecode_userbits0() const {
  return _impl_.timecode_userbits0_;
}
inline void Vb2V4l2BufDoneFtraceEvent::_internal_set_timecode_userbits0(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.timecode_userbits0_ = value;
}

// optional uint32 timecode_userbits1 = 12;
inline bool Vb2V4l2BufDoneFtraceEvent::has_timecode_userbits1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void Vb2V4l2BufDoneFtraceEvent::clear_timecode_userbits1() {
  _impl_.timecode_userbits1_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::timecode_userbits1() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.timecode_userbits1)
  return _internal_timecode_userbits1();
}
inline void Vb2V4l2BufDoneFtraceEvent::set_timecode_userbits1(::uint32_t value) {
  _internal_set_timecode_userbits1(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.timecode_userbits1)
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::_internal_timecode_userbits1() const {
  return _impl_.timecode_userbits1_;
}
inline void Vb2V4l2BufDoneFtraceEvent::_internal_set_timecode_userbits1(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.timecode_userbits1_ = value;
}

// optional uint32 timecode_userbits2 = 13;
inline bool Vb2V4l2BufDoneFtraceEvent::has_timecode_userbits2() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void Vb2V4l2BufDoneFtraceEvent::clear_timecode_userbits2() {
  _impl_.timecode_userbits2_ = 0u;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::timecode_userbits2() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.timecode_userbits2)
  return _internal_timecode_userbits2();
}
inline void Vb2V4l2BufDoneFtraceEvent::set_timecode_userbits2(::uint32_t value) {
  _internal_set_timecode_userbits2(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.timecode_userbits2)
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::_internal_timecode_userbits2() const {
  return _impl_.timecode_userbits2_;
}
inline void Vb2V4l2BufDoneFtraceEvent::_internal_set_timecode_userbits2(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.timecode_userbits2_ = value;
}

// optional uint32 timecode_userbits3 = 14;
inline bool Vb2V4l2BufDoneFtraceEvent::has_timecode_userbits3() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void Vb2V4l2BufDoneFtraceEvent::clear_timecode_userbits3() {
  _impl_.timecode_userbits3_ = 0u;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::timecode_userbits3() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.timecode_userbits3)
  return _internal_timecode_userbits3();
}
inline void Vb2V4l2BufDoneFtraceEvent::set_timecode_userbits3(::uint32_t value) {
  _internal_set_timecode_userbits3(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.timecode_userbits3)
}
inline ::uint32_t Vb2V4l2BufDoneFtraceEvent::_internal_timecode_userbits3() const {
  return _impl_.timecode_userbits3_;
}
inline void Vb2V4l2BufDoneFtraceEvent::_internal_set_timecode_userbits3(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00002000u;
  _impl_.timecode_userbits3_ = value;
}

// optional int64 timestamp = 15;
inline bool Vb2V4l2BufDoneFtraceEvent::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void Vb2V4l2BufDoneFtraceEvent::clear_timestamp() {
  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::int64_t Vb2V4l2BufDoneFtraceEvent::timestamp() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.timestamp)
  return _internal_timestamp();
}
inline void Vb2V4l2BufDoneFtraceEvent::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2BufDoneFtraceEvent.timestamp)
}
inline ::int64_t Vb2V4l2BufDoneFtraceEvent::_internal_timestamp() const {
  return _impl_.timestamp_;
}
inline void Vb2V4l2BufDoneFtraceEvent::_internal_set_timestamp(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00004000u;
  _impl_.timestamp_ = value;
}

// -------------------------------------------------------------------

// Vb2V4l2QbufFtraceEvent

// optional uint32 field = 1;
inline bool Vb2V4l2QbufFtraceEvent::has_field() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Vb2V4l2QbufFtraceEvent::clear_field() {
  _impl_.field_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::field() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2QbufFtraceEvent.field)
  return _internal_field();
}
inline void Vb2V4l2QbufFtraceEvent::set_field(::uint32_t value) {
  _internal_set_field(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2QbufFtraceEvent.field)
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::_internal_field() const {
  return _impl_.field_;
}
inline void Vb2V4l2QbufFtraceEvent::_internal_set_field(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.field_ = value;
}

// optional uint32 flags = 2;
inline bool Vb2V4l2QbufFtraceEvent::has_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Vb2V4l2QbufFtraceEvent::clear_flags() {
  _impl_.flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::flags() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2QbufFtraceEvent.flags)
  return _internal_flags();
}
inline void Vb2V4l2QbufFtraceEvent::set_flags(::uint32_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2QbufFtraceEvent.flags)
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::_internal_flags() const {
  return _impl_.flags_;
}
inline void Vb2V4l2QbufFtraceEvent::_internal_set_flags(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.flags_ = value;
}

// optional int32 minor = 3;
inline bool Vb2V4l2QbufFtraceEvent::has_minor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Vb2V4l2QbufFtraceEvent::clear_minor() {
  _impl_.minor_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t Vb2V4l2QbufFtraceEvent::minor() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2QbufFtraceEvent.minor)
  return _internal_minor();
}
inline void Vb2V4l2QbufFtraceEvent::set_minor(::int32_t value) {
  _internal_set_minor(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2QbufFtraceEvent.minor)
}
inline ::int32_t Vb2V4l2QbufFtraceEvent::_internal_minor() const {
  return _impl_.minor_;
}
inline void Vb2V4l2QbufFtraceEvent::_internal_set_minor(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.minor_ = value;
}

// optional uint32 sequence = 4;
inline bool Vb2V4l2QbufFtraceEvent::has_sequence() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Vb2V4l2QbufFtraceEvent::clear_sequence() {
  _impl_.sequence_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::sequence() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2QbufFtraceEvent.sequence)
  return _internal_sequence();
}
inline void Vb2V4l2QbufFtraceEvent::set_sequence(::uint32_t value) {
  _internal_set_sequence(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2QbufFtraceEvent.sequence)
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::_internal_sequence() const {
  return _impl_.sequence_;
}
inline void Vb2V4l2QbufFtraceEvent::_internal_set_sequence(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.sequence_ = value;
}

// optional uint32 timecode_flags = 5;
inline bool Vb2V4l2QbufFtraceEvent::has_timecode_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Vb2V4l2QbufFtraceEvent::clear_timecode_flags() {
  _impl_.timecode_flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::timecode_flags() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2QbufFtraceEvent.timecode_flags)
  return _internal_timecode_flags();
}
inline void Vb2V4l2QbufFtraceEvent::set_timecode_flags(::uint32_t value) {
  _internal_set_timecode_flags(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2QbufFtraceEvent.timecode_flags)
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::_internal_timecode_flags() const {
  return _impl_.timecode_flags_;
}
inline void Vb2V4l2QbufFtraceEvent::_internal_set_timecode_flags(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.timecode_flags_ = value;
}

// optional uint32 timecode_frames = 6;
inline bool Vb2V4l2QbufFtraceEvent::has_timecode_frames() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Vb2V4l2QbufFtraceEvent::clear_timecode_frames() {
  _impl_.timecode_frames_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::timecode_frames() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2QbufFtraceEvent.timecode_frames)
  return _internal_timecode_frames();
}
inline void Vb2V4l2QbufFtraceEvent::set_timecode_frames(::uint32_t value) {
  _internal_set_timecode_frames(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2QbufFtraceEvent.timecode_frames)
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::_internal_timecode_frames() const {
  return _impl_.timecode_frames_;
}
inline void Vb2V4l2QbufFtraceEvent::_internal_set_timecode_frames(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.timecode_frames_ = value;
}

// optional uint32 timecode_hours = 7;
inline bool Vb2V4l2QbufFtraceEvent::has_timecode_hours() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void Vb2V4l2QbufFtraceEvent::clear_timecode_hours() {
  _impl_.timecode_hours_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::timecode_hours() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2QbufFtraceEvent.timecode_hours)
  return _internal_timecode_hours();
}
inline void Vb2V4l2QbufFtraceEvent::set_timecode_hours(::uint32_t value) {
  _internal_set_timecode_hours(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2QbufFtraceEvent.timecode_hours)
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::_internal_timecode_hours() const {
  return _impl_.timecode_hours_;
}
inline void Vb2V4l2QbufFtraceEvent::_internal_set_timecode_hours(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.timecode_hours_ = value;
}

// optional uint32 timecode_minutes = 8;
inline bool Vb2V4l2QbufFtraceEvent::has_timecode_minutes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void Vb2V4l2QbufFtraceEvent::clear_timecode_minutes() {
  _impl_.timecode_minutes_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::timecode_minutes() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2QbufFtraceEvent.timecode_minutes)
  return _internal_timecode_minutes();
}
inline void Vb2V4l2QbufFtraceEvent::set_timecode_minutes(::uint32_t value) {
  _internal_set_timecode_minutes(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2QbufFtraceEvent.timecode_minutes)
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::_internal_timecode_minutes() const {
  return _impl_.timecode_minutes_;
}
inline void Vb2V4l2QbufFtraceEvent::_internal_set_timecode_minutes(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.timecode_minutes_ = value;
}

// optional uint32 timecode_seconds = 9;
inline bool Vb2V4l2QbufFtraceEvent::has_timecode_seconds() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void Vb2V4l2QbufFtraceEvent::clear_timecode_seconds() {
  _impl_.timecode_seconds_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::timecode_seconds() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2QbufFtraceEvent.timecode_seconds)
  return _internal_timecode_seconds();
}
inline void Vb2V4l2QbufFtraceEvent::set_timecode_seconds(::uint32_t value) {
  _internal_set_timecode_seconds(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2QbufFtraceEvent.timecode_seconds)
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::_internal_timecode_seconds() const {
  return _impl_.timecode_seconds_;
}
inline void Vb2V4l2QbufFtraceEvent::_internal_set_timecode_seconds(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.timecode_seconds_ = value;
}

// optional uint32 timecode_type = 10;
inline bool Vb2V4l2QbufFtraceEvent::has_timecode_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void Vb2V4l2QbufFtraceEvent::clear_timecode_type() {
  _impl_.timecode_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::timecode_type() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2QbufFtraceEvent.timecode_type)
  return _internal_timecode_type();
}
inline void Vb2V4l2QbufFtraceEvent::set_timecode_type(::uint32_t value) {
  _internal_set_timecode_type(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2QbufFtraceEvent.timecode_type)
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::_internal_timecode_type() const {
  return _impl_.timecode_type_;
}
inline void Vb2V4l2QbufFtraceEvent::_internal_set_timecode_type(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.timecode_type_ = value;
}

// optional uint32 timecode_userbits0 = 11;
inline bool Vb2V4l2QbufFtraceEvent::has_timecode_userbits0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void Vb2V4l2QbufFtraceEvent::clear_timecode_userbits0() {
  _impl_.timecode_userbits0_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::timecode_userbits0() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2QbufFtraceEvent.timecode_userbits0)
  return _internal_timecode_userbits0();
}
inline void Vb2V4l2QbufFtraceEvent::set_timecode_userbits0(::uint32_t value) {
  _internal_set_timecode_userbits0(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2QbufFtraceEvent.timecode_userbits0)
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::_internal_timecode_userbits0() const {
  return _impl_.timecode_userbits0_;
}
inline void Vb2V4l2QbufFtraceEvent::_internal_set_timecode_userbits0(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.timecode_userbits0_ = value;
}

// optional uint32 timecode_userbits1 = 12;
inline bool Vb2V4l2QbufFtraceEvent::has_timecode_userbits1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void Vb2V4l2QbufFtraceEvent::clear_timecode_userbits1() {
  _impl_.timecode_userbits1_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::timecode_userbits1() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2QbufFtraceEvent.timecode_userbits1)
  return _internal_timecode_userbits1();
}
inline void Vb2V4l2QbufFtraceEvent::set_timecode_userbits1(::uint32_t value) {
  _internal_set_timecode_userbits1(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2QbufFtraceEvent.timecode_userbits1)
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::_internal_timecode_userbits1() const {
  return _impl_.timecode_userbits1_;
}
inline void Vb2V4l2QbufFtraceEvent::_internal_set_timecode_userbits1(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.timecode_userbits1_ = value;
}

// optional uint32 timecode_userbits2 = 13;
inline bool Vb2V4l2QbufFtraceEvent::has_timecode_userbits2() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void Vb2V4l2QbufFtraceEvent::clear_timecode_userbits2() {
  _impl_.timecode_userbits2_ = 0u;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::timecode_userbits2() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2QbufFtraceEvent.timecode_userbits2)
  return _internal_timecode_userbits2();
}
inline void Vb2V4l2QbufFtraceEvent::set_timecode_userbits2(::uint32_t value) {
  _internal_set_timecode_userbits2(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2QbufFtraceEvent.timecode_userbits2)
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::_internal_timecode_userbits2() const {
  return _impl_.timecode_userbits2_;
}
inline void Vb2V4l2QbufFtraceEvent::_internal_set_timecode_userbits2(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.timecode_userbits2_ = value;
}

// optional uint32 timecode_userbits3 = 14;
inline bool Vb2V4l2QbufFtraceEvent::has_timecode_userbits3() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void Vb2V4l2QbufFtraceEvent::clear_timecode_userbits3() {
  _impl_.timecode_userbits3_ = 0u;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::timecode_userbits3() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2QbufFtraceEvent.timecode_userbits3)
  return _internal_timecode_userbits3();
}
inline void Vb2V4l2QbufFtraceEvent::set_timecode_userbits3(::uint32_t value) {
  _internal_set_timecode_userbits3(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2QbufFtraceEvent.timecode_userbits3)
}
inline ::uint32_t Vb2V4l2QbufFtraceEvent::_internal_timecode_userbits3() const {
  return _impl_.timecode_userbits3_;
}
inline void Vb2V4l2QbufFtraceEvent::_internal_set_timecode_userbits3(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00002000u;
  _impl_.timecode_userbits3_ = value;
}

// optional int64 timestamp = 15;
inline bool Vb2V4l2QbufFtraceEvent::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void Vb2V4l2QbufFtraceEvent::clear_timestamp() {
  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::int64_t Vb2V4l2QbufFtraceEvent::timestamp() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2QbufFtraceEvent.timestamp)
  return _internal_timestamp();
}
inline void Vb2V4l2QbufFtraceEvent::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2QbufFtraceEvent.timestamp)
}
inline ::int64_t Vb2V4l2QbufFtraceEvent::_internal_timestamp() const {
  return _impl_.timestamp_;
}
inline void Vb2V4l2QbufFtraceEvent::_internal_set_timestamp(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00004000u;
  _impl_.timestamp_ = value;
}

// -------------------------------------------------------------------

// Vb2V4l2DqbufFtraceEvent

// optional uint32 field = 1;
inline bool Vb2V4l2DqbufFtraceEvent::has_field() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Vb2V4l2DqbufFtraceEvent::clear_field() {
  _impl_.field_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::field() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2DqbufFtraceEvent.field)
  return _internal_field();
}
inline void Vb2V4l2DqbufFtraceEvent::set_field(::uint32_t value) {
  _internal_set_field(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2DqbufFtraceEvent.field)
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::_internal_field() const {
  return _impl_.field_;
}
inline void Vb2V4l2DqbufFtraceEvent::_internal_set_field(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.field_ = value;
}

// optional uint32 flags = 2;
inline bool Vb2V4l2DqbufFtraceEvent::has_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Vb2V4l2DqbufFtraceEvent::clear_flags() {
  _impl_.flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::flags() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2DqbufFtraceEvent.flags)
  return _internal_flags();
}
inline void Vb2V4l2DqbufFtraceEvent::set_flags(::uint32_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2DqbufFtraceEvent.flags)
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::_internal_flags() const {
  return _impl_.flags_;
}
inline void Vb2V4l2DqbufFtraceEvent::_internal_set_flags(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.flags_ = value;
}

// optional int32 minor = 3;
inline bool Vb2V4l2DqbufFtraceEvent::has_minor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Vb2V4l2DqbufFtraceEvent::clear_minor() {
  _impl_.minor_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t Vb2V4l2DqbufFtraceEvent::minor() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2DqbufFtraceEvent.minor)
  return _internal_minor();
}
inline void Vb2V4l2DqbufFtraceEvent::set_minor(::int32_t value) {
  _internal_set_minor(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2DqbufFtraceEvent.minor)
}
inline ::int32_t Vb2V4l2DqbufFtraceEvent::_internal_minor() const {
  return _impl_.minor_;
}
inline void Vb2V4l2DqbufFtraceEvent::_internal_set_minor(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.minor_ = value;
}

// optional uint32 sequence = 4;
inline bool Vb2V4l2DqbufFtraceEvent::has_sequence() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Vb2V4l2DqbufFtraceEvent::clear_sequence() {
  _impl_.sequence_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::sequence() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2DqbufFtraceEvent.sequence)
  return _internal_sequence();
}
inline void Vb2V4l2DqbufFtraceEvent::set_sequence(::uint32_t value) {
  _internal_set_sequence(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2DqbufFtraceEvent.sequence)
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::_internal_sequence() const {
  return _impl_.sequence_;
}
inline void Vb2V4l2DqbufFtraceEvent::_internal_set_sequence(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.sequence_ = value;
}

// optional uint32 timecode_flags = 5;
inline bool Vb2V4l2DqbufFtraceEvent::has_timecode_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Vb2V4l2DqbufFtraceEvent::clear_timecode_flags() {
  _impl_.timecode_flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::timecode_flags() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2DqbufFtraceEvent.timecode_flags)
  return _internal_timecode_flags();
}
inline void Vb2V4l2DqbufFtraceEvent::set_timecode_flags(::uint32_t value) {
  _internal_set_timecode_flags(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2DqbufFtraceEvent.timecode_flags)
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::_internal_timecode_flags() const {
  return _impl_.timecode_flags_;
}
inline void Vb2V4l2DqbufFtraceEvent::_internal_set_timecode_flags(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.timecode_flags_ = value;
}

// optional uint32 timecode_frames = 6;
inline bool Vb2V4l2DqbufFtraceEvent::has_timecode_frames() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Vb2V4l2DqbufFtraceEvent::clear_timecode_frames() {
  _impl_.timecode_frames_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::timecode_frames() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2DqbufFtraceEvent.timecode_frames)
  return _internal_timecode_frames();
}
inline void Vb2V4l2DqbufFtraceEvent::set_timecode_frames(::uint32_t value) {
  _internal_set_timecode_frames(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2DqbufFtraceEvent.timecode_frames)
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::_internal_timecode_frames() const {
  return _impl_.timecode_frames_;
}
inline void Vb2V4l2DqbufFtraceEvent::_internal_set_timecode_frames(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.timecode_frames_ = value;
}

// optional uint32 timecode_hours = 7;
inline bool Vb2V4l2DqbufFtraceEvent::has_timecode_hours() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void Vb2V4l2DqbufFtraceEvent::clear_timecode_hours() {
  _impl_.timecode_hours_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::timecode_hours() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2DqbufFtraceEvent.timecode_hours)
  return _internal_timecode_hours();
}
inline void Vb2V4l2DqbufFtraceEvent::set_timecode_hours(::uint32_t value) {
  _internal_set_timecode_hours(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2DqbufFtraceEvent.timecode_hours)
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::_internal_timecode_hours() const {
  return _impl_.timecode_hours_;
}
inline void Vb2V4l2DqbufFtraceEvent::_internal_set_timecode_hours(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.timecode_hours_ = value;
}

// optional uint32 timecode_minutes = 8;
inline bool Vb2V4l2DqbufFtraceEvent::has_timecode_minutes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void Vb2V4l2DqbufFtraceEvent::clear_timecode_minutes() {
  _impl_.timecode_minutes_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::timecode_minutes() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2DqbufFtraceEvent.timecode_minutes)
  return _internal_timecode_minutes();
}
inline void Vb2V4l2DqbufFtraceEvent::set_timecode_minutes(::uint32_t value) {
  _internal_set_timecode_minutes(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2DqbufFtraceEvent.timecode_minutes)
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::_internal_timecode_minutes() const {
  return _impl_.timecode_minutes_;
}
inline void Vb2V4l2DqbufFtraceEvent::_internal_set_timecode_minutes(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.timecode_minutes_ = value;
}

// optional uint32 timecode_seconds = 9;
inline bool Vb2V4l2DqbufFtraceEvent::has_timecode_seconds() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void Vb2V4l2DqbufFtraceEvent::clear_timecode_seconds() {
  _impl_.timecode_seconds_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::timecode_seconds() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2DqbufFtraceEvent.timecode_seconds)
  return _internal_timecode_seconds();
}
inline void Vb2V4l2DqbufFtraceEvent::set_timecode_seconds(::uint32_t value) {
  _internal_set_timecode_seconds(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2DqbufFtraceEvent.timecode_seconds)
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::_internal_timecode_seconds() const {
  return _impl_.timecode_seconds_;
}
inline void Vb2V4l2DqbufFtraceEvent::_internal_set_timecode_seconds(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.timecode_seconds_ = value;
}

// optional uint32 timecode_type = 10;
inline bool Vb2V4l2DqbufFtraceEvent::has_timecode_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void Vb2V4l2DqbufFtraceEvent::clear_timecode_type() {
  _impl_.timecode_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::timecode_type() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2DqbufFtraceEvent.timecode_type)
  return _internal_timecode_type();
}
inline void Vb2V4l2DqbufFtraceEvent::set_timecode_type(::uint32_t value) {
  _internal_set_timecode_type(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2DqbufFtraceEvent.timecode_type)
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::_internal_timecode_type() const {
  return _impl_.timecode_type_;
}
inline void Vb2V4l2DqbufFtraceEvent::_internal_set_timecode_type(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.timecode_type_ = value;
}

// optional uint32 timecode_userbits0 = 11;
inline bool Vb2V4l2DqbufFtraceEvent::has_timecode_userbits0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void Vb2V4l2DqbufFtraceEvent::clear_timecode_userbits0() {
  _impl_.timecode_userbits0_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::timecode_userbits0() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2DqbufFtraceEvent.timecode_userbits0)
  return _internal_timecode_userbits0();
}
inline void Vb2V4l2DqbufFtraceEvent::set_timecode_userbits0(::uint32_t value) {
  _internal_set_timecode_userbits0(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2DqbufFtraceEvent.timecode_userbits0)
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::_internal_timecode_userbits0() const {
  return _impl_.timecode_userbits0_;
}
inline void Vb2V4l2DqbufFtraceEvent::_internal_set_timecode_userbits0(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.timecode_userbits0_ = value;
}

// optional uint32 timecode_userbits1 = 12;
inline bool Vb2V4l2DqbufFtraceEvent::has_timecode_userbits1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void Vb2V4l2DqbufFtraceEvent::clear_timecode_userbits1() {
  _impl_.timecode_userbits1_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::timecode_userbits1() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2DqbufFtraceEvent.timecode_userbits1)
  return _internal_timecode_userbits1();
}
inline void Vb2V4l2DqbufFtraceEvent::set_timecode_userbits1(::uint32_t value) {
  _internal_set_timecode_userbits1(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2DqbufFtraceEvent.timecode_userbits1)
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::_internal_timecode_userbits1() const {
  return _impl_.timecode_userbits1_;
}
inline void Vb2V4l2DqbufFtraceEvent::_internal_set_timecode_userbits1(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.timecode_userbits1_ = value;
}

// optional uint32 timecode_userbits2 = 13;
inline bool Vb2V4l2DqbufFtraceEvent::has_timecode_userbits2() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void Vb2V4l2DqbufFtraceEvent::clear_timecode_userbits2() {
  _impl_.timecode_userbits2_ = 0u;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::timecode_userbits2() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2DqbufFtraceEvent.timecode_userbits2)
  return _internal_timecode_userbits2();
}
inline void Vb2V4l2DqbufFtraceEvent::set_timecode_userbits2(::uint32_t value) {
  _internal_set_timecode_userbits2(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2DqbufFtraceEvent.timecode_userbits2)
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::_internal_timecode_userbits2() const {
  return _impl_.timecode_userbits2_;
}
inline void Vb2V4l2DqbufFtraceEvent::_internal_set_timecode_userbits2(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.timecode_userbits2_ = value;
}

// optional uint32 timecode_userbits3 = 14;
inline bool Vb2V4l2DqbufFtraceEvent::has_timecode_userbits3() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void Vb2V4l2DqbufFtraceEvent::clear_timecode_userbits3() {
  _impl_.timecode_userbits3_ = 0u;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::timecode_userbits3() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2DqbufFtraceEvent.timecode_userbits3)
  return _internal_timecode_userbits3();
}
inline void Vb2V4l2DqbufFtraceEvent::set_timecode_userbits3(::uint32_t value) {
  _internal_set_timecode_userbits3(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2DqbufFtraceEvent.timecode_userbits3)
}
inline ::uint32_t Vb2V4l2DqbufFtraceEvent::_internal_timecode_userbits3() const {
  return _impl_.timecode_userbits3_;
}
inline void Vb2V4l2DqbufFtraceEvent::_internal_set_timecode_userbits3(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00002000u;
  _impl_.timecode_userbits3_ = value;
}

// optional int64 timestamp = 15;
inline bool Vb2V4l2DqbufFtraceEvent::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void Vb2V4l2DqbufFtraceEvent::clear_timestamp() {
  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::int64_t Vb2V4l2DqbufFtraceEvent::timestamp() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.Vb2V4l2DqbufFtraceEvent.timestamp)
  return _internal_timestamp();
}
inline void Vb2V4l2DqbufFtraceEvent::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.Vb2V4l2DqbufFtraceEvent.timestamp)
}
inline ::int64_t Vb2V4l2DqbufFtraceEvent::_internal_timestamp() const {
  return _impl_.timestamp_;
}
inline void Vb2V4l2DqbufFtraceEvent::_internal_set_timestamp(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00004000u;
  _impl_.timestamp_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fftrace_2fv4l2_2eproto_2epb_2eh
