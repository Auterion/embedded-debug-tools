// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/track_event/chrome_legacy_ipc.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2ftrack_5fevent_2fchrome_5flegacy_5fipc_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2ftrack_5fevent_2fchrome_5flegacy_5fipc_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2ftrace_2ftrack_5fevent_2fchrome_5flegacy_5fipc_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_protos_2fperfetto_2ftrace_2ftrack_5fevent_2fchrome_5flegacy_5fipc_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_protos_2fperfetto_2ftrace_2ftrack_5fevent_2fchrome_5flegacy_5fipc_2eproto;
namespace perfetto {
namespace protos {
class ChromeLegacyIpc;
struct ChromeLegacyIpcDefaultTypeInternal;
extern ChromeLegacyIpcDefaultTypeInternal _ChromeLegacyIpc_default_instance_;
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template <>
::perfetto::protos::ChromeLegacyIpc* Arena::CreateMaybeMessage<::perfetto::protos::ChromeLegacyIpc>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace perfetto {
namespace protos {
enum ChromeLegacyIpc_MessageClass : int {
  ChromeLegacyIpc_MessageClass_CLASS_UNSPECIFIED = 0,
  ChromeLegacyIpc_MessageClass_CLASS_AUTOMATION = 1,
  ChromeLegacyIpc_MessageClass_CLASS_FRAME = 2,
  ChromeLegacyIpc_MessageClass_CLASS_PAGE = 3,
  ChromeLegacyIpc_MessageClass_CLASS_VIEW = 4,
  ChromeLegacyIpc_MessageClass_CLASS_WIDGET = 5,
  ChromeLegacyIpc_MessageClass_CLASS_INPUT = 6,
  ChromeLegacyIpc_MessageClass_CLASS_TEST = 7,
  ChromeLegacyIpc_MessageClass_CLASS_WORKER = 8,
  ChromeLegacyIpc_MessageClass_CLASS_NACL = 9,
  ChromeLegacyIpc_MessageClass_CLASS_GPU_CHANNEL = 10,
  ChromeLegacyIpc_MessageClass_CLASS_MEDIA = 11,
  ChromeLegacyIpc_MessageClass_CLASS_PPAPI = 12,
  ChromeLegacyIpc_MessageClass_CLASS_CHROME = 13,
  ChromeLegacyIpc_MessageClass_CLASS_DRAG = 14,
  ChromeLegacyIpc_MessageClass_CLASS_PRINT = 15,
  ChromeLegacyIpc_MessageClass_CLASS_EXTENSION = 16,
  ChromeLegacyIpc_MessageClass_CLASS_TEXT_INPUT_CLIENT = 17,
  ChromeLegacyIpc_MessageClass_CLASS_BLINK_TEST = 18,
  ChromeLegacyIpc_MessageClass_CLASS_ACCESSIBILITY = 19,
  ChromeLegacyIpc_MessageClass_CLASS_PRERENDER = 20,
  ChromeLegacyIpc_MessageClass_CLASS_CHROMOTING = 21,
  ChromeLegacyIpc_MessageClass_CLASS_BROWSER_PLUGIN = 22,
  ChromeLegacyIpc_MessageClass_CLASS_ANDROID_WEB_VIEW = 23,
  ChromeLegacyIpc_MessageClass_CLASS_NACL_HOST = 24,
  ChromeLegacyIpc_MessageClass_CLASS_ENCRYPTED_MEDIA = 25,
  ChromeLegacyIpc_MessageClass_CLASS_CAST = 26,
  ChromeLegacyIpc_MessageClass_CLASS_GIN_JAVA_BRIDGE = 27,
  ChromeLegacyIpc_MessageClass_CLASS_CHROME_UTILITY_PRINTING = 28,
  ChromeLegacyIpc_MessageClass_CLASS_OZONE_GPU = 29,
  ChromeLegacyIpc_MessageClass_CLASS_WEB_TEST = 30,
  ChromeLegacyIpc_MessageClass_CLASS_NETWORK_HINTS = 31,
  ChromeLegacyIpc_MessageClass_CLASS_EXTENSIONS_GUEST_VIEW = 32,
  ChromeLegacyIpc_MessageClass_CLASS_GUEST_VIEW = 33,
  ChromeLegacyIpc_MessageClass_CLASS_MEDIA_PLAYER_DELEGATE = 34,
  ChromeLegacyIpc_MessageClass_CLASS_EXTENSION_WORKER = 35,
  ChromeLegacyIpc_MessageClass_CLASS_SUBRESOURCE_FILTER = 36,
  ChromeLegacyIpc_MessageClass_CLASS_UNFREEZABLE_FRAME = 37,
};

bool ChromeLegacyIpc_MessageClass_IsValid(int value);
constexpr ChromeLegacyIpc_MessageClass ChromeLegacyIpc_MessageClass_MessageClass_MIN = static_cast<ChromeLegacyIpc_MessageClass>(0);
constexpr ChromeLegacyIpc_MessageClass ChromeLegacyIpc_MessageClass_MessageClass_MAX = static_cast<ChromeLegacyIpc_MessageClass>(37);
constexpr int ChromeLegacyIpc_MessageClass_MessageClass_ARRAYSIZE = 37 + 1;
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
ChromeLegacyIpc_MessageClass_descriptor();
template <typename T>
const std::string& ChromeLegacyIpc_MessageClass_Name(T value) {
  static_assert(std::is_same<T, ChromeLegacyIpc_MessageClass>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MessageClass_Name().");
  return ChromeLegacyIpc_MessageClass_Name(static_cast<ChromeLegacyIpc_MessageClass>(value));
}
template <>
inline const std::string& ChromeLegacyIpc_MessageClass_Name(ChromeLegacyIpc_MessageClass value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfDenseEnum<ChromeLegacyIpc_MessageClass_descriptor,
                                                 0, 37>(
      static_cast<int>(value));
}
inline bool ChromeLegacyIpc_MessageClass_Parse(absl::string_view name, ChromeLegacyIpc_MessageClass* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ChromeLegacyIpc_MessageClass>(
      ChromeLegacyIpc_MessageClass_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ChromeLegacyIpc final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.ChromeLegacyIpc) */ {
 public:
  inline ChromeLegacyIpc() : ChromeLegacyIpc(nullptr) {}
  ~ChromeLegacyIpc() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ChromeLegacyIpc(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ChromeLegacyIpc(const ChromeLegacyIpc& from);
  ChromeLegacyIpc(ChromeLegacyIpc&& from) noexcept
    : ChromeLegacyIpc() {
    *this = ::std::move(from);
  }

  inline ChromeLegacyIpc& operator=(const ChromeLegacyIpc& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChromeLegacyIpc& operator=(ChromeLegacyIpc&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChromeLegacyIpc& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChromeLegacyIpc* internal_default_instance() {
    return reinterpret_cast<const ChromeLegacyIpc*>(
               &_ChromeLegacyIpc_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ChromeLegacyIpc& a, ChromeLegacyIpc& b) {
    a.Swap(&b);
  }
  inline void Swap(ChromeLegacyIpc* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChromeLegacyIpc* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChromeLegacyIpc* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ChromeLegacyIpc>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ChromeLegacyIpc& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ChromeLegacyIpc& from) {
    ChromeLegacyIpc::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChromeLegacyIpc* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.ChromeLegacyIpc";
  }
  protected:
  explicit ChromeLegacyIpc(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using MessageClass = ChromeLegacyIpc_MessageClass;
  static constexpr MessageClass CLASS_UNSPECIFIED = ChromeLegacyIpc_MessageClass_CLASS_UNSPECIFIED;
  static constexpr MessageClass CLASS_AUTOMATION = ChromeLegacyIpc_MessageClass_CLASS_AUTOMATION;
  static constexpr MessageClass CLASS_FRAME = ChromeLegacyIpc_MessageClass_CLASS_FRAME;
  static constexpr MessageClass CLASS_PAGE = ChromeLegacyIpc_MessageClass_CLASS_PAGE;
  static constexpr MessageClass CLASS_VIEW = ChromeLegacyIpc_MessageClass_CLASS_VIEW;
  static constexpr MessageClass CLASS_WIDGET = ChromeLegacyIpc_MessageClass_CLASS_WIDGET;
  static constexpr MessageClass CLASS_INPUT = ChromeLegacyIpc_MessageClass_CLASS_INPUT;
  static constexpr MessageClass CLASS_TEST = ChromeLegacyIpc_MessageClass_CLASS_TEST;
  static constexpr MessageClass CLASS_WORKER = ChromeLegacyIpc_MessageClass_CLASS_WORKER;
  static constexpr MessageClass CLASS_NACL = ChromeLegacyIpc_MessageClass_CLASS_NACL;
  static constexpr MessageClass CLASS_GPU_CHANNEL = ChromeLegacyIpc_MessageClass_CLASS_GPU_CHANNEL;
  static constexpr MessageClass CLASS_MEDIA = ChromeLegacyIpc_MessageClass_CLASS_MEDIA;
  static constexpr MessageClass CLASS_PPAPI = ChromeLegacyIpc_MessageClass_CLASS_PPAPI;
  static constexpr MessageClass CLASS_CHROME = ChromeLegacyIpc_MessageClass_CLASS_CHROME;
  static constexpr MessageClass CLASS_DRAG = ChromeLegacyIpc_MessageClass_CLASS_DRAG;
  static constexpr MessageClass CLASS_PRINT = ChromeLegacyIpc_MessageClass_CLASS_PRINT;
  static constexpr MessageClass CLASS_EXTENSION = ChromeLegacyIpc_MessageClass_CLASS_EXTENSION;
  static constexpr MessageClass CLASS_TEXT_INPUT_CLIENT = ChromeLegacyIpc_MessageClass_CLASS_TEXT_INPUT_CLIENT;
  static constexpr MessageClass CLASS_BLINK_TEST = ChromeLegacyIpc_MessageClass_CLASS_BLINK_TEST;
  static constexpr MessageClass CLASS_ACCESSIBILITY = ChromeLegacyIpc_MessageClass_CLASS_ACCESSIBILITY;
  static constexpr MessageClass CLASS_PRERENDER = ChromeLegacyIpc_MessageClass_CLASS_PRERENDER;
  static constexpr MessageClass CLASS_CHROMOTING = ChromeLegacyIpc_MessageClass_CLASS_CHROMOTING;
  static constexpr MessageClass CLASS_BROWSER_PLUGIN = ChromeLegacyIpc_MessageClass_CLASS_BROWSER_PLUGIN;
  static constexpr MessageClass CLASS_ANDROID_WEB_VIEW = ChromeLegacyIpc_MessageClass_CLASS_ANDROID_WEB_VIEW;
  static constexpr MessageClass CLASS_NACL_HOST = ChromeLegacyIpc_MessageClass_CLASS_NACL_HOST;
  static constexpr MessageClass CLASS_ENCRYPTED_MEDIA = ChromeLegacyIpc_MessageClass_CLASS_ENCRYPTED_MEDIA;
  static constexpr MessageClass CLASS_CAST = ChromeLegacyIpc_MessageClass_CLASS_CAST;
  static constexpr MessageClass CLASS_GIN_JAVA_BRIDGE = ChromeLegacyIpc_MessageClass_CLASS_GIN_JAVA_BRIDGE;
  static constexpr MessageClass CLASS_CHROME_UTILITY_PRINTING = ChromeLegacyIpc_MessageClass_CLASS_CHROME_UTILITY_PRINTING;
  static constexpr MessageClass CLASS_OZONE_GPU = ChromeLegacyIpc_MessageClass_CLASS_OZONE_GPU;
  static constexpr MessageClass CLASS_WEB_TEST = ChromeLegacyIpc_MessageClass_CLASS_WEB_TEST;
  static constexpr MessageClass CLASS_NETWORK_HINTS = ChromeLegacyIpc_MessageClass_CLASS_NETWORK_HINTS;
  static constexpr MessageClass CLASS_EXTENSIONS_GUEST_VIEW = ChromeLegacyIpc_MessageClass_CLASS_EXTENSIONS_GUEST_VIEW;
  static constexpr MessageClass CLASS_GUEST_VIEW = ChromeLegacyIpc_MessageClass_CLASS_GUEST_VIEW;
  static constexpr MessageClass CLASS_MEDIA_PLAYER_DELEGATE = ChromeLegacyIpc_MessageClass_CLASS_MEDIA_PLAYER_DELEGATE;
  static constexpr MessageClass CLASS_EXTENSION_WORKER = ChromeLegacyIpc_MessageClass_CLASS_EXTENSION_WORKER;
  static constexpr MessageClass CLASS_SUBRESOURCE_FILTER = ChromeLegacyIpc_MessageClass_CLASS_SUBRESOURCE_FILTER;
  static constexpr MessageClass CLASS_UNFREEZABLE_FRAME = ChromeLegacyIpc_MessageClass_CLASS_UNFREEZABLE_FRAME;
  static inline bool MessageClass_IsValid(int value) {
    return ChromeLegacyIpc_MessageClass_IsValid(value);
  }
  static constexpr MessageClass MessageClass_MIN = ChromeLegacyIpc_MessageClass_MessageClass_MIN;
  static constexpr MessageClass MessageClass_MAX = ChromeLegacyIpc_MessageClass_MessageClass_MAX;
  static constexpr int MessageClass_ARRAYSIZE = ChromeLegacyIpc_MessageClass_MessageClass_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessageClass_descriptor() {
    return ChromeLegacyIpc_MessageClass_descriptor();
  }
  template <typename T>
  static inline const std::string& MessageClass_Name(T value) {
    return ChromeLegacyIpc_MessageClass_Name(value);
  }
  static inline bool MessageClass_Parse(absl::string_view name, MessageClass* value) {
    return ChromeLegacyIpc_MessageClass_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kMessageClassFieldNumber = 1,
    kMessageLineFieldNumber = 2,
  };
  // optional .perfetto.protos.ChromeLegacyIpc.MessageClass message_class = 1;
  bool has_message_class() const;
  void clear_message_class() ;
  ::perfetto::protos::ChromeLegacyIpc_MessageClass message_class() const;
  void set_message_class(::perfetto::protos::ChromeLegacyIpc_MessageClass value);

  private:
  ::perfetto::protos::ChromeLegacyIpc_MessageClass _internal_message_class() const;
  void _internal_set_message_class(::perfetto::protos::ChromeLegacyIpc_MessageClass value);

  public:
  // optional uint32 message_line = 2;
  bool has_message_line() const;
  void clear_message_line() ;
  ::uint32_t message_line() const;
  void set_message_line(::uint32_t value);

  private:
  ::uint32_t _internal_message_line() const;
  void _internal_set_message_line(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.ChromeLegacyIpc)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int message_class_;
    ::uint32_t message_line_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2ftrack_5fevent_2fchrome_5flegacy_5fipc_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ChromeLegacyIpc

// optional .perfetto.protos.ChromeLegacyIpc.MessageClass message_class = 1;
inline bool ChromeLegacyIpc::has_message_class() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ChromeLegacyIpc::clear_message_class() {
  _impl_.message_class_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::perfetto::protos::ChromeLegacyIpc_MessageClass ChromeLegacyIpc::message_class() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.ChromeLegacyIpc.message_class)
  return _internal_message_class();
}
inline void ChromeLegacyIpc::set_message_class(::perfetto::protos::ChromeLegacyIpc_MessageClass value) {
   _internal_set_message_class(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.ChromeLegacyIpc.message_class)
}
inline ::perfetto::protos::ChromeLegacyIpc_MessageClass ChromeLegacyIpc::_internal_message_class() const {
  return static_cast<::perfetto::protos::ChromeLegacyIpc_MessageClass>(_impl_.message_class_);
}
inline void ChromeLegacyIpc::_internal_set_message_class(::perfetto::protos::ChromeLegacyIpc_MessageClass value) {
  assert(::perfetto::protos::ChromeLegacyIpc_MessageClass_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_class_ = value;
}

// optional uint32 message_line = 2;
inline bool ChromeLegacyIpc::has_message_line() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ChromeLegacyIpc::clear_message_line() {
  _impl_.message_line_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t ChromeLegacyIpc::message_line() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.ChromeLegacyIpc.message_line)
  return _internal_message_line();
}
inline void ChromeLegacyIpc::set_message_line(::uint32_t value) {
  _internal_set_message_line(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.ChromeLegacyIpc.message_line)
}
inline ::uint32_t ChromeLegacyIpc::_internal_message_line() const {
  return _impl_.message_line_;
}
inline void ChromeLegacyIpc::_internal_set_message_line(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.message_line_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto


PROTOBUF_NAMESPACE_OPEN

template <>
struct is_proto_enum<::perfetto::protos::ChromeLegacyIpc_MessageClass> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::perfetto::protos::ChromeLegacyIpc_MessageClass>() {
  return ::perfetto::protos::ChromeLegacyIpc_MessageClass_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2ftrack_5fevent_2fchrome_5flegacy_5fipc_2eproto_2epb_2eh
