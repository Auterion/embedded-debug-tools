// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/config/profiling/java_hprof_config.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto;
namespace perfetto {
namespace protos {
class JavaHprofConfig;
struct JavaHprofConfigDefaultTypeInternal;
extern JavaHprofConfigDefaultTypeInternal _JavaHprofConfig_default_instance_;
class JavaHprofConfig_ContinuousDumpConfig;
struct JavaHprofConfig_ContinuousDumpConfigDefaultTypeInternal;
extern JavaHprofConfig_ContinuousDumpConfigDefaultTypeInternal _JavaHprofConfig_ContinuousDumpConfig_default_instance_;
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template <>
::perfetto::protos::JavaHprofConfig* Arena::CreateMaybeMessage<::perfetto::protos::JavaHprofConfig>(Arena*);
template <>
::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig* Arena::CreateMaybeMessage<::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace perfetto {
namespace protos {

// ===================================================================


// -------------------------------------------------------------------

class JavaHprofConfig_ContinuousDumpConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig) */ {
 public:
  inline JavaHprofConfig_ContinuousDumpConfig() : JavaHprofConfig_ContinuousDumpConfig(nullptr) {}
  ~JavaHprofConfig_ContinuousDumpConfig() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR JavaHprofConfig_ContinuousDumpConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  JavaHprofConfig_ContinuousDumpConfig(const JavaHprofConfig_ContinuousDumpConfig& from);
  JavaHprofConfig_ContinuousDumpConfig(JavaHprofConfig_ContinuousDumpConfig&& from) noexcept
    : JavaHprofConfig_ContinuousDumpConfig() {
    *this = ::std::move(from);
  }

  inline JavaHprofConfig_ContinuousDumpConfig& operator=(const JavaHprofConfig_ContinuousDumpConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline JavaHprofConfig_ContinuousDumpConfig& operator=(JavaHprofConfig_ContinuousDumpConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JavaHprofConfig_ContinuousDumpConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const JavaHprofConfig_ContinuousDumpConfig* internal_default_instance() {
    return reinterpret_cast<const JavaHprofConfig_ContinuousDumpConfig*>(
               &_JavaHprofConfig_ContinuousDumpConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(JavaHprofConfig_ContinuousDumpConfig& a, JavaHprofConfig_ContinuousDumpConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(JavaHprofConfig_ContinuousDumpConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JavaHprofConfig_ContinuousDumpConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JavaHprofConfig_ContinuousDumpConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<JavaHprofConfig_ContinuousDumpConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const JavaHprofConfig_ContinuousDumpConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const JavaHprofConfig_ContinuousDumpConfig& from) {
    JavaHprofConfig_ContinuousDumpConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JavaHprofConfig_ContinuousDumpConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.JavaHprofConfig.ContinuousDumpConfig";
  }
  protected:
  explicit JavaHprofConfig_ContinuousDumpConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDumpPhaseMsFieldNumber = 1,
    kDumpIntervalMsFieldNumber = 2,
    kScanPidsOnlyOnStartFieldNumber = 3,
  };
  // optional uint32 dump_phase_ms = 1;
  bool has_dump_phase_ms() const;
  void clear_dump_phase_ms() ;
  ::uint32_t dump_phase_ms() const;
  void set_dump_phase_ms(::uint32_t value);

  private:
  ::uint32_t _internal_dump_phase_ms() const;
  void _internal_set_dump_phase_ms(::uint32_t value);

  public:
  // optional uint32 dump_interval_ms = 2;
  bool has_dump_interval_ms() const;
  void clear_dump_interval_ms() ;
  ::uint32_t dump_interval_ms() const;
  void set_dump_interval_ms(::uint32_t value);

  private:
  ::uint32_t _internal_dump_interval_ms() const;
  void _internal_set_dump_interval_ms(::uint32_t value);

  public:
  // optional bool scan_pids_only_on_start = 3;
  bool has_scan_pids_only_on_start() const;
  void clear_scan_pids_only_on_start() ;
  bool scan_pids_only_on_start() const;
  void set_scan_pids_only_on_start(bool value);

  private:
  bool _internal_scan_pids_only_on_start() const;
  void _internal_set_scan_pids_only_on_start(bool value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::uint32_t dump_phase_ms_;
    ::uint32_t dump_interval_ms_;
    bool scan_pids_only_on_start_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto;
};// -------------------------------------------------------------------

class JavaHprofConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perfetto.protos.JavaHprofConfig) */ {
 public:
  inline JavaHprofConfig() : JavaHprofConfig(nullptr) {}
  ~JavaHprofConfig() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR JavaHprofConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  JavaHprofConfig(const JavaHprofConfig& from);
  JavaHprofConfig(JavaHprofConfig&& from) noexcept
    : JavaHprofConfig() {
    *this = ::std::move(from);
  }

  inline JavaHprofConfig& operator=(const JavaHprofConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline JavaHprofConfig& operator=(JavaHprofConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JavaHprofConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const JavaHprofConfig* internal_default_instance() {
    return reinterpret_cast<const JavaHprofConfig*>(
               &_JavaHprofConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(JavaHprofConfig& a, JavaHprofConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(JavaHprofConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JavaHprofConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JavaHprofConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<JavaHprofConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const JavaHprofConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const JavaHprofConfig& from) {
    JavaHprofConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JavaHprofConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "perfetto.protos.JavaHprofConfig";
  }
  protected:
  explicit JavaHprofConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef JavaHprofConfig_ContinuousDumpConfig ContinuousDumpConfig;

  // accessors -------------------------------------------------------

  enum : int {
    kProcessCmdlineFieldNumber = 1,
    kPidFieldNumber = 2,
    kIgnoredTypesFieldNumber = 6,
    kTargetInstalledByFieldNumber = 7,
    kContinuousDumpConfigFieldNumber = 3,
    kMinAnonymousMemoryKbFieldNumber = 4,
    kDumpSmapsFieldNumber = 5,
  };
  // repeated string process_cmdline = 1;
  int process_cmdline_size() const;
  private:
  int _internal_process_cmdline_size() const;

  public:
  void clear_process_cmdline() ;
  const std::string& process_cmdline(int index) const;
  std::string* mutable_process_cmdline(int index);
  void set_process_cmdline(int index, const std::string& value);
  void set_process_cmdline(int index, std::string&& value);
  void set_process_cmdline(int index, const char* value);
  void set_process_cmdline(int index, const char* value, std::size_t size);
  void set_process_cmdline(int index, absl::string_view value);
  std::string* add_process_cmdline();
  void add_process_cmdline(const std::string& value);
  void add_process_cmdline(std::string&& value);
  void add_process_cmdline(const char* value);
  void add_process_cmdline(const char* value, std::size_t size);
  void add_process_cmdline(absl::string_view value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& process_cmdline() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_process_cmdline();

  private:
  const std::string& _internal_process_cmdline(int index) const;
  std::string* _internal_add_process_cmdline();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& _internal_process_cmdline() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* _internal_mutable_process_cmdline();

  public:
  // repeated uint64 pid = 2;
  int pid_size() const;
  private:
  int _internal_pid_size() const;

  public:
  void clear_pid() ;
  ::uint64_t pid(int index) const;
  void set_pid(int index, ::uint64_t value);
  void add_pid(::uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>& pid() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>* mutable_pid();

  private:
  ::uint64_t _internal_pid(int index) const;
  void _internal_add_pid(::uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>& _internal_pid() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>* _internal_mutable_pid();

  public:
  // repeated string ignored_types = 6;
  int ignored_types_size() const;
  private:
  int _internal_ignored_types_size() const;

  public:
  void clear_ignored_types() ;
  const std::string& ignored_types(int index) const;
  std::string* mutable_ignored_types(int index);
  void set_ignored_types(int index, const std::string& value);
  void set_ignored_types(int index, std::string&& value);
  void set_ignored_types(int index, const char* value);
  void set_ignored_types(int index, const char* value, std::size_t size);
  void set_ignored_types(int index, absl::string_view value);
  std::string* add_ignored_types();
  void add_ignored_types(const std::string& value);
  void add_ignored_types(std::string&& value);
  void add_ignored_types(const char* value);
  void add_ignored_types(const char* value, std::size_t size);
  void add_ignored_types(absl::string_view value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& ignored_types() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_ignored_types();

  private:
  const std::string& _internal_ignored_types(int index) const;
  std::string* _internal_add_ignored_types();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& _internal_ignored_types() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* _internal_mutable_ignored_types();

  public:
  // repeated string target_installed_by = 7;
  int target_installed_by_size() const;
  private:
  int _internal_target_installed_by_size() const;

  public:
  void clear_target_installed_by() ;
  const std::string& target_installed_by(int index) const;
  std::string* mutable_target_installed_by(int index);
  void set_target_installed_by(int index, const std::string& value);
  void set_target_installed_by(int index, std::string&& value);
  void set_target_installed_by(int index, const char* value);
  void set_target_installed_by(int index, const char* value, std::size_t size);
  void set_target_installed_by(int index, absl::string_view value);
  std::string* add_target_installed_by();
  void add_target_installed_by(const std::string& value);
  void add_target_installed_by(std::string&& value);
  void add_target_installed_by(const char* value);
  void add_target_installed_by(const char* value, std::size_t size);
  void add_target_installed_by(absl::string_view value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& target_installed_by() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_target_installed_by();

  private:
  const std::string& _internal_target_installed_by(int index) const;
  std::string* _internal_add_target_installed_by();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& _internal_target_installed_by() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* _internal_mutable_target_installed_by();

  public:
  // optional .perfetto.protos.JavaHprofConfig.ContinuousDumpConfig continuous_dump_config = 3;
  bool has_continuous_dump_config() const;
  void clear_continuous_dump_config() ;
  const ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig& continuous_dump_config() const;
  PROTOBUF_NODISCARD ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig* release_continuous_dump_config();
  ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig* mutable_continuous_dump_config();
  void set_allocated_continuous_dump_config(::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig* continuous_dump_config);
  private:
  const ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig& _internal_continuous_dump_config() const;
  ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig* _internal_mutable_continuous_dump_config();
  public:
  void unsafe_arena_set_allocated_continuous_dump_config(
      ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig* continuous_dump_config);
  ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig* unsafe_arena_release_continuous_dump_config();
  // optional uint32 min_anonymous_memory_kb = 4;
  bool has_min_anonymous_memory_kb() const;
  void clear_min_anonymous_memory_kb() ;
  ::uint32_t min_anonymous_memory_kb() const;
  void set_min_anonymous_memory_kb(::uint32_t value);

  private:
  ::uint32_t _internal_min_anonymous_memory_kb() const;
  void _internal_set_min_anonymous_memory_kb(::uint32_t value);

  public:
  // optional bool dump_smaps = 5;
  bool has_dump_smaps() const;
  void clear_dump_smaps() ;
  bool dump_smaps() const;
  void set_dump_smaps(bool value);

  private:
  bool _internal_dump_smaps() const;
  void _internal_set_dump_smaps(bool value);

  public:
  // @@protoc_insertion_point(class_scope:perfetto.protos.JavaHprofConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> process_cmdline_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t> pid_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> ignored_types_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> target_installed_by_;
    ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig* continuous_dump_config_;
    ::uint32_t min_anonymous_memory_kb_;
    bool dump_smaps_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// JavaHprofConfig_ContinuousDumpConfig

// optional uint32 dump_phase_ms = 1;
inline bool JavaHprofConfig_ContinuousDumpConfig::has_dump_phase_ms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void JavaHprofConfig_ContinuousDumpConfig::clear_dump_phase_ms() {
  _impl_.dump_phase_ms_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t JavaHprofConfig_ContinuousDumpConfig::dump_phase_ms() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig.dump_phase_ms)
  return _internal_dump_phase_ms();
}
inline void JavaHprofConfig_ContinuousDumpConfig::set_dump_phase_ms(::uint32_t value) {
  _internal_set_dump_phase_ms(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig.dump_phase_ms)
}
inline ::uint32_t JavaHprofConfig_ContinuousDumpConfig::_internal_dump_phase_ms() const {
  return _impl_.dump_phase_ms_;
}
inline void JavaHprofConfig_ContinuousDumpConfig::_internal_set_dump_phase_ms(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.dump_phase_ms_ = value;
}

// optional uint32 dump_interval_ms = 2;
inline bool JavaHprofConfig_ContinuousDumpConfig::has_dump_interval_ms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void JavaHprofConfig_ContinuousDumpConfig::clear_dump_interval_ms() {
  _impl_.dump_interval_ms_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t JavaHprofConfig_ContinuousDumpConfig::dump_interval_ms() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig.dump_interval_ms)
  return _internal_dump_interval_ms();
}
inline void JavaHprofConfig_ContinuousDumpConfig::set_dump_interval_ms(::uint32_t value) {
  _internal_set_dump_interval_ms(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig.dump_interval_ms)
}
inline ::uint32_t JavaHprofConfig_ContinuousDumpConfig::_internal_dump_interval_ms() const {
  return _impl_.dump_interval_ms_;
}
inline void JavaHprofConfig_ContinuousDumpConfig::_internal_set_dump_interval_ms(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.dump_interval_ms_ = value;
}

// optional bool scan_pids_only_on_start = 3;
inline bool JavaHprofConfig_ContinuousDumpConfig::has_scan_pids_only_on_start() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void JavaHprofConfig_ContinuousDumpConfig::clear_scan_pids_only_on_start() {
  _impl_.scan_pids_only_on_start_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool JavaHprofConfig_ContinuousDumpConfig::scan_pids_only_on_start() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig.scan_pids_only_on_start)
  return _internal_scan_pids_only_on_start();
}
inline void JavaHprofConfig_ContinuousDumpConfig::set_scan_pids_only_on_start(bool value) {
  _internal_set_scan_pids_only_on_start(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig.scan_pids_only_on_start)
}
inline bool JavaHprofConfig_ContinuousDumpConfig::_internal_scan_pids_only_on_start() const {
  return _impl_.scan_pids_only_on_start_;
}
inline void JavaHprofConfig_ContinuousDumpConfig::_internal_set_scan_pids_only_on_start(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.scan_pids_only_on_start_ = value;
}

// -------------------------------------------------------------------

// JavaHprofConfig

// repeated string process_cmdline = 1;
inline int JavaHprofConfig::_internal_process_cmdline_size() const {
  return _impl_.process_cmdline_.size();
}
inline int JavaHprofConfig::process_cmdline_size() const {
  return _internal_process_cmdline_size();
}
inline void JavaHprofConfig::clear_process_cmdline() {
  _internal_mutable_process_cmdline()->Clear();
}
inline std::string* JavaHprofConfig::add_process_cmdline() {
  std::string* _s = _internal_add_process_cmdline();
  // @@protoc_insertion_point(field_add_mutable:perfetto.protos.JavaHprofConfig.process_cmdline)
  return _s;
}
inline const std::string& JavaHprofConfig::process_cmdline(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.JavaHprofConfig.process_cmdline)
  return _internal_process_cmdline(index);
}
inline std::string* JavaHprofConfig::mutable_process_cmdline(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.JavaHprofConfig.process_cmdline)
  return _internal_mutable_process_cmdline()->Mutable(index);
}
inline void JavaHprofConfig::set_process_cmdline(int index, const std::string& value) {
  _internal_mutable_process_cmdline()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.JavaHprofConfig.process_cmdline)
}
inline void JavaHprofConfig::set_process_cmdline(int index, std::string&& value) {
  _internal_mutable_process_cmdline()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:perfetto.protos.JavaHprofConfig.process_cmdline)
}
inline void JavaHprofConfig::set_process_cmdline(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_process_cmdline()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:perfetto.protos.JavaHprofConfig.process_cmdline)
}
inline void JavaHprofConfig::set_process_cmdline(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_process_cmdline()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.JavaHprofConfig.process_cmdline)
}
inline void JavaHprofConfig::set_process_cmdline(int index, absl::string_view value) {
  _internal_mutable_process_cmdline()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:perfetto.protos.JavaHprofConfig.process_cmdline)
}
inline void JavaHprofConfig::add_process_cmdline(const std::string& value) {
  _internal_mutable_process_cmdline()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:perfetto.protos.JavaHprofConfig.process_cmdline)
}
inline void JavaHprofConfig::add_process_cmdline(std::string&& value) {
  _internal_mutable_process_cmdline()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:perfetto.protos.JavaHprofConfig.process_cmdline)
}
inline void JavaHprofConfig::add_process_cmdline(const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_process_cmdline()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:perfetto.protos.JavaHprofConfig.process_cmdline)
}
inline void JavaHprofConfig::add_process_cmdline(const char* value, std::size_t size) {
  _internal_mutable_process_cmdline()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:perfetto.protos.JavaHprofConfig.process_cmdline)
}
inline void JavaHprofConfig::add_process_cmdline(absl::string_view value) {
  _internal_mutable_process_cmdline()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:perfetto.protos.JavaHprofConfig.process_cmdline)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
JavaHprofConfig::process_cmdline() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.JavaHprofConfig.process_cmdline)
  return _internal_process_cmdline();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* JavaHprofConfig::mutable_process_cmdline() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.JavaHprofConfig.process_cmdline)
  return _internal_mutable_process_cmdline();
}
inline const std::string& JavaHprofConfig::_internal_process_cmdline(int index) const {
  return _internal_process_cmdline().Get(index);
}
inline std::string* JavaHprofConfig::_internal_add_process_cmdline() {
  return _internal_mutable_process_cmdline()->Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
JavaHprofConfig::_internal_process_cmdline() const {
  return _impl_.process_cmdline_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
JavaHprofConfig::_internal_mutable_process_cmdline() {
  return &_impl_.process_cmdline_;
}

// repeated uint64 pid = 2;
inline int JavaHprofConfig::_internal_pid_size() const {
  return _impl_.pid_.size();
}
inline int JavaHprofConfig::pid_size() const {
  return _internal_pid_size();
}
inline void JavaHprofConfig::clear_pid() {
  _internal_mutable_pid()->Clear();
}
inline ::uint64_t JavaHprofConfig::pid(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.JavaHprofConfig.pid)
  return _internal_pid(index);
}
inline void JavaHprofConfig::set_pid(int index, ::uint64_t value) {
  _internal_mutable_pid()->Set(index, value);
  // @@protoc_insertion_point(field_set:perfetto.protos.JavaHprofConfig.pid)
}
inline void JavaHprofConfig::add_pid(::uint64_t value) {
  _internal_add_pid(value);
  // @@protoc_insertion_point(field_add:perfetto.protos.JavaHprofConfig.pid)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>& JavaHprofConfig::pid() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.JavaHprofConfig.pid)
  return _internal_pid();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>* JavaHprofConfig::mutable_pid() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.JavaHprofConfig.pid)
  return _internal_mutable_pid();
}

inline ::uint64_t JavaHprofConfig::_internal_pid(int index) const {
  return _internal_pid().Get(index);
}
inline void JavaHprofConfig::_internal_add_pid(::uint64_t value) {
  _internal_mutable_pid()->Add(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>& JavaHprofConfig::_internal_pid() const {
  return _impl_.pid_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint64_t>* JavaHprofConfig::_internal_mutable_pid() {
  return &_impl_.pid_;
}

// repeated string target_installed_by = 7;
inline int JavaHprofConfig::_internal_target_installed_by_size() const {
  return _impl_.target_installed_by_.size();
}
inline int JavaHprofConfig::target_installed_by_size() const {
  return _internal_target_installed_by_size();
}
inline void JavaHprofConfig::clear_target_installed_by() {
  _internal_mutable_target_installed_by()->Clear();
}
inline std::string* JavaHprofConfig::add_target_installed_by() {
  std::string* _s = _internal_add_target_installed_by();
  // @@protoc_insertion_point(field_add_mutable:perfetto.protos.JavaHprofConfig.target_installed_by)
  return _s;
}
inline const std::string& JavaHprofConfig::target_installed_by(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.JavaHprofConfig.target_installed_by)
  return _internal_target_installed_by(index);
}
inline std::string* JavaHprofConfig::mutable_target_installed_by(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.JavaHprofConfig.target_installed_by)
  return _internal_mutable_target_installed_by()->Mutable(index);
}
inline void JavaHprofConfig::set_target_installed_by(int index, const std::string& value) {
  _internal_mutable_target_installed_by()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.JavaHprofConfig.target_installed_by)
}
inline void JavaHprofConfig::set_target_installed_by(int index, std::string&& value) {
  _internal_mutable_target_installed_by()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:perfetto.protos.JavaHprofConfig.target_installed_by)
}
inline void JavaHprofConfig::set_target_installed_by(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_target_installed_by()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:perfetto.protos.JavaHprofConfig.target_installed_by)
}
inline void JavaHprofConfig::set_target_installed_by(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_target_installed_by()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.JavaHprofConfig.target_installed_by)
}
inline void JavaHprofConfig::set_target_installed_by(int index, absl::string_view value) {
  _internal_mutable_target_installed_by()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:perfetto.protos.JavaHprofConfig.target_installed_by)
}
inline void JavaHprofConfig::add_target_installed_by(const std::string& value) {
  _internal_mutable_target_installed_by()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:perfetto.protos.JavaHprofConfig.target_installed_by)
}
inline void JavaHprofConfig::add_target_installed_by(std::string&& value) {
  _internal_mutable_target_installed_by()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:perfetto.protos.JavaHprofConfig.target_installed_by)
}
inline void JavaHprofConfig::add_target_installed_by(const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_target_installed_by()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:perfetto.protos.JavaHprofConfig.target_installed_by)
}
inline void JavaHprofConfig::add_target_installed_by(const char* value, std::size_t size) {
  _internal_mutable_target_installed_by()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:perfetto.protos.JavaHprofConfig.target_installed_by)
}
inline void JavaHprofConfig::add_target_installed_by(absl::string_view value) {
  _internal_mutable_target_installed_by()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:perfetto.protos.JavaHprofConfig.target_installed_by)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
JavaHprofConfig::target_installed_by() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.JavaHprofConfig.target_installed_by)
  return _internal_target_installed_by();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* JavaHprofConfig::mutable_target_installed_by() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.JavaHprofConfig.target_installed_by)
  return _internal_mutable_target_installed_by();
}
inline const std::string& JavaHprofConfig::_internal_target_installed_by(int index) const {
  return _internal_target_installed_by().Get(index);
}
inline std::string* JavaHprofConfig::_internal_add_target_installed_by() {
  return _internal_mutable_target_installed_by()->Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
JavaHprofConfig::_internal_target_installed_by() const {
  return _impl_.target_installed_by_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
JavaHprofConfig::_internal_mutable_target_installed_by() {
  return &_impl_.target_installed_by_;
}

// optional .perfetto.protos.JavaHprofConfig.ContinuousDumpConfig continuous_dump_config = 3;
inline bool JavaHprofConfig::has_continuous_dump_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.continuous_dump_config_ != nullptr);
  return value;
}
inline void JavaHprofConfig::clear_continuous_dump_config() {
  if (_impl_.continuous_dump_config_ != nullptr) _impl_.continuous_dump_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig& JavaHprofConfig::_internal_continuous_dump_config() const {
  const ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig* p = _impl_.continuous_dump_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig&>(
      ::perfetto::protos::_JavaHprofConfig_ContinuousDumpConfig_default_instance_);
}
inline const ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig& JavaHprofConfig::continuous_dump_config() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.JavaHprofConfig.continuous_dump_config)
  return _internal_continuous_dump_config();
}
inline void JavaHprofConfig::unsafe_arena_set_allocated_continuous_dump_config(
    ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig* continuous_dump_config) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.continuous_dump_config_);
  }
  _impl_.continuous_dump_config_ = continuous_dump_config;
  if (continuous_dump_config) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:perfetto.protos.JavaHprofConfig.continuous_dump_config)
}
inline ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig* JavaHprofConfig::release_continuous_dump_config() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig* temp = _impl_.continuous_dump_config_;
  _impl_.continuous_dump_config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig* JavaHprofConfig::unsafe_arena_release_continuous_dump_config() {
  // @@protoc_insertion_point(field_release:perfetto.protos.JavaHprofConfig.continuous_dump_config)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig* temp = _impl_.continuous_dump_config_;
  _impl_.continuous_dump_config_ = nullptr;
  return temp;
}
inline ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig* JavaHprofConfig::_internal_mutable_continuous_dump_config() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.continuous_dump_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig>(GetArenaForAllocation());
    _impl_.continuous_dump_config_ = p;
  }
  return _impl_.continuous_dump_config_;
}
inline ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig* JavaHprofConfig::mutable_continuous_dump_config() {
  ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig* _msg = _internal_mutable_continuous_dump_config();
  // @@protoc_insertion_point(field_mutable:perfetto.protos.JavaHprofConfig.continuous_dump_config)
  return _msg;
}
inline void JavaHprofConfig::set_allocated_continuous_dump_config(::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig* continuous_dump_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.continuous_dump_config_;
  }
  if (continuous_dump_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(continuous_dump_config);
    if (message_arena != submessage_arena) {
      continuous_dump_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, continuous_dump_config, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.continuous_dump_config_ = continuous_dump_config;
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.JavaHprofConfig.continuous_dump_config)
}

// optional uint32 min_anonymous_memory_kb = 4;
inline bool JavaHprofConfig::has_min_anonymous_memory_kb() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void JavaHprofConfig::clear_min_anonymous_memory_kb() {
  _impl_.min_anonymous_memory_kb_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t JavaHprofConfig::min_anonymous_memory_kb() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.JavaHprofConfig.min_anonymous_memory_kb)
  return _internal_min_anonymous_memory_kb();
}
inline void JavaHprofConfig::set_min_anonymous_memory_kb(::uint32_t value) {
  _internal_set_min_anonymous_memory_kb(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.JavaHprofConfig.min_anonymous_memory_kb)
}
inline ::uint32_t JavaHprofConfig::_internal_min_anonymous_memory_kb() const {
  return _impl_.min_anonymous_memory_kb_;
}
inline void JavaHprofConfig::_internal_set_min_anonymous_memory_kb(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.min_anonymous_memory_kb_ = value;
}

// optional bool dump_smaps = 5;
inline bool JavaHprofConfig::has_dump_smaps() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void JavaHprofConfig::clear_dump_smaps() {
  _impl_.dump_smaps_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool JavaHprofConfig::dump_smaps() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.JavaHprofConfig.dump_smaps)
  return _internal_dump_smaps();
}
inline void JavaHprofConfig::set_dump_smaps(bool value) {
  _internal_set_dump_smaps(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.JavaHprofConfig.dump_smaps)
}
inline bool JavaHprofConfig::_internal_dump_smaps() const {
  return _impl_.dump_smaps_;
}
inline void JavaHprofConfig::_internal_set_dump_smaps(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.dump_smaps_ = value;
}

// repeated string ignored_types = 6;
inline int JavaHprofConfig::_internal_ignored_types_size() const {
  return _impl_.ignored_types_.size();
}
inline int JavaHprofConfig::ignored_types_size() const {
  return _internal_ignored_types_size();
}
inline void JavaHprofConfig::clear_ignored_types() {
  _internal_mutable_ignored_types()->Clear();
}
inline std::string* JavaHprofConfig::add_ignored_types() {
  std::string* _s = _internal_add_ignored_types();
  // @@protoc_insertion_point(field_add_mutable:perfetto.protos.JavaHprofConfig.ignored_types)
  return _s;
}
inline const std::string& JavaHprofConfig::ignored_types(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.JavaHprofConfig.ignored_types)
  return _internal_ignored_types(index);
}
inline std::string* JavaHprofConfig::mutable_ignored_types(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.JavaHprofConfig.ignored_types)
  return _internal_mutable_ignored_types()->Mutable(index);
}
inline void JavaHprofConfig::set_ignored_types(int index, const std::string& value) {
  _internal_mutable_ignored_types()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:perfetto.protos.JavaHprofConfig.ignored_types)
}
inline void JavaHprofConfig::set_ignored_types(int index, std::string&& value) {
  _internal_mutable_ignored_types()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:perfetto.protos.JavaHprofConfig.ignored_types)
}
inline void JavaHprofConfig::set_ignored_types(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_ignored_types()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:perfetto.protos.JavaHprofConfig.ignored_types)
}
inline void JavaHprofConfig::set_ignored_types(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_ignored_types()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.JavaHprofConfig.ignored_types)
}
inline void JavaHprofConfig::set_ignored_types(int index, absl::string_view value) {
  _internal_mutable_ignored_types()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:perfetto.protos.JavaHprofConfig.ignored_types)
}
inline void JavaHprofConfig::add_ignored_types(const std::string& value) {
  _internal_mutable_ignored_types()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:perfetto.protos.JavaHprofConfig.ignored_types)
}
inline void JavaHprofConfig::add_ignored_types(std::string&& value) {
  _internal_mutable_ignored_types()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:perfetto.protos.JavaHprofConfig.ignored_types)
}
inline void JavaHprofConfig::add_ignored_types(const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_ignored_types()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:perfetto.protos.JavaHprofConfig.ignored_types)
}
inline void JavaHprofConfig::add_ignored_types(const char* value, std::size_t size) {
  _internal_mutable_ignored_types()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:perfetto.protos.JavaHprofConfig.ignored_types)
}
inline void JavaHprofConfig::add_ignored_types(absl::string_view value) {
  _internal_mutable_ignored_types()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:perfetto.protos.JavaHprofConfig.ignored_types)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
JavaHprofConfig::ignored_types() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.JavaHprofConfig.ignored_types)
  return _internal_ignored_types();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* JavaHprofConfig::mutable_ignored_types() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.JavaHprofConfig.ignored_types)
  return _internal_mutable_ignored_types();
}
inline const std::string& JavaHprofConfig::_internal_ignored_types(int index) const {
  return _internal_ignored_types().Get(index);
}
inline std::string* JavaHprofConfig::_internal_add_ignored_types() {
  return _internal_mutable_ignored_types()->Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
JavaHprofConfig::_internal_ignored_types() const {
  return _impl_.ignored_types_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
JavaHprofConfig::_internal_mutable_ignored_types() {
  return &_impl_.ignored_types_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto_2epb_2eh
