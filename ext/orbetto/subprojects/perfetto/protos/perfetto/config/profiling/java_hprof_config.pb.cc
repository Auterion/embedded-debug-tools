// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/config/profiling/java_hprof_config.proto

#include "protos/perfetto/config/profiling/java_hprof_config.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace perfetto {
namespace protos {
template <typename>
PROTOBUF_CONSTEXPR JavaHprofConfig_ContinuousDumpConfig::JavaHprofConfig_ContinuousDumpConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.dump_phase_ms_)*/ 0u

  , /*decltype(_impl_.dump_interval_ms_)*/ 0u

  , /*decltype(_impl_.scan_pids_only_on_start_)*/ false
} {}
struct JavaHprofConfig_ContinuousDumpConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JavaHprofConfig_ContinuousDumpConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JavaHprofConfig_ContinuousDumpConfigDefaultTypeInternal() {}
  union {
    JavaHprofConfig_ContinuousDumpConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JavaHprofConfig_ContinuousDumpConfigDefaultTypeInternal _JavaHprofConfig_ContinuousDumpConfig_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR JavaHprofConfig::JavaHprofConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.process_cmdline_)*/{}
  , /*decltype(_impl_.pid_)*/ {}

  , /*decltype(_impl_.ignored_types_)*/{}
  , /*decltype(_impl_.target_installed_by_)*/{}
  , /*decltype(_impl_.continuous_dump_config_)*/nullptr
  , /*decltype(_impl_.min_anonymous_memory_kb_)*/ 0u

  , /*decltype(_impl_.dump_smaps_)*/ false
} {}
struct JavaHprofConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JavaHprofConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JavaHprofConfigDefaultTypeInternal() {}
  union {
    JavaHprofConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JavaHprofConfigDefaultTypeInternal _JavaHprofConfig_default_instance_;
}  // namespace protos
}  // namespace perfetto
static ::_pb::Metadata file_level_metadata_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto = nullptr;
const ::uint32_t TableStruct_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig, _impl_.dump_phase_ms_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig, _impl_.dump_interval_ms_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig, _impl_.scan_pids_only_on_start_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::JavaHprofConfig, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::JavaHprofConfig, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::JavaHprofConfig, _impl_.process_cmdline_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::JavaHprofConfig, _impl_.pid_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::JavaHprofConfig, _impl_.target_installed_by_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::JavaHprofConfig, _impl_.continuous_dump_config_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::JavaHprofConfig, _impl_.min_anonymous_memory_kb_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::JavaHprofConfig, _impl_.dump_smaps_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::JavaHprofConfig, _impl_.ignored_types_),
    ~0u,
    ~0u,
    ~0u,
    0,
    1,
    2,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, 11, -1, sizeof(::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig)},
        { 14, 29, -1, sizeof(::perfetto::protos::JavaHprofConfig)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::perfetto::protos::_JavaHprofConfig_ContinuousDumpConfig_default_instance_._instance,
    &::perfetto::protos::_JavaHprofConfig_default_instance_._instance,
};
const char descriptor_table_protodef_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n8protos/perfetto/config/profiling/java_"
    "hprof_config.proto\022\017perfetto.protos\"\341\002\n\017"
    "JavaHprofConfig\022\027\n\017process_cmdline\030\001 \003(\t"
    "\022\013\n\003pid\030\002 \003(\004\022\033\n\023target_installed_by\030\007 \003"
    "(\t\022U\n\026continuous_dump_config\030\003 \001(\01325.per"
    "fetto.protos.JavaHprofConfig.ContinuousD"
    "umpConfig\022\037\n\027min_anonymous_memory_kb\030\004 \001"
    "(\r\022\022\n\ndump_smaps\030\005 \001(\010\022\025\n\rignored_types\030"
    "\006 \003(\t\032h\n\024ContinuousDumpConfig\022\025\n\rdump_ph"
    "ase_ms\030\001 \001(\r\022\030\n\020dump_interval_ms\030\002 \001(\r\022\037"
    "\n\027scan_pids_only_on_start\030\003 \001(\010"
};
static ::absl::once_flag descriptor_table_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto = {
    false,
    false,
    431,
    descriptor_table_protodef_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto,
    "protos/perfetto/config/profiling/java_hprof_config.proto",
    &descriptor_table_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto::offsets,
    file_level_metadata_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto,
    file_level_enum_descriptors_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto,
    file_level_service_descriptors_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto_getter() {
  return &descriptor_table_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto(&descriptor_table_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto);
namespace perfetto {
namespace protos {
// ===================================================================

class JavaHprofConfig_ContinuousDumpConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<JavaHprofConfig_ContinuousDumpConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(JavaHprofConfig_ContinuousDumpConfig, _impl_._has_bits_);
  static void set_has_dump_phase_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_dump_interval_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_scan_pids_only_on_start(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

JavaHprofConfig_ContinuousDumpConfig::JavaHprofConfig_ContinuousDumpConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig)
}
JavaHprofConfig_ContinuousDumpConfig::JavaHprofConfig_ContinuousDumpConfig(const JavaHprofConfig_ContinuousDumpConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig)
}

inline void JavaHprofConfig_ContinuousDumpConfig::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.dump_phase_ms_) { 0u }

    , decltype(_impl_.dump_interval_ms_) { 0u }

    , decltype(_impl_.scan_pids_only_on_start_) { false }

  };
}

JavaHprofConfig_ContinuousDumpConfig::~JavaHprofConfig_ContinuousDumpConfig() {
  // @@protoc_insertion_point(destructor:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JavaHprofConfig_ContinuousDumpConfig::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void JavaHprofConfig_ContinuousDumpConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JavaHprofConfig_ContinuousDumpConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.dump_phase_ms_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.scan_pids_only_on_start_) -
        reinterpret_cast<char*>(&_impl_.dump_phase_ms_)) + sizeof(_impl_.scan_pids_only_on_start_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JavaHprofConfig_ContinuousDumpConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 dump_phase_ms = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _Internal::set_has_dump_phase_ms(&has_bits);
          _impl_.dump_phase_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional uint32 dump_interval_ms = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _Internal::set_has_dump_interval_ms(&has_bits);
          _impl_.dump_interval_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional bool scan_pids_only_on_start = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _Internal::set_has_scan_pids_only_on_start(&has_bits);
          _impl_.scan_pids_only_on_start_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* JavaHprofConfig_ContinuousDumpConfig::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 dump_phase_ms = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_dump_phase_ms(), target);
  }

  // optional uint32 dump_interval_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_dump_interval_ms(), target);
  }

  // optional bool scan_pids_only_on_start = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_scan_pids_only_on_start(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig)
  return target;
}

::size_t JavaHprofConfig_ContinuousDumpConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 dump_phase_ms = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_dump_phase_ms());
    }

    // optional uint32 dump_interval_ms = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_dump_interval_ms());
    }

    // optional bool scan_pids_only_on_start = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JavaHprofConfig_ContinuousDumpConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JavaHprofConfig_ContinuousDumpConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JavaHprofConfig_ContinuousDumpConfig::GetClassData() const { return &_class_data_; }


void JavaHprofConfig_ContinuousDumpConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JavaHprofConfig_ContinuousDumpConfig*>(&to_msg);
  auto& from = static_cast<const JavaHprofConfig_ContinuousDumpConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.dump_phase_ms_ = from._impl_.dump_phase_ms_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.dump_interval_ms_ = from._impl_.dump_interval_ms_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.scan_pids_only_on_start_ = from._impl_.scan_pids_only_on_start_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JavaHprofConfig_ContinuousDumpConfig::CopyFrom(const JavaHprofConfig_ContinuousDumpConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.JavaHprofConfig.ContinuousDumpConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JavaHprofConfig_ContinuousDumpConfig::IsInitialized() const {
  return true;
}

void JavaHprofConfig_ContinuousDumpConfig::InternalSwap(JavaHprofConfig_ContinuousDumpConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JavaHprofConfig_ContinuousDumpConfig, _impl_.scan_pids_only_on_start_)
      + sizeof(JavaHprofConfig_ContinuousDumpConfig::_impl_.scan_pids_only_on_start_)
      - PROTOBUF_FIELD_OFFSET(JavaHprofConfig_ContinuousDumpConfig, _impl_.dump_phase_ms_)>(
          reinterpret_cast<char*>(&_impl_.dump_phase_ms_),
          reinterpret_cast<char*>(&other->_impl_.dump_phase_ms_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JavaHprofConfig_ContinuousDumpConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto_getter, &descriptor_table_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto_once,
      file_level_metadata_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto[0]);
}
// ===================================================================

class JavaHprofConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<JavaHprofConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(JavaHprofConfig, _impl_._has_bits_);
  static const ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig& continuous_dump_config(const JavaHprofConfig* msg);
  static void set_has_continuous_dump_config(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_min_anonymous_memory_kb(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_dump_smaps(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig&
JavaHprofConfig::_Internal::continuous_dump_config(const JavaHprofConfig* msg) {
  return *msg->_impl_.continuous_dump_config_;
}
JavaHprofConfig::JavaHprofConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.JavaHprofConfig)
}
JavaHprofConfig::JavaHprofConfig(const JavaHprofConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  JavaHprofConfig* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.process_cmdline_){from._impl_.process_cmdline_}
    , decltype(_impl_.pid_) { from._impl_.pid_ }

    , decltype(_impl_.ignored_types_){from._impl_.ignored_types_}
    , decltype(_impl_.target_installed_by_){from._impl_.target_installed_by_}
    , decltype(_impl_.continuous_dump_config_){nullptr}
    , decltype(_impl_.min_anonymous_memory_kb_) {}

    , decltype(_impl_.dump_smaps_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.continuous_dump_config_ = new ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig(*from._impl_.continuous_dump_config_);
  }
  ::memcpy(&_impl_.min_anonymous_memory_kb_, &from._impl_.min_anonymous_memory_kb_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.dump_smaps_) -
    reinterpret_cast<char*>(&_impl_.min_anonymous_memory_kb_)) + sizeof(_impl_.dump_smaps_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.JavaHprofConfig)
}

inline void JavaHprofConfig::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.process_cmdline_){arena}
    , decltype(_impl_.pid_) { arena }

    , decltype(_impl_.ignored_types_){arena}
    , decltype(_impl_.target_installed_by_){arena}
    , decltype(_impl_.continuous_dump_config_){nullptr}
    , decltype(_impl_.min_anonymous_memory_kb_) { 0u }

    , decltype(_impl_.dump_smaps_) { false }

  };
}

JavaHprofConfig::~JavaHprofConfig() {
  // @@protoc_insertion_point(destructor:perfetto.protos.JavaHprofConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JavaHprofConfig::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_process_cmdline()->~RepeatedPtrField();
  _impl_.pid_.~RepeatedField();
  _internal_mutable_ignored_types()->~RepeatedPtrField();
  _internal_mutable_target_installed_by()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.continuous_dump_config_;
}

void JavaHprofConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JavaHprofConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.JavaHprofConfig)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_process_cmdline()->Clear();
  _internal_mutable_pid()->Clear();
  _internal_mutable_ignored_types()->Clear();
  _internal_mutable_target_installed_by()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.continuous_dump_config_ != nullptr);
    _impl_.continuous_dump_config_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.min_anonymous_memory_kb_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.dump_smaps_) -
        reinterpret_cast<char*>(&_impl_.min_anonymous_memory_kb_)) + sizeof(_impl_.dump_smaps_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JavaHprofConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string process_cmdline = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_process_cmdline();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            #ifndef NDEBUG
            ::_pbi::VerifyUTF8(str, "perfetto.protos.JavaHprofConfig.process_cmdline");
            #endif  // !NDEBUG
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated uint64 pid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_pid(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<16>(ptr));
        } else if (static_cast<::uint8_t>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_pid(), ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.JavaHprofConfig.ContinuousDumpConfig continuous_dump_config = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_continuous_dump_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional uint32 min_anonymous_memory_kb = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 32)) {
          _Internal::set_has_min_anonymous_memory_kb(&has_bits);
          _impl_.min_anonymous_memory_kb_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional bool dump_smaps = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 40)) {
          _Internal::set_has_dump_smaps(&has_bits);
          _impl_.dump_smaps_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated string ignored_types = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_ignored_types();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            #ifndef NDEBUG
            ::_pbi::VerifyUTF8(str, "perfetto.protos.JavaHprofConfig.ignored_types");
            #endif  // !NDEBUG
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated string target_installed_by = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_target_installed_by();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            #ifndef NDEBUG
            ::_pbi::VerifyUTF8(str, "perfetto.protos.JavaHprofConfig.target_installed_by");
            #endif  // !NDEBUG
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* JavaHprofConfig::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.JavaHprofConfig)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string process_cmdline = 1;
  for (int i = 0, n = this->_internal_process_cmdline_size(); i < n; ++i) {
    const auto& s = this->_internal_process_cmdline(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
                                "perfetto.protos.JavaHprofConfig.process_cmdline");
    target = stream->WriteString(1, s, target);
  }

  // repeated uint64 pid = 2;
  for (int i = 0, n = this->_internal_pid_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_pid(i), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .perfetto.protos.JavaHprofConfig.ContinuousDumpConfig continuous_dump_config = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::continuous_dump_config(this),
        _Internal::continuous_dump_config(this).GetCachedSize(), target, stream);
  }

  // optional uint32 min_anonymous_memory_kb = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_min_anonymous_memory_kb(), target);
  }

  // optional bool dump_smaps = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_dump_smaps(), target);
  }

  // repeated string ignored_types = 6;
  for (int i = 0, n = this->_internal_ignored_types_size(); i < n; ++i) {
    const auto& s = this->_internal_ignored_types(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
                                "perfetto.protos.JavaHprofConfig.ignored_types");
    target = stream->WriteString(6, s, target);
  }

  // repeated string target_installed_by = 7;
  for (int i = 0, n = this->_internal_target_installed_by_size(); i < n; ++i) {
    const auto& s = this->_internal_target_installed_by(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
                                "perfetto.protos.JavaHprofConfig.target_installed_by");
    target = stream->WriteString(7, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.JavaHprofConfig)
  return target;
}

::size_t JavaHprofConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.JavaHprofConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string process_cmdline = 1;
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_process_cmdline().size());
  for (int i = 0, n = _internal_process_cmdline().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_process_cmdline().Get(i));
  }

  // repeated uint64 pid = 2;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
        this->_internal_pid())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_pid_size());
    ;
    total_size += tag_size + data_size;
  }

  // repeated string ignored_types = 6;
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_ignored_types().size());
  for (int i = 0, n = _internal_ignored_types().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_ignored_types().Get(i));
  }

  // repeated string target_installed_by = 7;
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_target_installed_by().size());
  for (int i = 0, n = _internal_target_installed_by().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_target_installed_by().Get(i));
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .perfetto.protos.JavaHprofConfig.ContinuousDumpConfig continuous_dump_config = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.continuous_dump_config_);
    }

    // optional uint32 min_anonymous_memory_kb = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_min_anonymous_memory_kb());
    }

    // optional bool dump_smaps = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JavaHprofConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JavaHprofConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JavaHprofConfig::GetClassData() const { return &_class_data_; }


void JavaHprofConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JavaHprofConfig*>(&to_msg);
  auto& from = static_cast<const JavaHprofConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.JavaHprofConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_process_cmdline()->MergeFrom(from._internal_process_cmdline());
  _this->_impl_.pid_.MergeFrom(from._impl_.pid_);
  _this->_internal_mutable_ignored_types()->MergeFrom(from._internal_ignored_types());
  _this->_internal_mutable_target_installed_by()->MergeFrom(from._internal_target_installed_by());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_continuous_dump_config()->::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig::MergeFrom(
          from._internal_continuous_dump_config());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.min_anonymous_memory_kb_ = from._impl_.min_anonymous_memory_kb_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.dump_smaps_ = from._impl_.dump_smaps_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JavaHprofConfig::CopyFrom(const JavaHprofConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.JavaHprofConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JavaHprofConfig::IsInitialized() const {
  return true;
}

void JavaHprofConfig::InternalSwap(JavaHprofConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_process_cmdline()->InternalSwap(
      other->_internal_mutable_process_cmdline());
  _impl_.pid_.InternalSwap(&other->_impl_.pid_);
  _internal_mutable_ignored_types()->InternalSwap(
      other->_internal_mutable_ignored_types());
  _internal_mutable_target_installed_by()->InternalSwap(
      other->_internal_mutable_target_installed_by());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JavaHprofConfig, _impl_.dump_smaps_)
      + sizeof(JavaHprofConfig::_impl_.dump_smaps_)
      - PROTOBUF_FIELD_OFFSET(JavaHprofConfig, _impl_.continuous_dump_config_)>(
          reinterpret_cast<char*>(&_impl_.continuous_dump_config_),
          reinterpret_cast<char*>(&other->_impl_.continuous_dump_config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JavaHprofConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto_getter, &descriptor_table_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto_once,
      file_level_metadata_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig*
Arena::CreateMaybeMessage< ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::JavaHprofConfig_ContinuousDumpConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::perfetto::protos::JavaHprofConfig*
Arena::CreateMaybeMessage< ::perfetto::protos::JavaHprofConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::JavaHprofConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
