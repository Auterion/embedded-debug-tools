// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/config/data_source_config.proto

#include "protos/perfetto/config/data_source_config.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace perfetto {
namespace protos {
template <typename>
PROTOBUF_CONSTEXPR DataSourceConfig::DataSourceConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.legacy_config_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.ftrace_config_)*/nullptr
  , /*decltype(_impl_.chrome_config_)*/nullptr
  , /*decltype(_impl_.inode_file_config_)*/nullptr
  , /*decltype(_impl_.process_stats_config_)*/nullptr
  , /*decltype(_impl_.sys_stats_config_)*/nullptr
  , /*decltype(_impl_.heapprofd_config_)*/nullptr
  , /*decltype(_impl_.android_power_config_)*/nullptr
  , /*decltype(_impl_.android_log_config_)*/nullptr
  , /*decltype(_impl_.gpu_counter_config_)*/nullptr
  , /*decltype(_impl_.packages_list_config_)*/nullptr
  , /*decltype(_impl_.java_hprof_config_)*/nullptr
  , /*decltype(_impl_.perf_event_config_)*/nullptr
  , /*decltype(_impl_.vulkan_memory_config_)*/nullptr
  , /*decltype(_impl_.track_event_config_)*/nullptr
  , /*decltype(_impl_.android_polled_state_config_)*/nullptr
  , /*decltype(_impl_.interceptor_config_)*/nullptr
  , /*decltype(_impl_.android_game_intervention_list_config_)*/nullptr
  , /*decltype(_impl_.statsd_tracing_config_)*/nullptr
  , /*decltype(_impl_.android_system_property_config_)*/nullptr
  , /*decltype(_impl_.system_info_config_)*/nullptr
  , /*decltype(_impl_.network_packet_trace_config_)*/nullptr
  , /*decltype(_impl_.for_testing_)*/nullptr
  , /*decltype(_impl_.target_buffer_)*/ 0u

  , /*decltype(_impl_.trace_duration_ms_)*/ 0u

  , /*decltype(_impl_.tracing_session_id_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.stop_timeout_ms_)*/ 0u

  , /*decltype(_impl_.session_initiator_)*/ 0

  , /*decltype(_impl_.prefer_suspend_clock_for_duration_)*/ false

  , /*decltype(_impl_.enable_extra_guardrails_)*/ false
} {}
struct DataSourceConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataSourceConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataSourceConfigDefaultTypeInternal() {}
  union {
    DataSourceConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataSourceConfigDefaultTypeInternal _DataSourceConfig_default_instance_;
}  // namespace protos
}  // namespace perfetto
static ::_pb::Metadata file_level_metadata_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto[1];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto = nullptr;
const ::uint32_t TableStruct_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.target_buffer_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.trace_duration_ms_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.prefer_suspend_clock_for_duration_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.stop_timeout_ms_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.enable_extra_guardrails_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.session_initiator_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.tracing_session_id_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.ftrace_config_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.inode_file_config_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.process_stats_config_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.sys_stats_config_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.heapprofd_config_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.java_hprof_config_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.android_power_config_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.android_log_config_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.gpu_counter_config_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.android_game_intervention_list_config_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.packages_list_config_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.perf_event_config_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.vulkan_memory_config_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.track_event_config_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.android_polled_state_config_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.android_system_property_config_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.statsd_tracing_config_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.system_info_config_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.chrome_config_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.interceptor_config_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.network_packet_trace_config_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.legacy_config_),
    PROTOBUF_FIELD_OFFSET(::perfetto::protos::DataSourceConfig, _impl_.for_testing_),
    0,
    24,
    25,
    29,
    27,
    30,
    28,
    26,
    2,
    4,
    5,
    6,
    7,
    12,
    8,
    9,
    10,
    18,
    11,
    13,
    14,
    15,
    16,
    20,
    19,
    21,
    3,
    17,
    22,
    1,
    23,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, 39, -1, sizeof(::perfetto::protos::DataSourceConfig)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::perfetto::protos::_DataSourceConfig_default_instance_._instance,
};
const char descriptor_table_protodef_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n/protos/perfetto/config/data_source_con"
    "fig.proto\022\017perfetto.protos\032Jprotos/perfe"
    "tto/config/android/android_game_interven"
    "tion_list_config.proto\0327protos/perfetto/"
    "config/android/android_log_config.proto\032"
    "@protos/perfetto/config/android/android_"
    "polled_state_config.proto\032Cprotos/perfet"
    "to/config/android/android_system_propert"
    "y_config.proto\0329protos/perfetto/config/a"
    "ndroid/network_trace_config.proto\0329proto"
    "s/perfetto/config/android/packages_list_"
    "config.proto\0321protos/perfetto/config/chr"
    "ome/chrome_config.proto\0321protos/perfetto"
    "/config/ftrace/ftrace_config.proto\0323prot"
    "os/perfetto/config/gpu/gpu_counter_confi"
    "g.proto\0325protos/perfetto/config/gpu/vulk"
    "an_memory_config.proto\0329protos/perfetto/"
    "config/inode_file/inode_file_config.prot"
    "o\032/protos/perfetto/config/interceptor_co"
    "nfig.proto\0327protos/perfetto/config/power"
    "/android_power_config.proto\0329protos/perf"
    "etto/config/statsd/statsd_tracing_config"
    ".proto\032\?protos/perfetto/config/process_s"
    "tats/process_stats_config.proto\0327protos/"
    "perfetto/config/profiling/heapprofd_conf"
    "ig.proto\0328protos/perfetto/config/profili"
    "ng/java_hprof_config.proto\0328protos/perfe"
    "tto/config/profiling/perf_event_config.p"
    "roto\0327protos/perfetto/config/sys_stats/s"
    "ys_stats_config.proto\032(protos/perfetto/c"
    "onfig/test_config.proto\032;protos/perfetto"
    "/config/track_event/track_event_config.p"
    "roto\0324protos/perfetto/config/system_info"
    "/system_info.proto\"\237\017\n\020DataSourceConfig\022"
    "\014\n\004name\030\001 \001(\t\022\025\n\rtarget_buffer\030\002 \001(\r\022\031\n\021"
    "trace_duration_ms\030\003 \001(\r\022)\n!prefer_suspen"
    "d_clock_for_duration\030z \001(\010\022\027\n\017stop_timeo"
    "ut_ms\030\007 \001(\r\022\037\n\027enable_extra_guardrails\030\006"
    " \001(\010\022M\n\021session_initiator\030\010 \001(\01622.perfet"
    "to.protos.DataSourceConfig.SessionInitia"
    "tor\022\032\n\022tracing_session_id\030\004 \001(\004\0228\n\rftrac"
    "e_config\030d \001(\0132\035.perfetto.protos.FtraceC"
    "onfigB\002(\001\022\?\n\021inode_file_config\030f \001(\0132 .p"
    "erfetto.protos.InodeFileConfigB\002(\001\022E\n\024pr"
    "ocess_stats_config\030g \001(\0132#.perfetto.prot"
    "os.ProcessStatsConfigB\002(\001\022=\n\020sys_stats_c"
    "onfig\030h \001(\0132\037.perfetto.protos.SysStatsCo"
    "nfigB\002(\001\022>\n\020heapprofd_config\030i \001(\0132 .per"
    "fetto.protos.HeapprofdConfigB\002(\001\022\?\n\021java"
    "_hprof_config\030n \001(\0132 .perfetto.protos.Ja"
    "vaHprofConfigB\002(\001\022E\n\024android_power_confi"
    "g\030j \001(\0132#.perfetto.protos.AndroidPowerCo"
    "nfigB\002(\001\022A\n\022android_log_config\030k \001(\0132!.p"
    "erfetto.protos.AndroidLogConfigB\002(\001\022A\n\022g"
    "pu_counter_config\030l \001(\0132!.perfetto.proto"
    "s.GpuCounterConfigB\002(\001\022e\n%android_game_i"
    "ntervention_list_config\030t \001(\01322.perfetto"
    ".protos.AndroidGameInterventionListConfi"
    "gB\002(\001\022E\n\024packages_list_config\030m \001(\0132#.pe"
    "rfetto.protos.PackagesListConfigB\002(\001\022\?\n\021"
    "perf_event_config\030o \001(\0132 .perfetto.proto"
    "s.PerfEventConfigB\002(\001\022E\n\024vulkan_memory_c"
    "onfig\030p \001(\0132#.perfetto.protos.VulkanMemo"
    "ryConfigB\002(\001\022A\n\022track_event_config\030q \001(\013"
    "2!.perfetto.protos.TrackEventConfigB\002(\001\022"
    "R\n\033android_polled_state_config\030r \001(\0132).p"
    "erfetto.protos.AndroidPolledStateConfigB"
    "\002(\001\022X\n\036android_system_property_config\030v "
    "\001(\0132,.perfetto.protos.AndroidSystemPrope"
    "rtyConfigB\002(\001\022G\n\025statsd_tracing_config\030u"
    " \001(\0132$.perfetto.protos.StatsdTracingConf"
    "igB\002(\001\022=\n\022system_info_config\030w \001(\0132!.per"
    "fetto.protos.SystemInfoConfig\0224\n\rchrome_"
    "config\030e \001(\0132\035.perfetto.protos.ChromeCon"
    "fig\022>\n\022interceptor_config\030s \001(\0132\".perfet"
    "to.protos.InterceptorConfig\022R\n\033network_p"
    "acket_trace_config\030x \001(\0132).perfetto.prot"
    "os.NetworkPacketTraceConfigB\002(\001\022\026\n\rlegac"
    "y_config\030\350\007 \001(\t\0221\n\013for_testing\030\351\007 \001(\0132\033."
    "perfetto.protos.TestConfig\"[\n\020SessionIni"
    "tiator\022!\n\035SESSION_INITIATOR_UNSPECIFIED\020"
    "\000\022$\n SESSION_INITIATOR_TRUSTED_SYSTEM\020\001J"
    "\013\010\377\377\377\177\020\200\200\200\200\001"
};
static const ::_pbi::DescriptorTable* const descriptor_table_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto_deps[22] =
    {
        &::descriptor_table_protos_2fperfetto_2fconfig_2fandroid_2fandroid_5fgame_5fintervention_5flist_5fconfig_2eproto,
        &::descriptor_table_protos_2fperfetto_2fconfig_2fandroid_2fandroid_5flog_5fconfig_2eproto,
        &::descriptor_table_protos_2fperfetto_2fconfig_2fandroid_2fandroid_5fpolled_5fstate_5fconfig_2eproto,
        &::descriptor_table_protos_2fperfetto_2fconfig_2fandroid_2fandroid_5fsystem_5fproperty_5fconfig_2eproto,
        &::descriptor_table_protos_2fperfetto_2fconfig_2fandroid_2fnetwork_5ftrace_5fconfig_2eproto,
        &::descriptor_table_protos_2fperfetto_2fconfig_2fandroid_2fpackages_5flist_5fconfig_2eproto,
        &::descriptor_table_protos_2fperfetto_2fconfig_2fchrome_2fchrome_5fconfig_2eproto,
        &::descriptor_table_protos_2fperfetto_2fconfig_2fftrace_2fftrace_5fconfig_2eproto,
        &::descriptor_table_protos_2fperfetto_2fconfig_2fgpu_2fgpu_5fcounter_5fconfig_2eproto,
        &::descriptor_table_protos_2fperfetto_2fconfig_2fgpu_2fvulkan_5fmemory_5fconfig_2eproto,
        &::descriptor_table_protos_2fperfetto_2fconfig_2finode_5ffile_2finode_5ffile_5fconfig_2eproto,
        &::descriptor_table_protos_2fperfetto_2fconfig_2finterceptor_5fconfig_2eproto,
        &::descriptor_table_protos_2fperfetto_2fconfig_2fpower_2fandroid_5fpower_5fconfig_2eproto,
        &::descriptor_table_protos_2fperfetto_2fconfig_2fprocess_5fstats_2fprocess_5fstats_5fconfig_2eproto,
        &::descriptor_table_protos_2fperfetto_2fconfig_2fprofiling_2fheapprofd_5fconfig_2eproto,
        &::descriptor_table_protos_2fperfetto_2fconfig_2fprofiling_2fjava_5fhprof_5fconfig_2eproto,
        &::descriptor_table_protos_2fperfetto_2fconfig_2fprofiling_2fperf_5fevent_5fconfig_2eproto,
        &::descriptor_table_protos_2fperfetto_2fconfig_2fstatsd_2fstatsd_5ftracing_5fconfig_2eproto,
        &::descriptor_table_protos_2fperfetto_2fconfig_2fsys_5fstats_2fsys_5fstats_5fconfig_2eproto,
        &::descriptor_table_protos_2fperfetto_2fconfig_2fsystem_5finfo_2fsystem_5finfo_2eproto,
        &::descriptor_table_protos_2fperfetto_2fconfig_2ftest_5fconfig_2eproto,
        &::descriptor_table_protos_2fperfetto_2fconfig_2ftrack_5fevent_2ftrack_5fevent_5fconfig_2eproto,
};
static ::absl::once_flag descriptor_table_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto = {
    false,
    false,
    3292,
    descriptor_table_protodef_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto,
    "protos/perfetto/config/data_source_config.proto",
    &descriptor_table_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto_once,
    descriptor_table_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto_deps,
    22,
    1,
    schemas,
    file_default_instances,
    TableStruct_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto::offsets,
    file_level_metadata_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto,
    file_level_enum_descriptors_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto,
    file_level_service_descriptors_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto_getter() {
  return &descriptor_table_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto(&descriptor_table_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto);
namespace perfetto {
namespace protos {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DataSourceConfig_SessionInitiator_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto);
  return file_level_enum_descriptors_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto[0];
}
bool DataSourceConfig_SessionInitiator_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr DataSourceConfig_SessionInitiator DataSourceConfig::SESSION_INITIATOR_UNSPECIFIED;
constexpr DataSourceConfig_SessionInitiator DataSourceConfig::SESSION_INITIATOR_TRUSTED_SYSTEM;
constexpr DataSourceConfig_SessionInitiator DataSourceConfig::SessionInitiator_MIN;
constexpr DataSourceConfig_SessionInitiator DataSourceConfig::SessionInitiator_MAX;
constexpr int DataSourceConfig::SessionInitiator_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class DataSourceConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<DataSourceConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DataSourceConfig, _impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_target_buffer(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_trace_duration_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_prefer_suspend_clock_for_duration(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static void set_has_stop_timeout_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static void set_has_enable_extra_guardrails(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static void set_has_session_initiator(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static void set_has_tracing_session_id(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static const ::perfetto::protos::FtraceConfig& ftrace_config(const DataSourceConfig* msg);
  static void set_has_ftrace_config(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::perfetto::protos::InodeFileConfig& inode_file_config(const DataSourceConfig* msg);
  static void set_has_inode_file_config(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::perfetto::protos::ProcessStatsConfig& process_stats_config(const DataSourceConfig* msg);
  static void set_has_process_stats_config(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::perfetto::protos::SysStatsConfig& sys_stats_config(const DataSourceConfig* msg);
  static void set_has_sys_stats_config(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::perfetto::protos::HeapprofdConfig& heapprofd_config(const DataSourceConfig* msg);
  static void set_has_heapprofd_config(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::perfetto::protos::JavaHprofConfig& java_hprof_config(const DataSourceConfig* msg);
  static void set_has_java_hprof_config(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::perfetto::protos::AndroidPowerConfig& android_power_config(const DataSourceConfig* msg);
  static void set_has_android_power_config(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::perfetto::protos::AndroidLogConfig& android_log_config(const DataSourceConfig* msg);
  static void set_has_android_log_config(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::perfetto::protos::GpuCounterConfig& gpu_counter_config(const DataSourceConfig* msg);
  static void set_has_gpu_counter_config(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::perfetto::protos::AndroidGameInterventionListConfig& android_game_intervention_list_config(const DataSourceConfig* msg);
  static void set_has_android_game_intervention_list_config(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static const ::perfetto::protos::PackagesListConfig& packages_list_config(const DataSourceConfig* msg);
  static void set_has_packages_list_config(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static const ::perfetto::protos::PerfEventConfig& perf_event_config(const DataSourceConfig* msg);
  static void set_has_perf_event_config(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static const ::perfetto::protos::VulkanMemoryConfig& vulkan_memory_config(const DataSourceConfig* msg);
  static void set_has_vulkan_memory_config(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static const ::perfetto::protos::TrackEventConfig& track_event_config(const DataSourceConfig* msg);
  static void set_has_track_event_config(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static const ::perfetto::protos::AndroidPolledStateConfig& android_polled_state_config(const DataSourceConfig* msg);
  static void set_has_android_polled_state_config(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static const ::perfetto::protos::AndroidSystemPropertyConfig& android_system_property_config(const DataSourceConfig* msg);
  static void set_has_android_system_property_config(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static const ::perfetto::protos::StatsdTracingConfig& statsd_tracing_config(const DataSourceConfig* msg);
  static void set_has_statsd_tracing_config(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static const ::perfetto::protos::SystemInfoConfig& system_info_config(const DataSourceConfig* msg);
  static void set_has_system_info_config(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static const ::perfetto::protos::ChromeConfig& chrome_config(const DataSourceConfig* msg);
  static void set_has_chrome_config(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::perfetto::protos::InterceptorConfig& interceptor_config(const DataSourceConfig* msg);
  static void set_has_interceptor_config(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static const ::perfetto::protos::NetworkPacketTraceConfig& network_packet_trace_config(const DataSourceConfig* msg);
  static void set_has_network_packet_trace_config(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_legacy_config(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::perfetto::protos::TestConfig& for_testing(const DataSourceConfig* msg);
  static void set_has_for_testing(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
};

const ::perfetto::protos::FtraceConfig&
DataSourceConfig::_Internal::ftrace_config(const DataSourceConfig* msg) {
  return *msg->_impl_.ftrace_config_;
}
const ::perfetto::protos::InodeFileConfig&
DataSourceConfig::_Internal::inode_file_config(const DataSourceConfig* msg) {
  return *msg->_impl_.inode_file_config_;
}
const ::perfetto::protos::ProcessStatsConfig&
DataSourceConfig::_Internal::process_stats_config(const DataSourceConfig* msg) {
  return *msg->_impl_.process_stats_config_;
}
const ::perfetto::protos::SysStatsConfig&
DataSourceConfig::_Internal::sys_stats_config(const DataSourceConfig* msg) {
  return *msg->_impl_.sys_stats_config_;
}
const ::perfetto::protos::HeapprofdConfig&
DataSourceConfig::_Internal::heapprofd_config(const DataSourceConfig* msg) {
  return *msg->_impl_.heapprofd_config_;
}
const ::perfetto::protos::JavaHprofConfig&
DataSourceConfig::_Internal::java_hprof_config(const DataSourceConfig* msg) {
  return *msg->_impl_.java_hprof_config_;
}
const ::perfetto::protos::AndroidPowerConfig&
DataSourceConfig::_Internal::android_power_config(const DataSourceConfig* msg) {
  return *msg->_impl_.android_power_config_;
}
const ::perfetto::protos::AndroidLogConfig&
DataSourceConfig::_Internal::android_log_config(const DataSourceConfig* msg) {
  return *msg->_impl_.android_log_config_;
}
const ::perfetto::protos::GpuCounterConfig&
DataSourceConfig::_Internal::gpu_counter_config(const DataSourceConfig* msg) {
  return *msg->_impl_.gpu_counter_config_;
}
const ::perfetto::protos::AndroidGameInterventionListConfig&
DataSourceConfig::_Internal::android_game_intervention_list_config(const DataSourceConfig* msg) {
  return *msg->_impl_.android_game_intervention_list_config_;
}
const ::perfetto::protos::PackagesListConfig&
DataSourceConfig::_Internal::packages_list_config(const DataSourceConfig* msg) {
  return *msg->_impl_.packages_list_config_;
}
const ::perfetto::protos::PerfEventConfig&
DataSourceConfig::_Internal::perf_event_config(const DataSourceConfig* msg) {
  return *msg->_impl_.perf_event_config_;
}
const ::perfetto::protos::VulkanMemoryConfig&
DataSourceConfig::_Internal::vulkan_memory_config(const DataSourceConfig* msg) {
  return *msg->_impl_.vulkan_memory_config_;
}
const ::perfetto::protos::TrackEventConfig&
DataSourceConfig::_Internal::track_event_config(const DataSourceConfig* msg) {
  return *msg->_impl_.track_event_config_;
}
const ::perfetto::protos::AndroidPolledStateConfig&
DataSourceConfig::_Internal::android_polled_state_config(const DataSourceConfig* msg) {
  return *msg->_impl_.android_polled_state_config_;
}
const ::perfetto::protos::AndroidSystemPropertyConfig&
DataSourceConfig::_Internal::android_system_property_config(const DataSourceConfig* msg) {
  return *msg->_impl_.android_system_property_config_;
}
const ::perfetto::protos::StatsdTracingConfig&
DataSourceConfig::_Internal::statsd_tracing_config(const DataSourceConfig* msg) {
  return *msg->_impl_.statsd_tracing_config_;
}
const ::perfetto::protos::SystemInfoConfig&
DataSourceConfig::_Internal::system_info_config(const DataSourceConfig* msg) {
  return *msg->_impl_.system_info_config_;
}
const ::perfetto::protos::ChromeConfig&
DataSourceConfig::_Internal::chrome_config(const DataSourceConfig* msg) {
  return *msg->_impl_.chrome_config_;
}
const ::perfetto::protos::InterceptorConfig&
DataSourceConfig::_Internal::interceptor_config(const DataSourceConfig* msg) {
  return *msg->_impl_.interceptor_config_;
}
const ::perfetto::protos::NetworkPacketTraceConfig&
DataSourceConfig::_Internal::network_packet_trace_config(const DataSourceConfig* msg) {
  return *msg->_impl_.network_packet_trace_config_;
}
const ::perfetto::protos::TestConfig&
DataSourceConfig::_Internal::for_testing(const DataSourceConfig* msg) {
  return *msg->_impl_.for_testing_;
}
void DataSourceConfig::clear_ftrace_config() {
  if (_impl_.ftrace_config_ != nullptr) _impl_.ftrace_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void DataSourceConfig::clear_inode_file_config() {
  if (_impl_.inode_file_config_ != nullptr) _impl_.inode_file_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void DataSourceConfig::clear_process_stats_config() {
  if (_impl_.process_stats_config_ != nullptr) _impl_.process_stats_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void DataSourceConfig::clear_sys_stats_config() {
  if (_impl_.sys_stats_config_ != nullptr) _impl_.sys_stats_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void DataSourceConfig::clear_heapprofd_config() {
  if (_impl_.heapprofd_config_ != nullptr) _impl_.heapprofd_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void DataSourceConfig::clear_java_hprof_config() {
  if (_impl_.java_hprof_config_ != nullptr) _impl_.java_hprof_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
void DataSourceConfig::clear_android_power_config() {
  if (_impl_.android_power_config_ != nullptr) _impl_.android_power_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void DataSourceConfig::clear_android_log_config() {
  if (_impl_.android_log_config_ != nullptr) _impl_.android_log_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void DataSourceConfig::clear_gpu_counter_config() {
  if (_impl_.gpu_counter_config_ != nullptr) _impl_.gpu_counter_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
void DataSourceConfig::clear_android_game_intervention_list_config() {
  if (_impl_.android_game_intervention_list_config_ != nullptr) _impl_.android_game_intervention_list_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00040000u;
}
void DataSourceConfig::clear_packages_list_config() {
  if (_impl_.packages_list_config_ != nullptr) _impl_.packages_list_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
void DataSourceConfig::clear_perf_event_config() {
  if (_impl_.perf_event_config_ != nullptr) _impl_.perf_event_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00002000u;
}
void DataSourceConfig::clear_vulkan_memory_config() {
  if (_impl_.vulkan_memory_config_ != nullptr) _impl_.vulkan_memory_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00004000u;
}
void DataSourceConfig::clear_track_event_config() {
  if (_impl_.track_event_config_ != nullptr) _impl_.track_event_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00008000u;
}
void DataSourceConfig::clear_android_polled_state_config() {
  if (_impl_.android_polled_state_config_ != nullptr) _impl_.android_polled_state_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00010000u;
}
void DataSourceConfig::clear_android_system_property_config() {
  if (_impl_.android_system_property_config_ != nullptr) _impl_.android_system_property_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00100000u;
}
void DataSourceConfig::clear_statsd_tracing_config() {
  if (_impl_.statsd_tracing_config_ != nullptr) _impl_.statsd_tracing_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00080000u;
}
void DataSourceConfig::clear_system_info_config() {
  if (_impl_.system_info_config_ != nullptr) _impl_.system_info_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00200000u;
}
void DataSourceConfig::clear_chrome_config() {
  if (_impl_.chrome_config_ != nullptr) _impl_.chrome_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void DataSourceConfig::clear_interceptor_config() {
  if (_impl_.interceptor_config_ != nullptr) _impl_.interceptor_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00020000u;
}
void DataSourceConfig::clear_network_packet_trace_config() {
  if (_impl_.network_packet_trace_config_ != nullptr) _impl_.network_packet_trace_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00400000u;
}
void DataSourceConfig::clear_for_testing() {
  if (_impl_.for_testing_ != nullptr) _impl_.for_testing_->Clear();
  _impl_._has_bits_[0] &= ~0x00800000u;
}
DataSourceConfig::DataSourceConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.DataSourceConfig)
}
DataSourceConfig::DataSourceConfig(const DataSourceConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DataSourceConfig* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_) {}

    , decltype(_impl_.legacy_config_) {}

    , decltype(_impl_.ftrace_config_){nullptr}
    , decltype(_impl_.chrome_config_){nullptr}
    , decltype(_impl_.inode_file_config_){nullptr}
    , decltype(_impl_.process_stats_config_){nullptr}
    , decltype(_impl_.sys_stats_config_){nullptr}
    , decltype(_impl_.heapprofd_config_){nullptr}
    , decltype(_impl_.android_power_config_){nullptr}
    , decltype(_impl_.android_log_config_){nullptr}
    , decltype(_impl_.gpu_counter_config_){nullptr}
    , decltype(_impl_.packages_list_config_){nullptr}
    , decltype(_impl_.java_hprof_config_){nullptr}
    , decltype(_impl_.perf_event_config_){nullptr}
    , decltype(_impl_.vulkan_memory_config_){nullptr}
    , decltype(_impl_.track_event_config_){nullptr}
    , decltype(_impl_.android_polled_state_config_){nullptr}
    , decltype(_impl_.interceptor_config_){nullptr}
    , decltype(_impl_.android_game_intervention_list_config_){nullptr}
    , decltype(_impl_.statsd_tracing_config_){nullptr}
    , decltype(_impl_.android_system_property_config_){nullptr}
    , decltype(_impl_.system_info_config_){nullptr}
    , decltype(_impl_.network_packet_trace_config_){nullptr}
    , decltype(_impl_.for_testing_){nullptr}
    , decltype(_impl_.target_buffer_) {}

    , decltype(_impl_.trace_duration_ms_) {}

    , decltype(_impl_.tracing_session_id_) {}

    , decltype(_impl_.stop_timeout_ms_) {}

    , decltype(_impl_.session_initiator_) {}

    , decltype(_impl_.prefer_suspend_clock_for_duration_) {}

    , decltype(_impl_.enable_extra_guardrails_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.legacy_config_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.legacy_config_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.legacy_config_.Set(from._internal_legacy_config(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.ftrace_config_ = new ::perfetto::protos::FtraceConfig(*from._impl_.ftrace_config_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.chrome_config_ = new ::perfetto::protos::ChromeConfig(*from._impl_.chrome_config_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000010u) != 0) {
    _this->_impl_.inode_file_config_ = new ::perfetto::protos::InodeFileConfig(*from._impl_.inode_file_config_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000020u) != 0) {
    _this->_impl_.process_stats_config_ = new ::perfetto::protos::ProcessStatsConfig(*from._impl_.process_stats_config_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000040u) != 0) {
    _this->_impl_.sys_stats_config_ = new ::perfetto::protos::SysStatsConfig(*from._impl_.sys_stats_config_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000080u) != 0) {
    _this->_impl_.heapprofd_config_ = new ::perfetto::protos::HeapprofdConfig(*from._impl_.heapprofd_config_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000100u) != 0) {
    _this->_impl_.android_power_config_ = new ::perfetto::protos::AndroidPowerConfig(*from._impl_.android_power_config_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000200u) != 0) {
    _this->_impl_.android_log_config_ = new ::perfetto::protos::AndroidLogConfig(*from._impl_.android_log_config_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000400u) != 0) {
    _this->_impl_.gpu_counter_config_ = new ::perfetto::protos::GpuCounterConfig(*from._impl_.gpu_counter_config_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000800u) != 0) {
    _this->_impl_.packages_list_config_ = new ::perfetto::protos::PackagesListConfig(*from._impl_.packages_list_config_);
  }
  if ((from._impl_._has_bits_[0] & 0x00001000u) != 0) {
    _this->_impl_.java_hprof_config_ = new ::perfetto::protos::JavaHprofConfig(*from._impl_.java_hprof_config_);
  }
  if ((from._impl_._has_bits_[0] & 0x00002000u) != 0) {
    _this->_impl_.perf_event_config_ = new ::perfetto::protos::PerfEventConfig(*from._impl_.perf_event_config_);
  }
  if ((from._impl_._has_bits_[0] & 0x00004000u) != 0) {
    _this->_impl_.vulkan_memory_config_ = new ::perfetto::protos::VulkanMemoryConfig(*from._impl_.vulkan_memory_config_);
  }
  if ((from._impl_._has_bits_[0] & 0x00008000u) != 0) {
    _this->_impl_.track_event_config_ = new ::perfetto::protos::TrackEventConfig(*from._impl_.track_event_config_);
  }
  if ((from._impl_._has_bits_[0] & 0x00010000u) != 0) {
    _this->_impl_.android_polled_state_config_ = new ::perfetto::protos::AndroidPolledStateConfig(*from._impl_.android_polled_state_config_);
  }
  if ((from._impl_._has_bits_[0] & 0x00020000u) != 0) {
    _this->_impl_.interceptor_config_ = new ::perfetto::protos::InterceptorConfig(*from._impl_.interceptor_config_);
  }
  if ((from._impl_._has_bits_[0] & 0x00040000u) != 0) {
    _this->_impl_.android_game_intervention_list_config_ = new ::perfetto::protos::AndroidGameInterventionListConfig(*from._impl_.android_game_intervention_list_config_);
  }
  if ((from._impl_._has_bits_[0] & 0x00080000u) != 0) {
    _this->_impl_.statsd_tracing_config_ = new ::perfetto::protos::StatsdTracingConfig(*from._impl_.statsd_tracing_config_);
  }
  if ((from._impl_._has_bits_[0] & 0x00100000u) != 0) {
    _this->_impl_.android_system_property_config_ = new ::perfetto::protos::AndroidSystemPropertyConfig(*from._impl_.android_system_property_config_);
  }
  if ((from._impl_._has_bits_[0] & 0x00200000u) != 0) {
    _this->_impl_.system_info_config_ = new ::perfetto::protos::SystemInfoConfig(*from._impl_.system_info_config_);
  }
  if ((from._impl_._has_bits_[0] & 0x00400000u) != 0) {
    _this->_impl_.network_packet_trace_config_ = new ::perfetto::protos::NetworkPacketTraceConfig(*from._impl_.network_packet_trace_config_);
  }
  if ((from._impl_._has_bits_[0] & 0x00800000u) != 0) {
    _this->_impl_.for_testing_ = new ::perfetto::protos::TestConfig(*from._impl_.for_testing_);
  }
  ::memcpy(&_impl_.target_buffer_, &from._impl_.target_buffer_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.enable_extra_guardrails_) -
    reinterpret_cast<char*>(&_impl_.target_buffer_)) + sizeof(_impl_.enable_extra_guardrails_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.DataSourceConfig)
}

inline void DataSourceConfig::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_) {}

    , decltype(_impl_.legacy_config_) {}

    , decltype(_impl_.ftrace_config_){nullptr}
    , decltype(_impl_.chrome_config_){nullptr}
    , decltype(_impl_.inode_file_config_){nullptr}
    , decltype(_impl_.process_stats_config_){nullptr}
    , decltype(_impl_.sys_stats_config_){nullptr}
    , decltype(_impl_.heapprofd_config_){nullptr}
    , decltype(_impl_.android_power_config_){nullptr}
    , decltype(_impl_.android_log_config_){nullptr}
    , decltype(_impl_.gpu_counter_config_){nullptr}
    , decltype(_impl_.packages_list_config_){nullptr}
    , decltype(_impl_.java_hprof_config_){nullptr}
    , decltype(_impl_.perf_event_config_){nullptr}
    , decltype(_impl_.vulkan_memory_config_){nullptr}
    , decltype(_impl_.track_event_config_){nullptr}
    , decltype(_impl_.android_polled_state_config_){nullptr}
    , decltype(_impl_.interceptor_config_){nullptr}
    , decltype(_impl_.android_game_intervention_list_config_){nullptr}
    , decltype(_impl_.statsd_tracing_config_){nullptr}
    , decltype(_impl_.android_system_property_config_){nullptr}
    , decltype(_impl_.system_info_config_){nullptr}
    , decltype(_impl_.network_packet_trace_config_){nullptr}
    , decltype(_impl_.for_testing_){nullptr}
    , decltype(_impl_.target_buffer_) { 0u }

    , decltype(_impl_.trace_duration_ms_) { 0u }

    , decltype(_impl_.tracing_session_id_) { ::uint64_t{0u} }

    , decltype(_impl_.stop_timeout_ms_) { 0u }

    , decltype(_impl_.session_initiator_) { 0 }

    , decltype(_impl_.prefer_suspend_clock_for_duration_) { false }

    , decltype(_impl_.enable_extra_guardrails_) { false }

  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.legacy_config_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.legacy_config_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DataSourceConfig::~DataSourceConfig() {
  // @@protoc_insertion_point(destructor:perfetto.protos.DataSourceConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DataSourceConfig::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.legacy_config_.Destroy();
  if (this != internal_default_instance()) delete _impl_.ftrace_config_;
  if (this != internal_default_instance()) delete _impl_.chrome_config_;
  if (this != internal_default_instance()) delete _impl_.inode_file_config_;
  if (this != internal_default_instance()) delete _impl_.process_stats_config_;
  if (this != internal_default_instance()) delete _impl_.sys_stats_config_;
  if (this != internal_default_instance()) delete _impl_.heapprofd_config_;
  if (this != internal_default_instance()) delete _impl_.android_power_config_;
  if (this != internal_default_instance()) delete _impl_.android_log_config_;
  if (this != internal_default_instance()) delete _impl_.gpu_counter_config_;
  if (this != internal_default_instance()) delete _impl_.packages_list_config_;
  if (this != internal_default_instance()) delete _impl_.java_hprof_config_;
  if (this != internal_default_instance()) delete _impl_.perf_event_config_;
  if (this != internal_default_instance()) delete _impl_.vulkan_memory_config_;
  if (this != internal_default_instance()) delete _impl_.track_event_config_;
  if (this != internal_default_instance()) delete _impl_.android_polled_state_config_;
  if (this != internal_default_instance()) delete _impl_.interceptor_config_;
  if (this != internal_default_instance()) delete _impl_.android_game_intervention_list_config_;
  if (this != internal_default_instance()) delete _impl_.statsd_tracing_config_;
  if (this != internal_default_instance()) delete _impl_.android_system_property_config_;
  if (this != internal_default_instance()) delete _impl_.system_info_config_;
  if (this != internal_default_instance()) delete _impl_.network_packet_trace_config_;
  if (this != internal_default_instance()) delete _impl_.for_testing_;
}

void DataSourceConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DataSourceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.DataSourceConfig)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.legacy_config_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.ftrace_config_ != nullptr);
      _impl_.ftrace_config_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.chrome_config_ != nullptr);
      _impl_.chrome_config_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.inode_file_config_ != nullptr);
      _impl_.inode_file_config_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.process_stats_config_ != nullptr);
      _impl_.process_stats_config_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.sys_stats_config_ != nullptr);
      _impl_.sys_stats_config_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.heapprofd_config_ != nullptr);
      _impl_.heapprofd_config_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.android_power_config_ != nullptr);
      _impl_.android_power_config_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.android_log_config_ != nullptr);
      _impl_.android_log_config_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(_impl_.gpu_counter_config_ != nullptr);
      _impl_.gpu_counter_config_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(_impl_.packages_list_config_ != nullptr);
      _impl_.packages_list_config_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      ABSL_DCHECK(_impl_.java_hprof_config_ != nullptr);
      _impl_.java_hprof_config_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      ABSL_DCHECK(_impl_.perf_event_config_ != nullptr);
      _impl_.perf_event_config_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      ABSL_DCHECK(_impl_.vulkan_memory_config_ != nullptr);
      _impl_.vulkan_memory_config_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      ABSL_DCHECK(_impl_.track_event_config_ != nullptr);
      _impl_.track_event_config_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      ABSL_DCHECK(_impl_.android_polled_state_config_ != nullptr);
      _impl_.android_polled_state_config_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      ABSL_DCHECK(_impl_.interceptor_config_ != nullptr);
      _impl_.interceptor_config_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      ABSL_DCHECK(_impl_.android_game_intervention_list_config_ != nullptr);
      _impl_.android_game_intervention_list_config_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      ABSL_DCHECK(_impl_.statsd_tracing_config_ != nullptr);
      _impl_.statsd_tracing_config_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      ABSL_DCHECK(_impl_.android_system_property_config_ != nullptr);
      _impl_.android_system_property_config_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      ABSL_DCHECK(_impl_.system_info_config_ != nullptr);
      _impl_.system_info_config_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      ABSL_DCHECK(_impl_.network_packet_trace_config_ != nullptr);
      _impl_.network_packet_trace_config_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      ABSL_DCHECK(_impl_.for_testing_ != nullptr);
      _impl_.for_testing_->Clear();
    }
  }
  if (cached_has_bits & 0x7f000000u) {
    ::memset(&_impl_.target_buffer_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.enable_extra_guardrails_) -
        reinterpret_cast<char*>(&_impl_.target_buffer_)) + sizeof(_impl_.enable_extra_guardrails_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataSourceConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "perfetto.protos.DataSourceConfig.name");
          #endif  // !NDEBUG
        } else {
          goto handle_unusual;
        }
        continue;
      // optional uint32 target_buffer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _Internal::set_has_target_buffer(&has_bits);
          _impl_.target_buffer_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional uint32 trace_duration_ms = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _Internal::set_has_trace_duration_ms(&has_bits);
          _impl_.trace_duration_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional uint64 tracing_session_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 32)) {
          _Internal::set_has_tracing_session_id(&has_bits);
          _impl_.tracing_session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional bool enable_extra_guardrails = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 48)) {
          _Internal::set_has_enable_extra_guardrails(&has_bits);
          _impl_.enable_extra_guardrails_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional uint32 stop_timeout_ms = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 56)) {
          _Internal::set_has_stop_timeout_ms(&has_bits);
          _impl_.stop_timeout_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.DataSourceConfig.SessionInitiator session_initiator = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 64)) {
          ::int32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::perfetto::protos::DataSourceConfig_SessionInitiator_IsValid(static_cast<int>(val)))) {
            _internal_set_session_initiator(static_cast<::perfetto::protos::DataSourceConfig_SessionInitiator>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(8, val, mutable_unknown_fields());
          }
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.FtraceConfig ftrace_config = 100 [lazy = true];
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_ftrace_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.ChromeConfig chrome_config = 101;
      case 101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_chrome_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.InodeFileConfig inode_file_config = 102 [lazy = true];
      case 102:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_inode_file_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.ProcessStatsConfig process_stats_config = 103 [lazy = true];
      case 103:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_process_stats_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.SysStatsConfig sys_stats_config = 104 [lazy = true];
      case 104:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_sys_stats_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.HeapprofdConfig heapprofd_config = 105 [lazy = true];
      case 105:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_heapprofd_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.AndroidPowerConfig android_power_config = 106 [lazy = true];
      case 106:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_android_power_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.AndroidLogConfig android_log_config = 107 [lazy = true];
      case 107:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_android_log_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.GpuCounterConfig gpu_counter_config = 108 [lazy = true];
      case 108:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_gpu_counter_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.PackagesListConfig packages_list_config = 109 [lazy = true];
      case 109:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_packages_list_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.JavaHprofConfig java_hprof_config = 110 [lazy = true];
      case 110:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_java_hprof_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.PerfEventConfig perf_event_config = 111 [lazy = true];
      case 111:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_perf_event_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.VulkanMemoryConfig vulkan_memory_config = 112 [lazy = true];
      case 112:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_vulkan_memory_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.TrackEventConfig track_event_config = 113 [lazy = true];
      case 113:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_track_event_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.AndroidPolledStateConfig android_polled_state_config = 114 [lazy = true];
      case 114:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_android_polled_state_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.InterceptorConfig interceptor_config = 115;
      case 115:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_interceptor_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.AndroidGameInterventionListConfig android_game_intervention_list_config = 116 [lazy = true];
      case 116:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_android_game_intervention_list_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.StatsdTracingConfig statsd_tracing_config = 117 [lazy = true];
      case 117:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_statsd_tracing_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.AndroidSystemPropertyConfig android_system_property_config = 118 [lazy = true];
      case 118:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_android_system_property_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.SystemInfoConfig system_info_config = 119;
      case 119:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_system_info_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.NetworkPacketTraceConfig network_packet_trace_config = 120 [lazy = true];
      case 120:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_network_packet_trace_config(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional bool prefer_suspend_clock_for_duration = 122;
      case 122:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 208)) {
          _Internal::set_has_prefer_suspend_clock_for_duration(&has_bits);
          _impl_.prefer_suspend_clock_for_duration_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional string legacy_config = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_legacy_config();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "perfetto.protos.DataSourceConfig.legacy_config");
          #endif  // !NDEBUG
        } else {
          goto handle_unusual;
        }
        continue;
      // optional .perfetto.protos.TestConfig for_testing = 1001;
      case 1001:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_for_testing(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* DataSourceConfig::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.DataSourceConfig)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
                                "perfetto.protos.DataSourceConfig.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional uint32 target_buffer = 2;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_target_buffer(), target);
  }

  // optional uint32 trace_duration_ms = 3;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_trace_duration_ms(), target);
  }

  // optional uint64 tracing_session_id = 4;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_tracing_session_id(), target);
  }

  // optional bool enable_extra_guardrails = 6;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_enable_extra_guardrails(), target);
  }

  // optional uint32 stop_timeout_ms = 7;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_stop_timeout_ms(), target);
  }

  // optional .perfetto.protos.DataSourceConfig.SessionInitiator session_initiator = 8;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        8, this->_internal_session_initiator(), target);
  }

  // optional .perfetto.protos.FtraceConfig ftrace_config = 100 [lazy = true];
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(100, _Internal::ftrace_config(this),
        _Internal::ftrace_config(this).GetCachedSize(), target, stream);
  }

  // optional .perfetto.protos.ChromeConfig chrome_config = 101;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(101, _Internal::chrome_config(this),
        _Internal::chrome_config(this).GetCachedSize(), target, stream);
  }

  // optional .perfetto.protos.InodeFileConfig inode_file_config = 102 [lazy = true];
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(102, _Internal::inode_file_config(this),
        _Internal::inode_file_config(this).GetCachedSize(), target, stream);
  }

  // optional .perfetto.protos.ProcessStatsConfig process_stats_config = 103 [lazy = true];
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(103, _Internal::process_stats_config(this),
        _Internal::process_stats_config(this).GetCachedSize(), target, stream);
  }

  // optional .perfetto.protos.SysStatsConfig sys_stats_config = 104 [lazy = true];
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(104, _Internal::sys_stats_config(this),
        _Internal::sys_stats_config(this).GetCachedSize(), target, stream);
  }

  // optional .perfetto.protos.HeapprofdConfig heapprofd_config = 105 [lazy = true];
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(105, _Internal::heapprofd_config(this),
        _Internal::heapprofd_config(this).GetCachedSize(), target, stream);
  }

  // optional .perfetto.protos.AndroidPowerConfig android_power_config = 106 [lazy = true];
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(106, _Internal::android_power_config(this),
        _Internal::android_power_config(this).GetCachedSize(), target, stream);
  }

  // optional .perfetto.protos.AndroidLogConfig android_log_config = 107 [lazy = true];
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(107, _Internal::android_log_config(this),
        _Internal::android_log_config(this).GetCachedSize(), target, stream);
  }

  // optional .perfetto.protos.GpuCounterConfig gpu_counter_config = 108 [lazy = true];
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(108, _Internal::gpu_counter_config(this),
        _Internal::gpu_counter_config(this).GetCachedSize(), target, stream);
  }

  // optional .perfetto.protos.PackagesListConfig packages_list_config = 109 [lazy = true];
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(109, _Internal::packages_list_config(this),
        _Internal::packages_list_config(this).GetCachedSize(), target, stream);
  }

  // optional .perfetto.protos.JavaHprofConfig java_hprof_config = 110 [lazy = true];
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(110, _Internal::java_hprof_config(this),
        _Internal::java_hprof_config(this).GetCachedSize(), target, stream);
  }

  // optional .perfetto.protos.PerfEventConfig perf_event_config = 111 [lazy = true];
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(111, _Internal::perf_event_config(this),
        _Internal::perf_event_config(this).GetCachedSize(), target, stream);
  }

  // optional .perfetto.protos.VulkanMemoryConfig vulkan_memory_config = 112 [lazy = true];
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(112, _Internal::vulkan_memory_config(this),
        _Internal::vulkan_memory_config(this).GetCachedSize(), target, stream);
  }

  // optional .perfetto.protos.TrackEventConfig track_event_config = 113 [lazy = true];
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(113, _Internal::track_event_config(this),
        _Internal::track_event_config(this).GetCachedSize(), target, stream);
  }

  // optional .perfetto.protos.AndroidPolledStateConfig android_polled_state_config = 114 [lazy = true];
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(114, _Internal::android_polled_state_config(this),
        _Internal::android_polled_state_config(this).GetCachedSize(), target, stream);
  }

  // optional .perfetto.protos.InterceptorConfig interceptor_config = 115;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(115, _Internal::interceptor_config(this),
        _Internal::interceptor_config(this).GetCachedSize(), target, stream);
  }

  // optional .perfetto.protos.AndroidGameInterventionListConfig android_game_intervention_list_config = 116 [lazy = true];
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(116, _Internal::android_game_intervention_list_config(this),
        _Internal::android_game_intervention_list_config(this).GetCachedSize(), target, stream);
  }

  // optional .perfetto.protos.StatsdTracingConfig statsd_tracing_config = 117 [lazy = true];
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(117, _Internal::statsd_tracing_config(this),
        _Internal::statsd_tracing_config(this).GetCachedSize(), target, stream);
  }

  // optional .perfetto.protos.AndroidSystemPropertyConfig android_system_property_config = 118 [lazy = true];
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(118, _Internal::android_system_property_config(this),
        _Internal::android_system_property_config(this).GetCachedSize(), target, stream);
  }

  // optional .perfetto.protos.SystemInfoConfig system_info_config = 119;
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(119, _Internal::system_info_config(this),
        _Internal::system_info_config(this).GetCachedSize(), target, stream);
  }

  // optional .perfetto.protos.NetworkPacketTraceConfig network_packet_trace_config = 120 [lazy = true];
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(120, _Internal::network_packet_trace_config(this),
        _Internal::network_packet_trace_config(this).GetCachedSize(), target, stream);
  }

  // optional bool prefer_suspend_clock_for_duration = 122;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        122, this->_internal_prefer_suspend_clock_for_duration(), target);
  }

  // optional string legacy_config = 1000;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_legacy_config();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
                                "perfetto.protos.DataSourceConfig.legacy_config");
    target = stream->WriteStringMaybeAliased(1000, _s, target);
  }

  // optional .perfetto.protos.TestConfig for_testing = 1001;
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1001, _Internal::for_testing(this),
        _Internal::for_testing(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.DataSourceConfig)
  return target;
}

::size_t DataSourceConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.DataSourceConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional string legacy_config = 1000;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                      this->_internal_legacy_config());
    }

    // optional .perfetto.protos.FtraceConfig ftrace_config = 100 [lazy = true];
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ftrace_config_);
    }

    // optional .perfetto.protos.ChromeConfig chrome_config = 101;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.chrome_config_);
    }

    // optional .perfetto.protos.InodeFileConfig inode_file_config = 102 [lazy = true];
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.inode_file_config_);
    }

    // optional .perfetto.protos.ProcessStatsConfig process_stats_config = 103 [lazy = true];
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.process_stats_config_);
    }

    // optional .perfetto.protos.SysStatsConfig sys_stats_config = 104 [lazy = true];
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.sys_stats_config_);
    }

    // optional .perfetto.protos.HeapprofdConfig heapprofd_config = 105 [lazy = true];
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.heapprofd_config_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .perfetto.protos.AndroidPowerConfig android_power_config = 106 [lazy = true];
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.android_power_config_);
    }

    // optional .perfetto.protos.AndroidLogConfig android_log_config = 107 [lazy = true];
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.android_log_config_);
    }

    // optional .perfetto.protos.GpuCounterConfig gpu_counter_config = 108 [lazy = true];
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.gpu_counter_config_);
    }

    // optional .perfetto.protos.PackagesListConfig packages_list_config = 109 [lazy = true];
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.packages_list_config_);
    }

    // optional .perfetto.protos.JavaHprofConfig java_hprof_config = 110 [lazy = true];
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.java_hprof_config_);
    }

    // optional .perfetto.protos.PerfEventConfig perf_event_config = 111 [lazy = true];
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.perf_event_config_);
    }

    // optional .perfetto.protos.VulkanMemoryConfig vulkan_memory_config = 112 [lazy = true];
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.vulkan_memory_config_);
    }

    // optional .perfetto.protos.TrackEventConfig track_event_config = 113 [lazy = true];
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.track_event_config_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .perfetto.protos.AndroidPolledStateConfig android_polled_state_config = 114 [lazy = true];
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.android_polled_state_config_);
    }

    // optional .perfetto.protos.InterceptorConfig interceptor_config = 115;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.interceptor_config_);
    }

    // optional .perfetto.protos.AndroidGameInterventionListConfig android_game_intervention_list_config = 116 [lazy = true];
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.android_game_intervention_list_config_);
    }

    // optional .perfetto.protos.StatsdTracingConfig statsd_tracing_config = 117 [lazy = true];
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.statsd_tracing_config_);
    }

    // optional .perfetto.protos.AndroidSystemPropertyConfig android_system_property_config = 118 [lazy = true];
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.android_system_property_config_);
    }

    // optional .perfetto.protos.SystemInfoConfig system_info_config = 119;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.system_info_config_);
    }

    // optional .perfetto.protos.NetworkPacketTraceConfig network_packet_trace_config = 120 [lazy = true];
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.network_packet_trace_config_);
    }

    // optional .perfetto.protos.TestConfig for_testing = 1001;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.for_testing_);
    }

  }
  if (cached_has_bits & 0x7f000000u) {
    // optional uint32 target_buffer = 2;
    if (cached_has_bits & 0x01000000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_target_buffer());
    }

    // optional uint32 trace_duration_ms = 3;
    if (cached_has_bits & 0x02000000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_trace_duration_ms());
    }

    // optional uint64 tracing_session_id = 4;
    if (cached_has_bits & 0x04000000u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_tracing_session_id());
    }

    // optional uint32 stop_timeout_ms = 7;
    if (cached_has_bits & 0x08000000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_stop_timeout_ms());
    }

    // optional .perfetto.protos.DataSourceConfig.SessionInitiator session_initiator = 8;
    if (cached_has_bits & 0x10000000u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_session_initiator());
    }

    // optional bool prefer_suspend_clock_for_duration = 122;
    if (cached_has_bits & 0x20000000u) {
      total_size += 3;
    }

    // optional bool enable_extra_guardrails = 6;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DataSourceConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DataSourceConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DataSourceConfig::GetClassData() const { return &_class_data_; }


void DataSourceConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DataSourceConfig*>(&to_msg);
  auto& from = static_cast<const DataSourceConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.DataSourceConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_legacy_config(from._internal_legacy_config());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_ftrace_config()->::perfetto::protos::FtraceConfig::MergeFrom(
          from._internal_ftrace_config());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_chrome_config()->::perfetto::protos::ChromeConfig::MergeFrom(
          from._internal_chrome_config());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_inode_file_config()->::perfetto::protos::InodeFileConfig::MergeFrom(
          from._internal_inode_file_config());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_process_stats_config()->::perfetto::protos::ProcessStatsConfig::MergeFrom(
          from._internal_process_stats_config());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_sys_stats_config()->::perfetto::protos::SysStatsConfig::MergeFrom(
          from._internal_sys_stats_config());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_heapprofd_config()->::perfetto::protos::HeapprofdConfig::MergeFrom(
          from._internal_heapprofd_config());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_android_power_config()->::perfetto::protos::AndroidPowerConfig::MergeFrom(
          from._internal_android_power_config());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_android_log_config()->::perfetto::protos::AndroidLogConfig::MergeFrom(
          from._internal_android_log_config());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_gpu_counter_config()->::perfetto::protos::GpuCounterConfig::MergeFrom(
          from._internal_gpu_counter_config());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_packages_list_config()->::perfetto::protos::PackagesListConfig::MergeFrom(
          from._internal_packages_list_config());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_java_hprof_config()->::perfetto::protos::JavaHprofConfig::MergeFrom(
          from._internal_java_hprof_config());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_mutable_perf_event_config()->::perfetto::protos::PerfEventConfig::MergeFrom(
          from._internal_perf_event_config());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_mutable_vulkan_memory_config()->::perfetto::protos::VulkanMemoryConfig::MergeFrom(
          from._internal_vulkan_memory_config());
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_internal_mutable_track_event_config()->::perfetto::protos::TrackEventConfig::MergeFrom(
          from._internal_track_event_config());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_internal_mutable_android_polled_state_config()->::perfetto::protos::AndroidPolledStateConfig::MergeFrom(
          from._internal_android_polled_state_config());
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_internal_mutable_interceptor_config()->::perfetto::protos::InterceptorConfig::MergeFrom(
          from._internal_interceptor_config());
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_internal_mutable_android_game_intervention_list_config()->::perfetto::protos::AndroidGameInterventionListConfig::MergeFrom(
          from._internal_android_game_intervention_list_config());
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_internal_mutable_statsd_tracing_config()->::perfetto::protos::StatsdTracingConfig::MergeFrom(
          from._internal_statsd_tracing_config());
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_internal_mutable_android_system_property_config()->::perfetto::protos::AndroidSystemPropertyConfig::MergeFrom(
          from._internal_android_system_property_config());
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_internal_mutable_system_info_config()->::perfetto::protos::SystemInfoConfig::MergeFrom(
          from._internal_system_info_config());
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_internal_mutable_network_packet_trace_config()->::perfetto::protos::NetworkPacketTraceConfig::MergeFrom(
          from._internal_network_packet_trace_config());
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_internal_mutable_for_testing()->::perfetto::protos::TestConfig::MergeFrom(
          from._internal_for_testing());
    }
  }
  if (cached_has_bits & 0x7f000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.target_buffer_ = from._impl_.target_buffer_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.trace_duration_ms_ = from._impl_.trace_duration_ms_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.tracing_session_id_ = from._impl_.tracing_session_id_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.stop_timeout_ms_ = from._impl_.stop_timeout_ms_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.session_initiator_ = from._impl_.session_initiator_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.prefer_suspend_clock_for_duration_ = from._impl_.prefer_suspend_clock_for_duration_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.enable_extra_guardrails_ = from._impl_.enable_extra_guardrails_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DataSourceConfig::CopyFrom(const DataSourceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.DataSourceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataSourceConfig::IsInitialized() const {
  return true;
}

void DataSourceConfig::InternalSwap(DataSourceConfig* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.legacy_config_, lhs_arena,
                                       &other->_impl_.legacy_config_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DataSourceConfig, _impl_.enable_extra_guardrails_)
      + sizeof(DataSourceConfig::_impl_.enable_extra_guardrails_)
      - PROTOBUF_FIELD_OFFSET(DataSourceConfig, _impl_.ftrace_config_)>(
          reinterpret_cast<char*>(&_impl_.ftrace_config_),
          reinterpret_cast<char*>(&other->_impl_.ftrace_config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DataSourceConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto_getter, &descriptor_table_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto_once,
      file_level_metadata_protos_2fperfetto_2fconfig_2fdata_5fsource_5fconfig_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::perfetto::protos::DataSourceConfig*
Arena::CreateMaybeMessage< ::perfetto::protos::DataSourceConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::DataSourceConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
